<?xml version="1.0" encoding="Shift_JIS" ?>
<doc>
<title>コマンドラインオプション</title>

<para>
<ptitle>コマンドラインオプション</ptitle>
　吉里吉里のコマンドラインオプションは通常のコマンドラインから指定するほかに、<link href="Releaser" /> ( krkrrel.exe ) または <link href="Configure" /> ( krkrconf.exe または エンジン設定.exe ) で設定ファイルに保存することができます。<r/>
オプションが読み込まれる順序は
<ol>
  <li>吉里吉里本体に埋め込まれたオプション</li>
  <li>「吉里吉里設定」(krkrconf.exe)が出力した、吉里吉里コアと同じディレクトリにある .cf ファイル (ファイル名は吉里吉里コアと同じ)</li>
  <li>「エンジン設定」(エンジン設定.exe)が出力した、データ保存場所にある .cfu ファイル (ファイル名は吉里吉里コアと同じ)</li>
  <li>コマンドラインに指定されたオプション</li>
</ol>
となります。.cf ファイルや .cfu ファイルについては、存在しない場合は単に無視されます。後に読み込んだ指定ほど優先されます。現在のところ、吉里吉里本体にオプションを埋め込むことができるツールが無いため、吉里吉里本体からオプションの内容が読み込まれることはありません (ただし、コマンドラインから指定できない特殊なオプションなどが吉里吉里本体に埋め込まれる場合があります)。<r/>
<r/>
　コマンドラインのオプションは基本的に '-' (ハイフン) に引き続き、オプションの名前が来ます。そのあとそれに引き続き '=' を書き、オプションの値を書きます。<r/>
　たとえば -cdvol というオプションの値が direct ならば、-cdvol=direct と指定します。<r/>
<r/>
　「起動オプション」や「デバッグ関連のオプション」や「システム互換性関連のオプション」を除けば、ほとんどは環境依存の問題を解決するための微調整を行うオプションです。<r/>
　環境依存の問題の解決については<link href="ComputerDependentProblems" />も参照してください。<r/>
<r/>
<note>
Releaser や krkrconf.exe ( エンジン設定.exe ) では、吉里吉里の実行可能ファイルや外部の設定ファイルを書き換えてこれらのオプションを変更できますが、通常はデフォルトのままで問題ありません。<b>作品を制作する側固有の環境で問題があるということで、これらのオプションをデフォルトの物でないものに変えたままの実行可能ファイルや設定ファイルを一般に配布することはおすすめできません</b> (もちろん -datapath のように配布形態や使用形態にしたがって設定すべきオプションもあります)。
</note>
<r/>
下のリストの中で「動的に変更可能」という表記がある物は、<a href="f_System_setArgument.html">System.setArgument</a> メソッドで変更が可能な物です。それ以外のオプションは動的に変更を行うことは出来ません。<r/>
</para>



<para>
<ptitle>起動オプション</ptitle>
　吉里吉里の特定の機能のみを呼び出して使うために以下のオプションがあります。<r/>
<dl>
<dt>-<kw>userconf</kw> (エンドユーザ向け設定ツールの起動)</dt>
<dd>
　本体に内蔵されているエンドユーザ向け設定ツールを起動します。<r/>
　エンジン設定.exe は、エンジン設定.exe と同じフォルダにある吉里吉里実行可能ファイルを探し、自動的に -userconf オプションをつけて起動するプログラムです。
</dd>
<dt>-<kw>about</kw> (著作権情報ダイアログボックスの表示)</dt>
<dd>
　「バージョン・著作権・環境情報」のダイアログボックスを表示します。
</dd>
<dt>-<kw>nosel</kw> (テストモード)</dt>
<dd>
　「フォルダ/アーカイブの選択」ダイアログボックスを表示せず、また、data.xp3 などのデータを自動検出せずに、吉里吉里コントローラを起動します。デバッグやテスト用途に使用します。
</dd>
<dt>-<kw>sel</kw> (「フォルダ/アーカイブの選択」ダイアログボックスの表示)</dt>
<dd>
　「フォルダ/アーカイブの選択」ダイアログボックスを表示します。data.xp3 などのデータは自動検出されません。<r/>
　コマンドラインパラメータとして(先頭にハイフンをつけずに)フォルダを指定すると、そのフォルダが初期状態で選択された状態で「フォルダ/アーカイブの選択」ダイアログボックスを開くことができます。
</dd>
<dt>-<kw>printdatapath</kw> (データ保存場所の出力)</dt>
<dd>
　データ保存場所 (-datapathオプション) の設定内容と改行を標準出力に出力し、終了します。このオプションは、吉里吉里本体と連携してセーブデータの管理を行う外部アプリケーションなどが利用するためにあります。<r/>
　データ保存場所のうち、$(exepath) などの特殊な文字列は、置き換えられた後の状態で出力されます。<r/>
　吉里吉里本体は GUI アプリケーションのため、コマンドプロンプトから単に吉里吉里実行可能ファイルに -printdatapath オプションを指定して起動しても何も表示されません。出力内容を取り込むにはパイプやリダイレクトを用いてください。<r/>
</dd>
</dl>
</para>

<para>
<ptitle>システム全般のオプション</ptitle>
<dl>
<dt>-<kw>datapath</kw> (データ保存場所)</dt>
<dd>
　吉里吉里が様々なデータを保存する場所(フォルダ)の設定です。<r/>
　設定可能な値は文字列で指定します。<r/>
　単純にフォルダ名をフルパスで指定することもできますが、通常は以下の特殊な文字列を埋め込んで使います。<r/>
<r/>
<dl>
 <dt>$(exepath)</dt> <dd>System.exePath(吉里吉里コアのあるフォルダ名)に置き換えられます。</dd>
 <dt>$(appdatapath)</dt> <dd>System.appDataPath(ユーザのホームフォルダ)に置き換えられます。このフォルダは通常、隠しフォルダになっています。</dd>
 <dt>$(personalpath)</dt> <dd>System.personalPath(マイドキュメントフォルダ)に置き換えられます。</dd>
 <dt>$(vistapath)</dt> <dd>OSがVista以降の場合に$(appdatapath)に、Vista未満の場合に$(exepath)に置き置き換えられます。</dd>
</dl>
<r/>
デフォルトでは「$(exepath)\savedata」となっています。この設定は、インストーラなどを特に用いずにプログラムを zip 等で圧縮・アーカイブして配布し、ユーザにそれを展開して頂いてすぐにプログラム実行、という配布形態に適した設定です。<r/>
しかし、このデフォルトの設定では、Program Files 以下にプログラムを配置した場合、Program Files 以下に書き込む権限がない、Windows XP 等の「制限ユーザ」等でプログラムを起動した場合に、ファイルを書き込むことができずにエラーになる可能性があります。<r/>
「$(appdatapath)\アプリケーション名」や「$(personalpath)\アプリケーション名」のような名称にすれば、ユーザごとのフォルダに書き込まれることになりますのでこういう問題は発生しにくくなりますが、セーブデータ保存場所の見通しが悪くなるのでユーザがとまどうかもしれません。<r/>
<r/>
このオプションで指定されたデータ保存場所は、吉里吉里起動時に、もし存在していなければ作成が試みられます。作成が失敗してもそこで終了とはならずに処理が続行しますので、エラー処理はユーザのスクリプト内で(データが保存できないなどの例外を捕捉することにより)行ってください。<r/>
<r/>
「エンジン設定」で行った設定は、このデータ保存場所で指定したフォルダの中に作成されます。そのほか、各種ログも、標準ではこのフォルダの中に作成されます。<r/>
</dd>

<dt>-<kw>contfreq</kw> (処理ウェイト)</dt>
<dd>
　トランジション時などの処理をウェイトをかけながら指定の周期で呼び出すことにより、CPU使用率を低減させるかどうかの設定です。<r/>
　設定可能な値は <b>'0' (ウェイトをかけない)</b> あるいは正の整数で、このオプションを指定しないと '0' が指定されたものと見なされます。正の整数を指定した場合は Hz 単位の周期を指定することができます。<r/>
　このオプションの影響を受けるのはトランジションや System.addContinuousHandler で登録した Continuous ハンドラです。<r/>
　'0' にすると、トランジションを実行中などにCPUを使い切って処理を行います。<r/>
　数値を指定すると、その周期で処理を行うようになり、余った時間はCPUを休ませることになります。これにより、他のアプリケーションへの影響や、CPU温度の上昇、コンピュータの消費電力を抑えることができます。低い数値を指定すればするほどこの効果は高まります。ただし、低い数値を指定するとトランジションなどがなめらかでなくなる可能性があります。<r/>
　waitvsync オプションで垂直同期待ちを行うと、Continuous ハンドラが垂直同期のタイミングに合わせて駆動されるようになり、contfreq オプションの設定内容は無視されます。<r/>
　このオプションは動的に変更することが可能ですが、変更が反映されるのは次にトランジションや Continuous ハンドラの動作がとぎれた時です。<r/>
</dd>




<dt>-<kw>memusage</kw> (メモリ使用量)</dt>
<dd>
　メモリ使用量の設定です。<r/>
　設定可能な値は <b>'normal' (通常)</b> あるいは <b>'low' (低い)</b> で、このオプションを指定しないと 'normal' が指定されたものと見なされます。<r/>
　「低い」を選択すると「通常」を選択したときよりもメモリを節約して使用するようになります。しかし「低い」を選択すると、吉里吉里内部の様々なキャッシュ機構が制限されたり、 TJS2 のハッシュ表のサイズが制限されるため、パフォーマンスは低下します。また、「低い」を選択すると、「グラフィック-画像キャッシュ制限」は強制的に「キャッシュを行わない」の設定であると見なされます。
</dd>
<dt>-<kw>timerprec</kw> (タイマの精度)</dt>
<dd>
　タイマの精度の高さの設定です。<r/>
　設定可能な値は <b>'normal' (通常)</b> あるいは <b>'higher' (やや高い)</b> あるいは <b>'high' (高い)</b> で、このオプションを指定しないと 'normal' が指定されたものと見なされます。<r/>
　このオプションは NT 系 OS ( NT/2000/XP/Vista/7 ) でのみ意味を持ちます。Win9x 系の OS ( 95/98/98SE/ME ) ではこのオプションは無視されます。<r/>
　'higher' や 'high' を指定すると全体的にタイマ ( 時間やタイミングに関する物のほとんども含む ) の精度が高くなり、KAG での文字表示のもたつき感や MIDI 再生のもたつき感が解消される可能性がありますが、パフォーマンスが低下する可能性もあります。
</dd>

<dt>-<kw>laxtimer</kw> (タイマイベント許容量制限)</dt>
<dd>
　一度にシステムに蓄えられるタイマイベントの数 ( 最大発生許容量 ) を制限し、タイマイベントが溜まりすぎて処理できなくなる状況を回避するかどうかの設定です。<r/>
　設定可能な値は <b>'no' (しない)</b> あるいは <b>'yes' (する)</b> で、このオプションを指定しないと 'no' が指定されたものと見なされます。<r/>
　処理の非常に遅いコンピュータや、非常に重たい処理をタイマで駆動するような場面などでは、タイマによって発生したイベントに対応しきれず、操作などに吉里吉里が応答しづらくなる場合があります。このオプションで 'yes' を指定すると、システムに蓄えられるタイマイベントの最大発生許容量を常に 1 ( Timer クラスの capacity プロパティが 1 の状態 ) に固定します。これによりシステムが処理しきれないようなタイマイベントの発生を抑えることができますが、通常、タイマの精度や正確性は失われます。<r/>
</dd>

<dt>-<kw>lowpri</kw> (低優先度)</dt>
<dd>
　優先度を、トランジション時などに低くするかどうかの設定です。<r/>
　設定可能な値は <b>'no' (しない)</b> あるいは <b>'yes' (する)</b> で、このオプションを指定しないと 'no' が指定されたものと見なされます。<r/>
　'yes' にすると、トランジションを実行中など、吉里吉里のメインスレッドが連続して CPU を使用する場面になると、メインスレッドの実行優先度を下げるようになります。これにより、トランジション中の音飛びや、トランジション中に他のアプリケーションが操作しづらくなるなどの症状が改善される場合があります。
</dd>




</dl>



</para>

<para>
<ptitle>入力関連のオプション</ptitle>
<dl>

<dt>-<kw>wheel</kw> (マウスホイール回転検出方法)</dt>
<dd>
　マウスホイールの回転をどのように検出するかの設定です。<r/>
　設定可能な値は <b>'no' (使わない)</b> あるいは <b>'dinput' (DierctInput)</b> あるいは <b>'message' (ウィンドウメッセージ)</b> で、このオプションを指定しないと 'dinput' が指定されたものと見なされます。<r/>
　「使わない」を選択するとマウスホイールは使用不可能になります。「DirectInput」を選択するとDirectInputを使用するようになります。「ウィンドウメッセージ」を選択するとDirectInputを使用せずにマウスホイールの回転を検出するようになります。設定を変えると、マウスホイール関連の不具合が改善される可能性があります。
</dd>

<dt>-<kw>joypad</kw> (パッド使用可否)</dt>
<dd>
ゲームパッド(ジョイスティック)を使用するかどうかの設定です。<r/>
　設定可能な値は <b>'no' (使わない)</b> あるいは <b>'dinput' (使う)</b> で、このオプションを指定しないと 'dinput' が指定されたものと見なされます。<r/>
　「使わない」を選択するとパッドは使用不可能になります。パッドを正常に検出できない場合、あるいはパッドを正常に使用できない場合に「使わない」の設定にしてください。</dd>


<dt>-<kw>paddelay</kw> (パッドキーリピートディレイ)</dt>
<dd>
ゲームパッド(ジョイスティック)のキーリピートまでの時間をミリ秒単位で指定します。<r/>
　設定可能な値は正の数あるいは-1で、-1を指定するとキーリピートを行わなくなります。このオプションを指定しないと 500 が指定されたものと見なされます。<r/>
　このオプションは動的に変更可能です。
</dd>


<dt>-<kw>padinterval</kw> (パッドキーリピート間隔)</dt>
<dd>
パッド(ジョイスティック)のキーリピートの間隔をミリ秒単位で指定します。値が小さいほどリピートが高速になります。<r/>
　設定可能な値は正の数で、このオプションを指定しないと 30 が指定されたものと見なされます<r/>
　このオプションは動的に変更可能です。
</dd>


<dt>-<kw>controlime</kw> (IME状態制御)</dt>
<dd>
　IME(日本語などの変換入力ソフト)の状態制御(有効か無効かなどの制御)を行うかどうかの設定です。<r/>
　設定可能な値は <b>'yes' (行う)</b> あるいは <b>'no' (行わない)</b> で、このオプションを指定しないと 'yes' が指定されたものと見なされます。<r/>
　「行わない」を選択すると、「IMEを通じて入力を行う日本語などの言語の入力ができない」といった不具合を回避できる可能性があります。<r/>
</dd>

</dl>

</para>

<para>
<ptitle>サウンド関連のオプション</ptitle>
<dl>
<dt>-<kw>cdvol</kw> (CD-DA 音量制御方法)</dt>
<dd>
　CD-DA 音量制御方式の設定です。<r/>
　設定可能な値は <b>'mixer' (サウンドカードミキサ)</b> あるいは <b>'direct' (CD-ROMドライブ直接制御)</b> で、このオプションを指定しないと 'mixer' が指定されたものと見なされます。<r/>
　'mixer' を指定するとサウンドカードのミキサを操作して CD-DA の音量を変化させます。CD-ROM ドライブから人間の耳に達するまでの経路にサウンドカードが適切に挟まっている必要があります。<r/>
　'direct' を指定すると CD-ROM ドライブそれ自身が持っている音量制御の機能を使って音量を変化させます。CD-ROM ドライブのヘッドホン端子から直接ヘッドホンなどを接続している場合などでも音量の制御ができますが、CD-ROM ドライブによっては対応していないものもあります。
</dd>

<dt>-<kw>wsdecpri</kw> (PCM デコードスレッド優先順位)</dt>
<dd>
　PCM のデコードを行うスレッドの優先順位です。<r/>
　設定可能な値は <b>'0' (アイドル(最低))</b>, <b>'1' (低い)</b>, <b>'2' (通常以下)</b>, <b>'3' (通常)</b>, <b>'4' (通常以上)</b>, <b>'5' (高い)</b> のいずれかで、このオプションを指定しないと '1' が指定されたものと見なされます。<r/>
　優先順位を高くすると PCM ( 無圧縮 wave や OggVorbis 等 ) の再生中の音飛びが軽減される場合がありますが、トランジションがなめらかでなくなったり、操作への応答性が悪くなる可能性があります。<r/>
　ちなみにここで指定するのは通常時のデコードの優先順位で、緊急時 ( バッファにたまっている残りデータが短くなってきたとき ) は自動的に必要な優先順位を確保します。
</dd>

<dt>-<kw>wssoft</kw> (DirectSound ソフトウェアミキシング)</dt>
<dd>
　DirectSoundでソフトウェアを使ってミキシングを行うかどうかの設定です。<r/>
　設定可能な値は <b>'yes' (ソフトウェアミキシングを行う)</b>, <b>'no' (ソフトウェアミキシングを行わない)</b> のいずれかで、このオプションを指定しないと 'yes' が指定されたものと見なされます。<r/>
　標準の設定では、ソフトウェアでミキシングを行うので、CPUの負荷が高くなりますが、ハードウェア固有の不具合を回避できる可能性が高くなります。このオプションで 'no' を指定しても(ハードエアでミキシングを行っても) 問題がないならば、CPU 負荷を低くすることができる場合があります。USB オーディオや安価なサウンドカードでは、ミキシングは常に CPU で行う場合があるので、このオプションを変更しても影響が無い場合があります。
</dd>

<dt>-<kw>wsrecreate</kw> (DirectSound セカンダリバッファ再生成)</dt>
<dd>
　DirectSoundでセカンダリバッファを常に再生成を行うかどうかの設定です。<r/>
　設定可能な値は <b>'yes' (常に再生成)</b>, <b>'no' (必要に応じて再生成)</b> のいずれかで、このオプションを指定しないと 'no' が指定されたものと見なされます。<r/>
　吉里吉里ではいったん作成したセカンダリバッファは、チャネル数やサンプリング周波数などの条件が同一であれば再利用しますが、'yes' を指定すると再利用をせずに常に再生成するようになります。環境によっては再生開始時の音飛びや音切れなどの不安定性が改善される可能性があります。
</dd>

<dt>-<kw>wsl1len</kw> (DirectSound セカンダリバッファ長さ)</dt>
<dd>
　DirectSound セカンダリバッファの長さの設定です。<r/>
　設定可能な値は 整数で、ミリ秒単位で指定します。最低 250ms 必要です。このオプションを指定しないと 1000 が指定されたものと見なされます。<r/>
　ここで指定するのは実際に DirectSound のセカンダリバッファとして確保されるバッファの長さです。<r/>
　一般に、長くとると再生は安定しますが、メモリを消費します。
</dd>

<dt>-<kw>wsl2len</kw> (DirectSound セカンダリ補助バッファ長さ)</dt>
<dd>
　DirectSound セカンダリバッファ用の２次バッファの長さの設定です。<r/>
　設定可能な値は 整数で、ミリ秒単位で指定します。最低 250ms 必要です。このオプションを指定しないと 1000 が指定されたものと見なされます。<r/>
　吉里吉里は、DirectSound のセカンダリバッファごとに補助バッファを作成し、いったんデコードしたデータをこの補助バッファに蓄積してからセカンダリバッファに転送します。ここで指定するバッファの長さはその補助バッファの長さです。<r/>
　通常、デコード処理と補助バッファへの蓄積は優先度の低いスレッドで行われますが、補助バッファからセカンダリバッファへの転送は高い優先度を持ったスレッドで行われます。<r/>
　一般に、長くとると再生は安定しますが、メモリを消費します。また、デコード処理に変化を加えるような制御をした場合、それが実際に発音されるまでのディレイが長くなります。
</dd>

<dt>-<kw>wsmute</kw> (DirectSound ミュート)</dt>
<dd>
　DirectSoundでアプリケーションが非アクティブあるいは最小化した際にミュートするか(音量を下げるか)の設定です。<r/>
　設定可能な値は <b>'never' (ミュートしない)</b>, <b>'minimize' (最小化時)</b>, <b>'deactive' (非アクティブ時)</b> のいずれかで、このオプションを指定しないと 'never' が指定されたものと見なされます。<r/>
　'never' を選択するとミュートは行われません。'minimize' や 'deactive' では、それぞれアプリケーションが最小化したとき、非アクティブになったときにミュートされます。<r/>
　ミュートされるのは WaveSoundBuffer で再生される物 ( KAGの場合は BGM に 'Wave' を使っている場合と、効果音 ) だけで、MIDI や CDDA 再生はミュートされません。
</dd>

<dt>-<kw>wsmutevol</kw> (DirectSound ミュート音量)</dt>
<dd>
　-wsmute (DirectSound ミュート) でのミュート時の音量の設定です。<r/>
　設定可能な値は 整数で、% 単位で指定します。<r/>
　「0%」を指定すると完全に無音となり、「50%」を指定すると半分の音量(約-6dB)となります。<r/>
</dd>


<dt>-<kw>wsforcecnv</kw> (DirectSound 強制フォーマット変換)</dt>
<dd>
　DirectSoundに再生させるPCMデータを、指定の形式に強制的に変換するかどうかの設定です。<r/>
　設定可能な値は <b>'none' (変換しない)</b>, <b>'i16' (16bit整数に変換)</b> , <b>'i16m' (16bit整数モノラルに変換)</b> のいずれかで、このオプションを指定しないと 'none' が指定されたものと見なされます。<r/>
　設定を変更すると再生時の障害が改善する場合があります。'i16m' を選択すると -wsexpandquad オプション ( DirectSound 強制4ch再生 ) の設定は無視されます。
</dd>

<dt>-<kw>wsuse3d</kw> (DirectSound 3D制御)</dt>
<dd>
　DirectSoundで3D制御を行うかどうかの設定です。<r/>
　設定可能な値は <b>'no' (しない)</b>, <b>'yes' (する)</b> のいずれかで、このオプションを指定しないと 'no' が指定されたものと見なされます。<r/>
　'yes' を選択すると、サウンドの 3D制御が有効になり、WaveSoundBuffer.posX, WaveSoundBuffer.posY, WaveSoundBuffer.posZ プロパティが有効になります (これらのプロパティは現バージョンでは既に実装されていますが、サポート外です)。<r/>
　また、多くの環境では、'yes' を選択すると、DirectSound3D により、ステレオやモノラルのサウンドが、サラウンドスピーカーに拡張されて再生されるようになります (たとえば、フロントのスピーカーでしか再生されなかったサウンドが、5.1ch環境の全てのスピーカーで再生されるようになります)。<r/>
　'yes' を選択すると -wsexpandquad オプション ( DirectSound 強制4ch再生 ) の設定は無視されます。
</dd>



<dt>-<kw>wsexpandquad</kw> (DirectSound 強制4ch再生)</dt>
<dd>
　DirectSoundでステレオやモノラルのサウンドを再生する場合に、強制的にリアスピーカーを含む4chで再生させるかどうかの設定です。<r/>
　設定可能な値は <b>'no' (しない)</b>, <b>'yes' (する)</b> のいずれかで、このオプションを指定しないと 'no' が指定されたものと見なされます。<r/>
　'yes'を設定すると、ステレオやモノラルのサウンドがフロントスピーカーでしか再生されない環境でも、フロントスピーカーとリアスピーカーの両方でサウンドを再生させることができます。
</dd>

<dt>-<kw>wsfreq</kw> (DirectSound プライマリバッファ周波数)</dt>
<dd>
　DirectSoundのプライマリバッファの再生周波数の設定です。<r/>
　設定可能な値は 正の自然数で周波数を Hz 単位で表し、このオプションを指定しないと '44100' が指定されたものと見なされます。<r/>
　とくに WDM 系サウンドドライバを用いる環境 (Windows2000, XP以降 など) では、設定を変更しても再生状態に変化がない場合もあります。
</dd>

<dt>-<kw>wsbits</kw> (DirectSound プライマリバッファビット数)</dt>
<dd>
　DirectSoundのプライマリバッファの再生ビット数の設定です。<r/>
　設定可能な値は <b>'i8' (8bit整数)</b>, <b>'i16' (16bit整数)</b>, <b>'i24' (24bit整数)</b>, <b>'i32' (32bit整数)</b>, <b>'f32' (32bit浮動小数点数)</b> で、このオプションを指定しないと 'i16' が指定されたものと見なされます。<r/>
　とくに WDM 系サウンドドライバを用いる環境 (Windows2000, XP以降 など) では、設定を変更しても再生状態に変化がない場合もあります。
</dd>

<dt>-<kw>wscontrolpri</kw> (DirectSound プライマリバッファ再生制御)</dt>
<dd>
　DirectSoundのプライマリバッファに対して再生/停止の制御を行うかどうかの設定です。<r/>
　設定可能な値は <b>'yes' (行う)</b>, <b>'no' (行わない)</b> のいずれかで、このオプションを指定しないと 'yes' が指定されたものと見なされます。<r/>
　まれに設定を変えると音飛びや音切れが改善される環境があるようです。
</dd>

<dt>-<kw>wspritry</kw> (DirectSound プライマリバッファ設定試行レベル)</dt>
<dd>
　DirectSoundプライマリバッファのフォーマットを指定する際にどれほど多くの設定を試すかの設定です。<r/>
　設定可能な値は <b>'0' 〜 '2' (レベル0 〜 レベル2)</b>, <b>'all' (すべて)</b> のいずれかで、このオプションを指定しないと 'all' が指定されたものと見なされます。<r/>
　レベル 0 を指定すると、ステレオ 16bit整数のフォーマットの設定を試行します。<r/>
　レベル 1 を指定すると レベル 0 を試行する前に、システムのスピーカー設定に従ったチャンネル数、16bit整数でのフォーマットの設定を試行します。<r/>
　レベル 2 を指定すると レベル 1 を試行する前に、「DirectSound プライマリバッファビット数」で指定されたビット数、システムのスピーカー設定に従ったチャンネル数、WAVEFORMATEX 構造体によるフォーマットの設定を試行します。<r/>
　「すべて」を指定すると レベル 2 を試行する前に、レベル 2 と同様の設定で WAVEFORMATEXTENSIBLE 構造体によるフォーマットの指定を試行します。
</dd>
<!-- 
<dt>-<kw>_inmm</kw> (_inmm.dll)</dt>
<dd>
　irori 氏の _inmm.dll を使用するかどうかの設定です。<r/>
　設定可能な値は <b>'yes' (使用する)</b>, <b>'no' (使用しない)</b> のいずれかで、このオプションを指定しないと 'no' が指定されたものと見なされます。<r/>
　irori 氏の _inmm.dll は便利ですが、吉里吉里はその本体の構造ゆえ _inmm.dll のパッチプログラムではパッチを当てることができません。そのため吉里吉里本体側で対応しています。<r/>
　'yes' を指定するとパッチを当てたのと同様の動作をする事ができます。
</dd>
-->

</dl>
</para>

<para>
<ptitle>グラフィック関連のオプション</ptitle>
<dl>
<dt>-<kw>gclim</kw> (画像キャッシュ制限)</dt>
<dd>
　画像キャッシュに使用するメモリの最大値の設定です。<r/>
　設定可能な値は <b>'auto' (自動)</b> または整数の値で、整数の値を指定する場合は画像キャッシュに使用するメモリを MB 単位で指定します。このオプションを指定しないと 'auto' が指定されたものと見なされます。<r/>
　吉里吉里はいったん読み込んだ画像を素早くアクセスできるように画像をキャッシュする機構を持っています。それに使用するメモリの制限値を指定します。<r/>
　'auto' を指定すると、コンピュータに実装されている物理メモリの量によって自動的に値が決定されます。<r/>
　'0' を指定するとキャッシュは行いません。<r/>
　吉里吉里実行中にスワップが頻繁に発生するようであれば、この値を小さく指定するか、'0' を指定すると改善される可能性があります。
</dd>

<!-- obsoleted
<dt>-<kw>dibtype</kw> (DIB使用方法)</dt>
<dd>
　DIB(デバイス非依存ビットマップ)の扱いの設定です。<r/>
　設定可能な値は <b>'sdb' (StretchDIBits使用)</b>, <b>'drawdib' (DrawDib使用)</b>, <b>'drawdibjdi' (DrawDib使用 DDF_JUSTDRAWIT 指定)</b>, <b>'dibsect' (DIBセクション使用)</b> のいずれかで、このオプションを指定しないと 'drawdib' が指定されたものと見なされます。<r/>
　吉里吉里が画像演算などに用いるメモリの確保方法と、描画 API を指定します。<r/>
　ビデオカードやそのドライバとの相性や、 OS によっては、'drawdib' を指定するよりも適切な指定がある場合もあります。
</dd>
-->

<dt>-<kw>fsmethod</kw> (フルスクリーン切り替え方法)</dt>
<dd>
　フルスクリーン切り替えに用いる方法の設定です。<r/>
　設定可能な値は  <b>'ddraw' (DirectDraw)</b>, <b>'cds' (ChangeDisplaySettings API)</b> のいずれかで、このオプションを指定しないと 'ddraw' が指定されたものと見なされます。<r/>
　設定を変えるとフルスクリーン切り替えに関する問題が改善される場合があります。'ddraw' を指定した場合でも、DirectDraw が何らかの原因で使用できなかった場合は、自動的に ChangeDisplaySettings API を使用するようになります。<r/>
　このオプションは動的に変更することが可能ですが、値が反映されるのは次回フルスクリーンにしようとしたときです。<r/>
</dd>

<dt>-<kw>fsbpp</kw> (フルスクリーン時のカラーモード)</dt>
<dd>
　フルスクリーン時のカラーモードの設定です。<r/>
　設定可能な値は  <b>'nochange' (変えない)</b>, <b>'16' (16bitカラー)</b>, <b>'24' (24bitカラー)</b>, <b>'32' (32bitカラー)</b> のいずれかで、このオプションを指定しないと 'nochange' が指定されたものと見なされます。<r/>
　'nochange' を指定すると、非フルスクリーン時のカラーモードと同じカラーモードになります。<r/>
　このオプションは動的に変更することが可能ですが、値が反映されるのは次回フルスクリーンにしようとしたときです。<r/>
</dd>

<dt>-<kw>fsres</kw> (フルスクリーン時の画面解像度)</dt>
<dd>
　フルスクリーン時の画面解像度の設定です。<r/>
　設定可能な値は  <b>'auto' (自動)</b>, <b>'proportional' (縦横比が同じ解像度)</b> , <b>'nearest' (最も近い解像度)</b> , <b>'nochange' (解像度を変えない)</b> のいずれかで、このオプションを指定しないと 'auto' が指定されたものと見なされます。<r/>
　'auto' を選択すると、最も適している画面解像度を自動的に選択して使用します。この場合は、縦横比が同じ解像度のうち、プログラム内で指定されている解像度にフィットする解像度があればそれを選択しますが、そのような解像度がない場合は解像度を変えずにエンジン側で拡大表示をします。この設定の場合は、-fszoom (フルスクリーン時のエンジンによる拡大表示) オプションに 'no' (しない) が指定されていても、常に 'outer' (モニタ内にフィットさせる) であるとみなされます。<r/>
　'proportional' を選択すると、画面の縦横比が非フルスクリーン時と同じ解像度のうち、プログラム内で指定されている解像度と同じかそれよりも大きく、もっとも近い解像度が選択されます。<r/>
　'nearest' を選択すると、プログラム内で指定されている解像度と同じかそれよりも大きく、最も近い解像度が選択されますが、非フルスクリーン時と同じ縦横比の解像度が選択される保証はありません。ブラウン管モニタや、画面のアスペクト比を保ったままでの拡大表示に対応している液晶モニタなどでは、この設定が適している場合があります。<r/>
　'nochange' を選択すると、非フルスクリーン時の解像度のまま、解像度を変更しなくなります。<r/>
　このオプションは動的に変更することが可能ですが、値が反映されるのは次回フルスクリーンにしようとしたときです。<r/>
</dd>

<dt>-<kw>fszoom</kw> (フルスクリーン時のエンジンによる拡大表示)</dt>
<dd>
　フルスクリーン時に、エンジンによる画面の拡大をどのように行うかどうかを指定します。<r/>
　設定可能な値は  <b>'inner' (モニタ内にフィットさせる)</b>, <b>'outer' (モニタいっぱいに拡大する)</b>, <b>'no' (しない)</b> のいずれかで、このオプションを指定しないと 'inner' が指定されたものと見なされます。<r/>
　'inner' を選択すると、必要であれば、エンジンによる拡大を行います。必要な場合とは、画面解像度がプログラム内で指定された解像度と異なる場合です (もし画面解像度がプログラム内で指定された解像度よりも低い場合は縮小処理になります)。この際、プログラム内で指定されている解像度の縦横比を維持した状態での拡大を行いますが、モニタの縦横比とこの縦横比が異なる場合、上下、または左右に隙間ができる可能性があります。この隙間は常に真っ黒な状態で表示されます。<r/>
　'outer' を指定すると、'inner' を指定したときと同じく、必要であればエンジンによる拡大を行います。しかし、'inner' と違い、モニタの縦横比とプログラム内で指定されている縦横比が異なる場合、上下や左右の隙間ができないようにめいいっぱいまで拡大を行います。このため、隙間はできませんが、モニタ外に画面がはみ出す可能性があります。この設定では、たとえば 16:10 のモニタに 16:9 のコンテンツを表示する際などに、隙間をださずに、めいいっぱいまで拡大させて表示することが可能になります。もちろんこれにより、左右にはみ出す領域が発生しますので、このような表示を想定したコンテンツを制作するのならば、はみ出す部分には重要な UI や文字を表示しない、といった対策が必要になります。<r/>
　'no' を選択すると、必要であっても、エンジンによる拡大は行いません。この場合は、画面解像度がプログラム内で指定された解像度と異なっていても、エンジン側による拡大は行われません (その結果、画面中央に画像が小さく表示される可能性があります)。<r/>
　モニタの本来の解像度とグラフィックカードの出力する信号の解像度が異なる場合、液晶モニタなどではモニタ側で拡大表示を行う場合がありますが、モニタ側で拡大処理をした上で、さらにエンジン側でも拡大表示を行うと二重に拡大が行われることになり、画像が汚くなる場合がありますので注意してください (-fsres の「自動」オプションは、このような二重の拡大表示を防ぐ組み合わせを自動的に選択します)。<r/>
　拡大表示処理は -dbstyle (ダブルバッファリング) オプションの影響を受けます。速度が異常に遅いなどの場合は、-dbstyle オプションの設定も変えてみてください。<r/>
　このオプションは動的に変更することが可能ですが、値が反映されるのは次回フルスクリーンにしようとしたときです。<r/>
</dd>


<!-- obsoleted
<dt>-<kw>dither</kw> (ディザリング)</dt>
<dd>
　16bitカラーモードの画面モード時に画像のディザリングを行うかどうかの設定です。<r/>
　設定可能な値は <b>'no' (使用しない)</b>, <b>'yes' (使用する)</b> のいずれかで、このオプションを指定しないと 'no' が指定されたものと見なされます。<r/>
　吉里吉里は 16bitカラーの画面モード用に、画像をディザリングを行いながら減色し、表示する機能があります。これにより画像の色むらは軽減できますが、描画のパフォーマンスが低下する可能性があります。
</dd>
-->

<dt>-<kw>gsplit</kw> (画像演算の分割処理)</dt>
<dd>
　画像演算を細かく分割して行うかどうかの設定です。<r/>
　設定可能な値は <b>'yes' (行う)</b>, <b>'int' (インターレース分割)</b>, <b>'bidi' (双方向分割)</b>, <b>'no' (行わない)</b> のいずれかで、このオプションを指定しないと 'yes' が指定されたものと見なされます。<r/>
　吉里吉里は CPU のメモリキャッシュを有効的に使用するために、画像を描画するときに細かい領域に分割しながら演算を行います。環境によってはこれが画面のちらつきにつながるようです。そのような環境では 'no' を指定することによりちらつきを抑えることができる可能性がありますが、描画のパフォーマンスが低下する可能性もあります。ダブルバッファリングを有効にした場合は、分割処理を行わないことの意味が薄いため、分割処理を行う設定にすることをお勧めします。<r/>
　'int' を指定すると画像の演算の単位を一つおきに処理しますが、画面更新時に縞模様が見える事があります。'bidi' を選択すると画像の演算の順番において、上→下、下→上 を繰り返すようになります ( 'yes' の場合はつねに上→下 )。
</dd>

<dt>-<kw>usedb</kw> (ダブルバッファリングを用いるかどうか)</dt>
<dd>
　画像を表示するときにダブルバッファリングを用いるかどうかの設定です。<r/>
　設定可能な値は <b>'yes' (用いる)</b>, <b>'no' (必要な時以外用いない)</b> のいずれかで、このオプションを指定しないと 'no' が指定されたものと見なされます。<r/>
　ダブルバッファリングを行う設定にすると、画像をいったん別の場所 (オフスクリーンビットマップ) に描画し、一画面の更新分すべてを描画し終わった後、一気に表示領域に転送するようになります。これにより、画面のちらつきを抑えられる可能性がありますが、描画のパフォーマンスは低下します。<r/>
　ダブルバッファリングを行わない場合は、各 分割領域の画像演算が終了した時点で、順次 表示領域に転送します。<r/>
　また、ダブルバッファリングは、Window.setZoom などで表示内容の拡大表示を行う場合や、-fsres オプションで吉里吉里が拡大縮小処理を行う場合にも行われます。<r/>
　ダブルバッファリングを行う場合は、 waitvsync オプションも 'yes' (行う) に設定することにより、ちらつきの抑制をさらに期待できます。<r/>
　このオプションは動的に変更することが可能ですが、すぐに値が反映される保証はありません。<r/>
</dd>

<dt>-<kw>dbstyle</kw> (ダブルバッファリング方式)</dt>
<dd>
　画像を表示するときにダブルバッファリングを行う際、どの方式を用いるかの設定です。<r/>
　設定可能な値は <b>'auto' (自動)</b>, <b>'gdi' (GDIを用いる)</b>, <b>'ddraw' (DirectDrawを用いる)</b>, <b>'d3d' (Direct3Dを用いる)</b> のいずれかで、このオプションを指定しないと 'auto' が指定されたものと見なされます。<r/>
　ダブルバッファリングは、オフスクリーンビットマップの確保場所によって3つの方式があり、GDI を用いる方法と DirectDraw を用いる方法と Direct3D を用いる方法があります。<r/>
　'auto' が選択された場合、DirectDraw と Direct3D のどちらかを使うかを決めるために、0.6秒ほどの時間をつかってベンチマークを行い、高速な方を選択します。グラフィックカードの機能によっては、DirectDraw あるいは Direct3D では smoothzoom オプションで指定した方式でスムージングできない場合がありますが、その場合はそれぞれ候補から外されます。GDI によるダブルバッファリングは、DirectDraw や Direct3D よりも性能が大幅に低いことが多く、自動的には選択されませんが、DirectDraw と Direct3D のどちらも使用不可能な場合は自動的に GDI が用いられます。<r/>
　このベンチマークは、ウィンドウが表示された直後や、フルスクリーンに切り替わった後、フルスクリーンから復帰した後に自動的に行われます。<r/>
　環境によっては、自動的に選択された方法によっては画面が正しく表示されない可能性があります。その場合は、明示的にこのオプションを使って方式を選択する必要があります。<r/>
　このオプションは動的に変更することが可能ですが、すぐに値が反映される保証はありません。<r/>
</dd>

<dt>-<kw>smoothzoom</kw> (拡大表示時のスムージング)</dt>
<dd>
　Window.setZoom などで表示内容の拡大表示を行う場合や、-fsres オプションで吉里吉里が画面の拡大(縮小)表示を行う場合に、スムージング(拡大時の補間)を行うかどうかの設定です (Layer.affineCopy 等での拡大縮小とは関係ありません )。<r/>
　設定可能な値は <b>'no' (行わない)</b>, <b>'yes' (行う)</b> のいずれかで、このオプションを指定しないと 'yes' が指定されたものと見なされます。<r/>
　スムージングを行うと、画像がなめらかになりますが、若干ぼけた感じになります。スムージングを行わないと、画像はシャープになりますが、ギザギザが目立つようになります。<r/>
　dbstyle オプションが auto の場合、ここの指定によって使用される方式が変わる場合があります。<r/>
　環境によっては、スムージングを行わない方がパフォーマンスが低下する可能性があります。また、スムージングが効かない環境がある可能性があります。<r/>
　サードパーティー製の描画デバイス ( Window.drawDevice プロパティで設定するデバイス ) によってはこのオプションの影響を受けない物もあるかもしれません。<r/>
　このオプションは動的に変更することが可能ですが、すぐに値が反映される保証はありません。<r/>
</dd>



<dt>-<kw>waitvsync</kw> (垂直同期待ち)</dt>
<dd>
　トランジション(画面切り替え)などでディスプレイの垂直同期を待ってから描画するかどうかの設定です。<r/>
　設定可能な値は <b>'yes' (行う)</b>, <b>'no' (行わない)</b> のいずれかで、このオプションを指定しないと 'no' が指定されたものと見なされます。<r/>
　'yes' を指定すると画面のちらつきを抑えられる可能性がありますが、描画のパフォーマンスが低下する可能性もあります。<r/>
　このオプションで垂直同期待ちを行うと、Continuous ハンドラが垂直同期のタイミングに合わせて駆動されるようになり、contfreq オプションの設定内容は無視されます。<r/>
　このオプションは動的に変更することが可能です。<r/>
</dd>

<dt>-<kw>aamethod</kw> (アンチエイリアス文字描画方式)</dt>
<dd>
　アンチエイリアス文字描画方法の設定です。<r/>
　設定可能な値は <b>'auto' (自動)</b>, <b>'res4' (リサンプリング4×4)</b>,  <b>'res8' (リサンプリング8×8)</b>, <b>'api' (Windows API)</b> のいずれかで、このオプションを指定しないと 'auto' が指定されたものと見なされます。<r/>
　'auto' の場合は現バージョンでは WindowsNT 系の OS では 'api'、Win9x 系の OS では 'res8' を自動的に選択します。<r/>
　'res4' または 'res8' では、数倍の大きさ (4×4 または 8×8) で文字を描画し、それを縮小することでアンチエイリアスを実現します。res4 の方が res8 よりも高速ですが、精度は低くなります。<r/>
　'api' では GetGlyphOutline API を用いてアンチエイリアス文字を描画しますが、いろいろと不都合の多い API のようで環境によっては正常に描画できない可能性があります。
</dd>

<dt>-<kw>jpegdec</kw> (JPEG画像デコード精度)</dt>
<dd>
　JPEG画像のデコード(展開)の精度の設定です。<r/>
　設定可能な値は <b>'high' (高い)</b>, <b>'normal' (標準)</b>, <b>'low' (低い)</b> のいずれかで、このオプションを指定しないと 'normal' が指定されたものと見なされます。<r/>
　'high' を指定するとデコードは低速になりますが、画質は高くなります。'low' を指定するとデコードは高速になりますが画質は低くなります。しかし、見た目ではほとんど違いはありません。
</dd>

<dt>-<kw>drawthread</kw> (描画スレッド数)</dt>
<dd>
　描画処理時に、使用するスレッドの数の設定です。<r/>
　設定可能な値は<b>任意の数値</b>もしくは<b>'auto' (自動)</b>のいずれかで、このオプションを指定しないと '1'が指定されたものと見なされます。<r/>
　'auto'を指定すると、OSの認識するプロセッサ数と同数のスレッドが自動的に割り当てられます。<r/>
　描画スレッドを複数設定することで、マルチコア環境での描画パフォーマンスを向上させられる可能性がありますが、逆にパフォーマンスが低下する場合もあります。<r/>
　描画面積が大きい処理、Affine系の高負荷な処理、演算の重いレイヤ合成処理などに適用することで、良好な結果を得られる可能性があります。<r/>
　マルチスレッドを使用するように設定しても、描画処理の負荷が軽くマルチスレッド化の効果が得られないとシステムが判断した場合は、マルチスレッドで実行されない場合があります。<r/>
</dd>

</dl>
</para>


<para>
<ptitle>CPU 機能関連のオプション</ptitle>
　以下のオプションはすべて設定可能な値は <b>'yes' (使用可能であれば使用する)</b>, <b>'no' (使用可能であっても使用しない)</b>, <b>'force' (強制的に使用する)</b> のいずれかで、オプションを指定しないと 'yes' が指定されたものと見なされます。<r/>
　CPU の認識トラブルが起こった場合に 'no' に設定するとその機能を用いません。<r/>
　'force' は、その CPU 機能を検出しなくても強制的に使用するようになりますが、CPU にその機能がついていない場合はもちろん正常に動作しません。<r/>
　吉里吉里本体には -cpummx -cpucmov -cpusse -cpuemmx のオプションのみが影響を与えます。OggVorbis デコーダ (wuvorbis.dll) には -cpusse と -cpummx と -cpu3dn のオプションが影響を与えます。そのほかの(サードパーティーの)プラグインの中にも CPU 機能の設定の影響を受けるものがあるかも知れません。<r/>
<r/>
<ul>
<li>-<kw>cpummx</kw> (MMX)</li>
<li>-<kw>cpu3dn</kw> (3DNow!)</li>
<li>-<kw>cpusse</kw> (SSE)</li>
<li>-<kw>cpucmov</kw> (CMOVcc)</li>
<li>-<kw>cpue3dn</kw> (Enhanced 3DNow!)</li>
<li>-<kw>cpuemmx</kw> (EMMX (MMX2))</li>
<li>-<kw>cpusse2</kw> (SSE2)</li>
</ul>
</para>



<para>
<ptitle>デバッグ関連のオプション</ptitle>
<dl>

<dt>-<kw>debug</kw> (デバッグモード)</dt>
<dd>
　吉里吉里をデバッグモード <comlink href="Debug" /> で動作させるかどうかの設定です。<r/>
　設定可能な値は <b>'no' (無効)</b>, <b>'yes' (有効)</b>のいずれかで、このオプションを指定しないと 'no' が指定されたものと見なされます。<r/>
　有効にすると、吉里吉里はデバッグモードで動作し、いくつかのデバッグ支援機能が有効になりますが、通常のモードよりも実行速度は低下します。
</dd>


<dt>-<kw>forcelog</kw> (ファイルへのログ)</dt>
<dd>
　コンソールのログをファイルに出力するかどうかの設定です。<r/>
　設定可能な値は <b>'no' (出力しない)</b>, <b>'yes' (既存のファイルに追加して出力する)</b>, <b>'clear' (既存のファイルをクリアしてから出力する)</b> のいずれかで、このオプションを指定しないと 'no' が指定されたものと見なされます。

</dd>

<dt>-<kw>logerror</kw> (エラー時のファイルへのログ)</dt>
<dd>
　エラー時にコンソールのログをファイルに出力するかどうかの設定です。<r/>
　設定可能な値は <b>'no' (出力しない)</b>, <b>'yes' (既存のファイルに追加して出力する)</b>, <b>'clear' (既存のファイルをクリアしてから出力する)</b> のいずれかで、このオプションを指定しないと 'yes' が指定されたものと見なされます。

</dd>

<dt>-<kw>debugwin</kw> (デバッグ支援ウィンドウ)</dt>
<dd>
　デバッグ支援ウィンドウ(コンソール、監視式など)を有効にするかどうかの設定です。<r/>
　設定可能な値は <b>'yes' (有効)</b>, <b>'no' (無効)</b> のいずれかで、このオプションを指定しないと 'yes' が指定されたものと見なされます。<r/>
　ユーザにデバッグ支援ウィンドウを使用させたくないときに 'no' を指定します。
</dd>
</dl>
</para>



<para>
<ptitle>ホットキー関連のオプション</ptitle>
　以下のオプションは、吉里吉里の<link href="HotKeys" />関連のオプションです。<r/>
　設定できる値は<a href="f_MenuItem_shortcut.html">MenuItem.shortcut</a> プロパティで指定できる文字列と同様です。<r/>　空文字列を指定すると(入力欄を空にしておくと)、その機能に対するホットキーは無効になります。<r/>
　他のホットキーと重複したキーを指定しないでください。<r/>
<r/>
<ul>
<li>-<kw>hkcontroller</kw> (コントローラ)</li>
<li>-<kw>hkeditor</kw> (スクリプトエディタ)</li>
<li>-<kw>hkwatch</kw> (監視式)</li>
<li>-<kw>hkconsole</kw> (コンソール)</li>
<li>-<kw>hkclipenvinfo</kw> (環境情報のコピー)</li>
<li>-<kw>hkabout</kw> (著作権情報の表示)</li>
<li>-<kw>hkupdaterect</kw> (更新矩形の表示)</li>
<li>-<kw>hkdumplayer</kw> (レイヤ構造のダンプ)</li>
</ul>
</para>






<para>
<ptitle>システム互換性関連のオプション</ptitle>

<dl>
<dt>-<kw>arcdelim</kw> (アーカイブデリミタ)</dt>
<dd>
　アーカイブデリミタ (アーカイブストレージ名と、アーカイブ内ストレージ名の間を区切る文字) を指定します。<r/>
　設定可能な値は <b>'&gt;' ('&gt;'を使う)</b>, <b>'#' ('#'を使う)</b> のいずれかで、このオプションを指定しないと '&gt;' が指定されたものと見なされます。<r/>
　アーカイブデリミタは、吉里吉里２ 2.19 beta 14 で、従来の '#' から '>' に変更されました。<r/>
　2.19 beta 14 未満で動作していたアプリケーションはこの変更のため動作しなくなる可能性がありますが、このオプションでデリミタを '#' に変更することで動作させることができます。<r/>
</dd>


<dt>-<kw>evalcontext</kw> (後置'!'演算子の動作)</dt>
<dd>
　TJS2の後置'!'演算子の動作を指定します。<r/>
　設定可能な値は <b>'this' (this上で式を評価)</b>, <b>'global' (global上で式を評価)</b> のいずれかで、このオプションを指定しないと 'this' が指定されたものと見なされます。<r/>
　TJS2の後置'!'演算子は式をglobalコンテキスト上で実行していましたが、2.21 beta 9 より、this コンテキスト上で実行するようになりました。<r/>
2.21 beta 9 未満を想定しているアプリケーションでは、この設定を「global上で式を評価」にしないと動作しない可能性があります。
</dd>


<dt>-<kw>holdalpha</kw> (Layer.holdAlpha プロパティのデフォルトの値)</dt>
<dd>
　<at href="f_Layer_holdAlpha.html">Layer.holdAlpha</at> プロパティのデフォルト値を指定します。<r/>
　設定可能な値は <b>'false' (偽)</b>, <b>'true' (真)</b> のいずれかで、このオプションを指定しないと 'false' が指定されたものと見なされます。<r/>
　吉里吉里２ 2.23 beta 4 で、各種演算関数に指定していた hda (アルファチャンネルを保護するか) オプションがなくなり、代わりに Layer.holdAlpha プロパティが作られました。この時点では Layer.holdAlpha のデフォルト値は真でした。Layer.holdAlpha が真の場合は過去のアプリケーションの動作に影響を与えません。<r/>
　吉里吉里２ 2.23 beta 5 で、このデフォルト値が偽になりました。吉里吉里２ 2.23 beta 5 未満を想定しているアプリケーションを動作させたい場合は、このオプションに「真」を指定しないと正常に動作しない可能性があります。
</dd>


<dt>-<kw>unaryaster</kw> (前置'*'演算子の動作)</dt>
<dd>
　TJS2の前置'*'演算子の動作を指定します。<r/>
　設定可能な値は <b>'default' (2.25以降の動作)</b>, <b>'compat' (2.25未満の動作)</b> のいずれかで、このオプションを指定しないと 'default' が指定されたものと見なされます。<r/>
　TJS2の前置'*'演算子は、プロパティオブジェクトそのものを、プロパティハンドラを介さずに取り出す演算子でしたが、2.25 beta 1 より、この機能を持つ演算子は前置の'&amp;'となり、前置'*'演算子はプロパティオブジェクトのプロパティハンドラを動作させるための演算子となりました。2.25 beta 1 未満を想定しているアプリケーションでは、この設定を「2.25未満と互換」にしないと正常に動作しない可能性があります。
</dd>


<dt>-<kw>dsvolfactor</kw> (DirectSoundのボリュームカーブ)</dt>
<dd>
　設定可能な値は <b>'3322' (2.31 2011/6/14以降の動作)</b>, <b>'5000' (2.31 2011/6/14未満の動作)</b> のいずれかで、このオプションを指定しないと '3322' が指定されたものと見なされます。<r/>
　DirectSoundのボリュームカーブは、2.31 2011/6/14 より、より直感的なカーブになりました。<r/>
</dd>




</dl>
</para>



</doc>
