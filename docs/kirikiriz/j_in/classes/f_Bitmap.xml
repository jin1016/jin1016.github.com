<?xml version="1.0" encoding="Shift_JIS" ?>
<doc>
<title>Bitmap</title>
<desc>
　Bitmap クラスは、画像情報を保持するクラスです。<r/>
</desc>

<member>
	<name>Bitmap</name>
	<type>constructor</type>
	<shortdesc>Bitmap オブジェクトの構築</shortdesc>
	<arg></arg>
	<result></result>
	<desc>
		　Bitmap クラスのオブジェクトを構築します。<r/>
		　初期状態では 幅と高さは32ピクセルになっています。<r/>
	</desc>
</member>

<member>
	<name>Bitmap</name>
	<type>constructor</type>
	<shortdesc>Bitmap オブジェクトの構築</shortdesc>
	<arg>
		<argitem>
			<name>width</name>
			<default></default>
			<desc>
				　画像の幅を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>height</name>
			<default></default>
			<desc>
				　画像の高さを指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>bpp</name>
			<default>32</default>
			<desc>
				　画像の各ピクセルのビット数を指定します。<r/>
				32 か 8 のいずれかを指定してください。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　Bitmap クラスのオブジェクトを指定の大きさで構築します。<r/>
	</desc>
</member>

<member>
	<name>Bitmap</name>
	<type>constructor</type>
	<shortdesc>Bitmap オブジェクトの構築</shortdesc>
	<arg>
		<argitem>
			<name>filename</name>
			<default></default>
			<desc>
				　画像のファイル名を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>colorkey</name>
			<default>clNone</default>
			<desc>
				　カラーキーを指定します。<r/>
				値は <ref>Layer.loadImages</ref> と同じです。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　Bitmap クラスのオブジェクトをファイルから構築します。<r/>
	</desc>
</member>

<member>
	<name>onLoaded</name>
	<type>event</type>
	<shortdesc>非同期読込みが完了した</shortdesc>
	<arg>
		<argitem>
			<name>meta</name>
			<default></default>
			<desc>
				　読み込んだ画像のタグ情報です。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>async</name>
			<default></default>
			<desc>
				　非同期で読み込まれたかどうかです。<r/>
				　画像データがキャッシュ内にある場合、 <ref>Bitmap.loadAsync</ref> 実行中に本イベントが発生します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>error</name>
			<default></default>
			<desc>
				　画像読込みでエラーが発生したかどうかです。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>message</name>
			<default></default>
			<desc>
				　エラーメッセージです。<r/>
				　エラーが発生した場合、エラーメッセージが渡されます。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　非同期読込みが完了した時に発生します。<r/>
		　読み込んだ画像は <ref>Layer.copyFromBitmapToMainImage</ref> で Layer にコピーできます。<r/>
		　読込み処理は非同期であるため、読込みが完了した時に、その画像を渡す Layer が既に無効化されている可能性があります。<r/>
		　本イベントで他のオブジェクトへアクセスする場合は、無効化されていないか確認して下さい。<r/>
		　もしくは、本イベントが完了するまで対象オブジェクトが無効化されないようにしてください。<r/>
	</desc>
	<ref>Bitmap.loadAsync</ref>
	<ref>Layer.copyFromBitmapToMainImage</ref>
</member>

<member>
	<name>getPixel</name>
	<type>method</type>
	<shortdesc>ピクセル値の取得</shortdesc>
	<arg>
		<argitem>
			<name>x</name>
			<default></default>
			<desc>
				　取得する x 座標値をピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>y</name>
			<default></default>
			<desc>
				　取得する y 座標値をピクセル単位で指定します。<r/>
			</desc>
		</argitem>
	</arg>
	<result>ピクセル値</result>
	<desc>
		　画像のピクセル値を取得します。<r/>
	</desc>
	<ref>Bitmap.setPixel</ref>
</member>

<member>
	<name>setPixel</name>
	<type>method</type>
	<shortdesc>ピクセル値の設定</shortdesc>
	<arg>
		<argitem>
			<name>x</name>
			<default></default>
			<desc>
				　設定する x 座標値をピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>y</name>
			<default></default>
			<desc>
				　設定する y 座標値をピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>value</name>
			<default></default>
			<desc>
				　設定するピクセル値を指定します。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　画像のピクセル値を設定します。<r/>
	</desc>
	<ref>Bitmap.getPixel</ref>
</member>

<member>
	<name>getMaskPixel</name>
	<type>method</type>
	<shortdesc>ピクセルのアルファ値の取得</shortdesc>
	<arg>
		<argitem>
			<name>x</name>
			<default></default>
			<desc>
				　取得する x 座標値をピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>y</name>
			<default></default>
			<desc>
				　取得する y 座標値をピクセル単位で指定します。<r/>
			</desc>
		</argitem>
	</arg>
	<result>ピクセルのアルファ値</result>
	<desc>
		　画像のピクセルのアルファ値を取得します。<r/>
	</desc>
	<ref>Bitmap.setMaskPixel</ref>
</member>

<member>
	<name>setMaskPixel</name>
	<type>method</type>
	<shortdesc>ピクセルのアルファ値の取得</shortdesc>
	<arg>
		<argitem>
			<name>x</name>
			<default></default>
			<desc>
				　設定する x 座標値をピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>y</name>
			<default></default>
			<desc>
				　設定する y 座標値をピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>value</name>
			<default></default>
			<desc>
				　設定するピクセルのアルファ値を指定します。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　画像のピクセルのアルファ値を設定します。<r/>
	</desc>
	<ref>Bitmap.getMaskPixel</ref>
</member>

<member>
	<name>independ</name>
	<type>method</type>
	<shortdesc>画像の共有の解除</shortdesc>
	<arg>
		<argitem>
			<name>copy</name>
			<default>true</default>
			<desc>
				　共有状態を解除する際、元の画像をコピーするかどうかを指定します。<r/>
				　真を指定すると元の画像をコピーします。偽を指定すると元の画像はコピーされず、画像の
				内容は不定となります。
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　画像の共有状態を強制的に解除します。<r/>
		　吉里吉里は、assignImages などで画像をまるごとコピーした場合、実際には
		画像バッファのコピーを行わず、同一の画像を共有するようになります。<r/>
		　通常、画像に変更を加えようとする直前でこの共有状態は自動的に解除されますが、
		このメソッドで強制的に解除することができます。<r/>
		　copy 引数に false を指定した場合は、画像の共有は解除されますが、元の画像を
		引き継ぐことは保証されません ( 画像の内容は不定になります ) が、共有の解除を
		より高速に行うことができます。画像全部を書き換える場合は元の画像を
		引き継ぐ必要はありませんので、描画を行う前にあらかじめこのメソッドに false を
		指定して呼び出すと効率が良くなる場合があります。<r/>
		　このメソッドは、画像が共有されていない場合は何もしません。<r/>
	</desc>
</member>

<member>
	<name>setSize</name>
	<type>method</type>
	<shortdesc>画像サイズの設定</shortdesc>
	<arg>
		<argitem>
			<name>width</name>
			<default></default>
			<desc>
				　画像の横幅をピクセル単位で指定します。<r/>
				　この値は <ref>Bitmap.width</ref> プロパティでも取得や設定ができます。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>height</name>
			<default></default>
			<desc>
				　画像の縦幅をピクセル単位で指定します。<r/>
				　この値は <ref>Bitmap.height</ref> プロパティでも取得や設定ができます。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　画像サイズを指定します。<r/>
	</desc>
</member>

<member>
	<name>copyFrom</name>
	<type>method</type>
	<shortdesc>画像のコピー</shortdesc>
	<arg>
		<argitem>
			<name>src</name>
			<default></default>
			<desc>
				　コピー元の Bitmap オブジェクトを指定します。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　画像のコピーを行います。<r/>
		　コピーといっても、実際は「同じ画像を二つ以上のオブジェクトで共有している」という状態になるだけなので
		このメソッドはほとんど実行時間がかかりません。<r/>
	</desc>
</member>


<member>
	<name>save</name>
	<type>method</type>
	<shortdesc>画像の保存</shortdesc>
	<arg>
		<argitem>
			<name>name</name>
			<default></default>
			<desc>
				　保存するストレージ名を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>type</name>
			<default>"bmp"</default>
			<desc>
				　保存する画像形式を文字列で指定します。現バージョンでは以下の形式を指定可能です。<r/>
				<r/>
				<dl>
				<dt>"<kw>bmp</kw>" または "<kw>bmp32</kw>"</dt>
				<dd>
					　32bpp の BMP です。アルファチャンネル(マスク)も保存します。<r/>
				</dd>
				<r/>
				<dt>"<kw>bmp24</kw>"</dt>
				<dd>
					　24bpp の BMP です。アルファチャンネル(マスク)は保存されません。<r/>
				</dd>
				<r/>
				<dt>"<kw>jpg</kw>"</dt>
				<dd>
					　JPEG です。アルファチャンネル(マスク)は保存されません。画像は
					クオリティー90%で保存されます。<r/>
				</dd>
				<r/>
				<dt>"<kw>jpg###</kw>"</dt>
				<dd>
					　JPEG です。アルファチャンネル(マスク)は保存されません。画像は
					###で指定されたクオリティーで保存されます。"jpg010" で 10%、"jpg100" で 100%、"jpeg080" で 80%です。<r/>
				</dd>
				<r/>
				<dt>"<kw>png</kw>"</dt>
				<dd>
					　32bpp の PNG です。アルファチャンネル(マスク)も保存します。<r/>
				</dd>
				<r/>
				<dt>"<kw>png24</kw>"</dt>
				<dd>
					　24bpp の PNG です。アルファチャンネル(マスク)は保存されません。<r/>
				</dd>
				<r/>
				<dt>"<kw>tlg5</kw>"</dt>
				<dd>
					　32bpp の TLG5 です。アルファチャンネル(マスク)も保存します。<r/>
				</dd>
				<r/>
				<dt>"<kw>tlg524</kw>"</dt>
				<dd>
					　24bpp の TLG5 です。アルファチャンネル(マスク)は保存されません。<r/>
				</dd>
				<r/>
				<dt>"<kw>tlg6</kw>"</dt>
				<dd>
					　32bpp の TLG6 です。アルファチャンネル(マスク)も保存します。<r/>
				</dd>
				<r/>
				<dt>"<kw>tlg624</kw>"</dt>
				<dd>
					　24bpp の TLG6 です。アルファチャンネル(マスク)は保存されません。<r/>
				</dd>
				<r/>
				</dl>
			</desc>
		</argitem>
		<argitem>
			<name>meta</name>
			<default>null</default>
			<desc>
				　保存するタグ情報を辞書形式で指定します。<r/>
				　タグ情報が保存されるのは TLG 形式で保存した場合のみです。<r/>
			</desc>
		</argitem>
		
	</arg>
	<result></result>
	<desc>
		　name で指定したストレージ (ファイル) に、type で指定した画像形式でファイルを保存します。<r/>
	</desc>
</member>

<member>
	<name>load</name>
	<type>method</type>
	<shortdesc>画像の読み込み</shortdesc>
	<arg>
		<argitem>
			<name>image</name>
			<default></default>
			<desc>
				　読み込む画像ストレージを指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>colorkey</name>
			<default>clNone</default>
			<desc>
				　読み込む画像のカラーキー ( 透明色 ) を指定します。<r/>
				　0xRRGGBB 形式で色を指定すると、その色をカラーキーとします。<r/>
				　<tt><kw>clPalIdx</kw></tt> に 任意のパレットインデックスを加算した数値を指定すると、
				そのパレットインデックスが透明色になります ( 256 色以下の画像の場合 )。<r/>
				　<tt><kw>clAdapt</kw></tt> を指定すると、画像の一番上のラインにおいて
				もっとも多く使われている色が自動的に透明色になります。<r/>
				　<tt><kw>clAlphaMat</kw></tt> に 0xRRGGBB
				形式の色を表す数値を加算したものを指定すると、画像がその色の上に
				αブレンド(ltAlphaの方式)を用いて重ね合わせられます。
				たとえば、(clAlphaMat + 0xffffff) を指定すると、
				読み込まれた画像が白い色の上に重ね合わせられます。
				画像は全て不透明な画像となります
				( 画像は全て不透明となりますが、
				このモードではタグ情報はいっさい変更されないので
				注意してください )。<r/>
			</desc>
		</argitem>
	</arg>
	<result>タグ情報の辞書配列</result>
	<desc>
		　画像を読み込みます。<r/>
		　戻り値としてタグ情報(その画像のレイヤタイプや表示位置など、画像そのものに対する情報)の辞書配列が返ります。<r/>
		　画像がタグ情報を持たない場合は null が返ります。<r/>
		　現バージョンでは、タグ情報は PNG, TLG5/6 形式のみが持つことができます。取得可能な情報については、<link href="TPC"/> を参照してください。<r/>
	</desc>
</member>

<member>
	<name>loadAsync</name>
	<type>method</type>
	<shortdesc>画像の非同期読み込み</shortdesc>
	<arg>
		<argitem>
			<name>image</name>
			<default></default>
			<desc>
				　読み込む画像ストレージを指定します。<r/>
				　ここで指定するファイル名は拡張子を含んだものになることに注意してください。<r/>
				　拡張子がないとファイルが見つからずエラーとなります。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　画像を非同期で読み込みます。<r/>
		　読込みの完了は <ref>Bitmap.onLoaded</ref> で受け取れます。<r/>
		　非同期読込み中か否かは <ref>Bitmap.loading</ref> で確認できます。<r/>
		　非同期読込み中は <ref>Bitmap.loading</ref> 以外のメンバへアクセスすると例外が発生します。<r/>
		　<ref>Bitmap.onLoaded</ref> の説明も確認してください。<r/>
	</desc>
	<ref>Bitmap.onLoaded</ref>
	<ref>Bitmap.loading</ref>
	<ref>Layer.copyFromBitmapToMainImage</ref>
</member>

<member>
	<name>width</name>
	<type>property</type>
	<shortdesc>画像横幅</shortdesc>
	<access>r/w</access>
	<desc>
		　画像の横幅をピクセル単位で指定します。<r/>
		　値を設定することもできます。<r/>
	</desc>
	<ref>Bitmap.setSize</ref>
</member>

<member>
	<name>height</name>
	<type>property</type>
	<shortdesc>画像縦幅</shortdesc>
	<access>r/w</access>
	<desc>
		　画像の縦幅をピクセル単位で指定します。<r/>
		　値を設定することもできます。<r/>
	</desc>
	<ref>Bitmap.setSize</ref>
</member>

<member>
	<name>buffer</name>
	<type>property</type>
	<shortdesc>画像バッファポインタ</shortdesc>
	<access>r</access>
	<desc>
		　画像 ( 色とマスク(不透明度)の情報を含む 32bpp のビットマップ ) の画像バッファ左上隅へのポインタ
		を表します。<r/>
		　このプロパティは、プラグインなどのために画像バッファへの直接のアクセスの手段を提供する
		ためにあります。<r/>
		　整数型で返されますが、プラグインなどでは適切な型 ( const unsigned long * 等 ) にキャストして使って
		ください。<r/>
		　このプロパティで得られたポインタには値を書き込まないでください。
		<ref>Bitmap.bufferForWrite</ref> で得られたポインタならば書き込むことができます。<r/>
		　画像のサイズは <ref>Bitmap.width</ref> と <ref>Bitmap.height</ref> プロパティが
		表しています。<r/>
		　ポインタの計算方法は <ref>Bitmap.bufferPitch</ref> を参照してください。<r/>
	</desc>
	<ref>Bitmap.bufferForWrite</ref>
	<ref>Bitmap.bufferPitch</ref>
</member>

<member>
	<name>bufferForWrite</name>
	<type>property</type>
	<shortdesc>画像バッファポインタ(書き込み用)</shortdesc>
	<access>r</access>
	<desc>
		　画像 ( 色とマスク(不透明度)の情報を含む 32bpp のビットマップ ) の画像バッファ左上隅へのポインタ
		を表します。<r/>
		　このプロパティは、プラグインなどのために画像バッファへの直接のアクセスの手段を提供する
		ためにあります。<r/>
		　整数型で返されますが、プラグインなどでは適切な型 ( unsigned long * 等 ) にキャストして使って
		ください。<r/>
		　このプロパティで得られたポインタには <ref>Bitmap.buffer</ref> と異なり、
		値を書き込むことができます。吉里吉里内部では全く同じ画像は複数のオブジェト間で共有しますが、
		このプロパティを参照するとその共有状態を解除します。<r/>
		　画像のサイズは <ref>Bitmap.width</ref> と <ref>Bitmap.height</ref> プロパティが
		表しています。<r/>
		　ポインタの計算方法は <ref>Bitmap.bufferPitch</ref> を参照してください。<r/>
	</desc>
	<ref>Bitmap.buffer</ref>
	<ref>Bitmap.bufferPitch</ref>
</member>

<member>
	<name>bufferPitch</name>
	<type>property</type>
	<shortdesc>画像バッファピッチ</shortdesc>
	<access>r</access>
	<desc>
		　画像 ( 色とマスク(不透明度)の情報を含む 32bpp のビットマップ ) の画像バッファのピッチ
		( 一つ下のスキャンラインまでのバイト数 ) を表します。<r/>
		　このプロパティは、プラグインなどのために画像バッファへの直接のアクセスの手段を提供する
		ためにあります。<r/>
		　tjs_uint32 が 32bit の整数型、tjs_uint8 が 8bit (1byte) の整数型として、画像位置 (x, y) への
		ポインタは C 言語で書くと以下のように計算することができます。<r/>
		<tt>( (tjs_uint32*)( (tjs_uint8*)buffer + y*bufferPitch )) + x</tt><r/>
		　このプロパティは、次のスキャンラインまでのピクセル数ではなく、バイト数を返すことに
		注意してください。この数値は画像横幅ぴったりに必要なバイト数よりも若干大きい場合があります。<r/>
		　このプロパティは値が負になり得ますので注意してください。<r/>
	</desc>
	<ref>Bitmap.buffer</ref>
	<ref>Bitmap.bufferForWrite</ref>
</member>

<member>
	<name>loading</name>
	<type>property</type>
	<shortdesc>非同期読込み中確認</shortdesc>
	<access>r</access>
	<desc>
		　非同期読込み中かどうかを表します。<r/>
		　この値が真の時非同期読込み中です。<r/>
		　非同期読込み中に他のメンバにアクセスすると例外が発生するので注意してください。<r/>
	</desc>
	<ref>Bitmap.buffer</ref>
	<ref>Bitmap.bufferPitch</ref>
</member>


</doc>
