<?xml version="1.0" encoding="Shift_JIS" ?>
<doc>
<title>Layer</title>
<desc>
　Layer クラスは、<kw>レイヤ</kw>を管理するためのクラスです。<r/>
</desc>

<member>
	<name>Layer</name>
	<type>constructor</type>
	<shortdesc>Layer オブジェクトの構築</shortdesc>
	<arg>
		<argitem>
			<name>window</name>
			<default></default>
			<desc>
				　このレイヤを保有することになるウィンドウ ( <ref>Window</ref> クラスの
				オブジェクト ) を指定します。<r/>
				　ウィンドウはいったん決定したら変更することはできません。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>parent</name>
			<default></default>
			<desc>
				　このレイヤの親となるレイヤを指定します。<r/>
				　null を指定するとプライマリレイヤになります。<r/>
				　プライマリレイヤはウィンドウに一つのみ存在することができ、また、レイヤを用いる場合は
				かならず一つ存在しなければならない、すべてのレイヤの親となるレイヤです。<r/>
				　ただし、描画デバイス ( <ref>Window.drawDevice</ref> で設定可能) によっては、ウィンドウが
				複数のプライマリレイヤを持つことができる物があります。<r/>
				　レイヤの親は、<ref>Layer.parent</ref> プロパティで変更することができます。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　Layer クラスのオブジェクトを構築します。<r/>
		　Layer クラスは非表示の状態で構築されます。<r/>
	</desc>
</member>


<member>
	<name>onClick</name>
	<type>event</type>
	<shortdesc>レイヤがクリックされた</shortdesc>
	<arg>
		<argitem>
			<name>x</name>
			<default></default>
			<desc>
				　レイヤがクリックされた位置の x 座標 ( レイヤの表示座標での ) の値です。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>y</name>
			<default></default>
			<desc>
				　レイヤがクリックされた位置の y 座標 ( レイヤの表示座標での ) の値です。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　レイヤがクリックされた時に発生します。<r/>
	</desc>
	<ref>Layer.onMouseDown</ref>
	<ref>Layer.onDoubleClick</ref>
</member>

<member>
	<name>onDoubleClick</name>
	<type>event</type>
	<shortdesc>レイヤがダブルクリックされた</shortdesc>
	<arg>
		<argitem>
			<name>x</name>
			<default></default>
			<desc>
				　レイヤがダブルクリックされた位置の x 座標 ( レイヤの表示座標での ) の値です。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>y</name>
			<default></default>
			<desc>
				　レイヤがダブルクリックされた位置の y 座標 ( レイヤの表示座標での ) の値です。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　レイヤがダブルクリックされた時に発生します。<r/>
	</desc>
	<ref>Layer.onClick</ref>
</member>

<member>
	<name>onMouseDown</name>
	<type>event</type>
	<shortdesc>マウスのボタンが押された</shortdesc>
	<arg>
		<argitem>
			<name>x</name>
			<default></default>
			<desc>
				　マウスのボタンが押された位置の x 座標 ( レイヤの表示座標での ) の値です。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>y</name>
			<default></default>
			<desc>
				　マウスのボタンが押された位置の y 座標 ( レイヤの表示座標での ) の値です。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>button</name>
			<default></default>
			<desc>
				　押されたマウスボタンです。以下のいずれかの値になります。<r/>
				<tt><kw>mbLeft</kw>    : </tt>マウスの左ボタンが押された<r/>
				<tt><kw>mbMiddle</kw>  : </tt>マウスの中ボタンが押された<r/>
				<tt><kw>mbRight</kw>   : </tt>マウスの右ボタンが押された<r/>
			</desc>
		</argitem>
		<argitem>
			<name>shift</name>
			<default></default>
			<desc>
				　マウスボタンが押されたときに同時に押されていたシフト系のキーの状態です。
				以下の値のビット OR による組み合わせになります。<r/>
				<tt><kw>ssAlt</kw>     : </tt>ALT キーが押されていた<r/>
				<tt><kw>ssShift</kw>   : </tt>SHIFT キーが押されていた<r/>
				<tt><kw>ssCtrl</kw>    : </tt>CTRL キーが押されていた<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　マウスボタンが押された時に発生します。<r/>
	</desc>
	<ref>Layer.onClick</ref>
</member>

<member>
	<name>onMouseUp</name>
	<type>event</type>
	<shortdesc>マウスのボタンが離された</shortdesc>
	<arg>
		<argitem>
			<name>x</name>
			<default></default>
			<desc>
				　マウスのボタンが離された位置の x 座標 ( レイヤの表示座標での ) の値です。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>y</name>
			<default></default>
			<desc>
				　マウスのボタンが離された位置の y 座標 ( レイヤの表示座標での ) の値です。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>button</name>
			<default></default>
			<desc>
				　離されたマウスボタンです。以下のいずれかの値になります。<r/>
				<tt><kw>mbLeft</kw>    : </tt>マウスの左ボタンが離された<r/>
				<tt><kw>mbMiddle</kw>  : </tt>マウスの中ボタンが離された<r/>
				<tt><kw>mbRight</kw>   : </tt>マウスの右ボタンが離された<r/>
			</desc>
		</argitem>
		<argitem>
			<name>shift</name>
			<default></default>
			<desc>
				　マウスボタンが離された時に同時に押されていたシフト系のキーの状態です。
				以下の値のビット OR による組み合わせになります。<r/>
				<tt><kw>ssAlt</kw>     : </tt>ALT キーが押されていた<r/>
				<tt><kw>ssShift</kw>   : </tt>SHIFT キーが押されていた<r/>
				<tt><kw>ssCtrl</kw>    : </tt>CTRL キーが押されていた<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　マウスボタンが離された時に発生します。<r/>
	</desc>
</member>

<member>
	<name>onMouseMove</name>
	<type>event</type>
	<shortdesc>マウスが移動した</shortdesc>
	<arg>
		<argitem>
			<name>x</name>
			<default></default>
			<desc>
				　マウスが移動した位置の x 座標 ( レイヤの表示座標での ) の値です。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>y</name>
			<default></default>
			<desc>
				　マウスが移動した位置の y 座標 ( レイヤの表示座標での ) の値です。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>shift</name>
			<default></default>
			<desc>
				　マウスが移動していた時に同時に押されていたシフト系のキーやマウスのボタンの状態です。
				以下の値のビット OR による組み合わせになります。<r/>
				<tt><kw>ssAlt</kw>     : </tt>ALT キーが押されていた<r/>
				<tt><kw>ssShift</kw>   : </tt>SHIFT キーが押されていた<r/>
				<tt><kw>ssCtrl</kw>    : </tt>CTRL キーが押されていた<r/>
				<tt><kw>ssLeft</kw>    : </tt>マウスの左ボタンが押されていた<r/>
				<tt><kw>ssMiddle</kw>  : </tt>マウスの中ボタンが押されていた<r/>
				<tt><kw>ssRight</kw>   : </tt>マウスの右ボタンが押されていた<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　マウスが移動した時に発生します。<r/>
	</desc>
</member>

<member>
	<name>onMouseEnter</name>
	<type>event</type>
	<shortdesc>マウスが入ってきた</shortdesc>
	<arg>
	</arg>
	<result></result>
	<desc>
		　マウスがレイヤの領域内に入ってきたときに発生します。<r/>
	</desc>
	<ref>Layer.onMouseLeave</ref>
</member>

<member>
	<name>onMouseLeave</name>
	<type>event</type>
	<shortdesc>マウスが出ていった</shortdesc>
	<arg>
	</arg>
	<result></result>
	<desc>
		　マウスがレイヤの領域内から出ていったときに発生します。<r/>
	</desc>
	<ref>Layer.onMouseEnter</ref>
</member>

<member>
	<name>onMouseWheel</name>
	<type>event</type>
	<shortdesc>マウスホイールが回転した</shortdesc>
	<arg>
		<argitem>
			<name>shift</name>
			<default></default>
			<desc>
				　マウスが移動していた時に同時に押されていたシフト系のキーやマウスのボタンの状態です。
				以下の値のビット OR による組み合わせになります。<r/>
				<tt><kw>ssAlt</kw>     : </tt>ALT キーが押されていた<r/>
				<tt><kw>ssShift</kw>   : </tt>SHIFT キーが押されていた<r/>
				<tt><kw>ssCtrl</kw>    : </tt>CTRL キーが押されていた<r/>
				<tt><kw>ssLeft</kw>    : </tt>マウスの左ボタンが押されていた<r/>
				<tt><kw>ssMiddle</kw>  : </tt>マウスの中ボタンが押されていた<r/>
				<tt><kw>ssRight</kw>   : </tt>マウスの右ボタンが押されていた<r/>
			</desc>
		</argitem>
		<argitem>
			<name>delta</name>
			<default></default>
			<desc>
				　ホイールの回転角です。上方向(ユーザの反対側の方向)に回された場合は正、
				下方向(ユーザ側の方向)に回された場合は負の値になります。通常、最小量は 120
				となります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>x</name>
			<default></default>
			<desc>
				　ホイールが回転した位置の x 座標 ( レイヤの表示座標での ) の値です。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>y</name>
			<default></default>
			<desc>
				　ホイールが回転した位置の y 座標 ( レイヤの表示座標での ) の値です。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　マウスホイールが回転した時に発生します。<r/>
		　このイベントは、キーボードイベントと同じく、フォーカスを持っているレイヤにのみ発生します。<r/>
	</desc>
</member>

<member>
	<name>onKeyDown</name>
	<type>event</type>
	<shortdesc>キーが押された</shortdesc>
	<arg>
		<argitem>
			<name>key</name>
			<default></default>
			<desc>
				　押されたキーの<kw>仮想キーコード</kw>の値です。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>shift</name>
			<default></default>
			<desc>
				　キーが押された時に同時に押されていたシフト系のキーやマウスのボタンの状態です。
				以下の値のビット OR による組み合わせになります。<r/>
				<tt><kw>ssAlt</kw>     : </tt>ALT キーが押されていた<r/>
				<tt><kw>ssShift</kw>   : </tt>SHIFT キーが押されていた<r/>
				<tt><kw>ssCtrl</kw>    : </tt>CTRL キーが押されていた<r/>
				<tt><kw>ssLeft</kw>    : </tt>マウスの左ボタンが押されていた<r/>
				<tt><kw>ssMiddle</kw>  : </tt>マウスの中ボタンが押されていた<r/>
				<tt><kw>ssRight</kw>   : </tt>マウスの右ボタンが押されていた<r/>
				　また、キーボードが長時間押され、キーリピートが発生している場合は
				以下の値も組み合わされます。<r/>
				<tt><kw>ssRepeat</kw>  : </tt>キーリピートが発生した<r/>
			</desc>
		</argitem>
		<argitem>
			<name>process</name>
			<default>true</default>
			<desc>
				　親クラスのonKeyDownを呼ぶ際、この引数に偽を渡すと、親クラスでは
				そのキーに対するデフォルトの処理(フォーカスの移動など)を行わなくなります。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　キーが押された時に発生します。<r/>
	</desc>
</member>

<member>
	<name>onKeyUp</name>
	<type>event</type>
	<shortdesc>キーが離された</shortdesc>
	<arg>
		<argitem>
			<name>key</name>
			<default></default>
			<desc>
				　離されたキーの<kw>仮想キーコード</kw>の値です。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>shift</name>
			<default></default>
			<desc>
				　キーが離された時に同時に押されていたシフト系のキーやマウスのボタンの状態です。
				以下の値のビット OR による組み合わせになります。<r/>
				<tt><kw>ssAlt</kw>     : </tt>ALT キーが押されていた<r/>
				<tt><kw>ssShift</kw>   : </tt>SHIFT キーが押されていた<r/>
				<tt><kw>ssCtrl</kw>    : </tt>CTRL キーが押されていた<r/>
				<tt><kw>ssLeft</kw>    : </tt>マウスの左ボタンが押されていた<r/>
				<tt><kw>ssMiddle</kw>  : </tt>マウスの中ボタンが押されていた<r/>
				<tt><kw>ssRight</kw>   : </tt>マウスの右ボタンが押されていた<r/>
			</desc>
		</argitem>
		<argitem>
			<name>process</name>
			<default>true</default>
			<desc>
				　親クラスのonKeyUpを呼ぶ際、この引数に偽を渡すと、親クラスでは
				そのキーに対するデフォルトの処理(フォーカスの移動など)を行わなくなります。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　キーが離された時に発生します。<r/>
	</desc>
</member>

<member>
	<name>onKeyPress</name>
	<type>event</type>
	<shortdesc>文字が入力された</shortdesc>
	<arg>
		<argitem>
			<name>key</name>
			<default></default>
			<desc>
				　入力された文字です。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>process</name>
			<default>true</default>
			<desc>
				　親クラスのonKeyPressを呼ぶ際、この引数に偽を渡すと、親クラスでは
				そのキーに対するデフォルトの処理(フォーカスの移動など)を行わなくなります。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　文字が入力されたときに発生します。<ref>Layer.onKeyDown</ref> と異なるのは、onKeyDown が
		仮想キーコードを扱うのに対し、このイベントは文字そのものを扱います。押されたキーが
		文字とは関係のないキー (ファンクションキーなど) の場合はこのイベントは発生しません。<r/>
	</desc>
</member>


<member>
	<name>onHitTest</name>
	<type>event</type>
	<shortdesc>当たり判定</shortdesc>
	<arg>
		<argitem>
			<name>x</name>
			<default></default>
			<desc>
				　当たり判定を行う位置の ( レイヤの表示座標内での )  x 座標です。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>y</name>
			<default></default>
			<desc>
				　当たり判定を行う位置の ( レイヤの表示座標内での )  y 座標です。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>hit</name>
			<default></default>
			<desc>
				　当たり判定の結果、当たっている場合は真, はずれている場合は偽になります。
				当たり判定の結果は、同名のスーパークラスのイベントのこの引数に渡してください。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　レイヤ内のある点に対して、当たり判定 ( ヒットテスト ) が行われる場合に呼び出されます。<r/>
		　当たり判定の結果は、スーパークラスのこのイベントの第３引数に当たり判定の結果を
		渡してください ( 第１引数と
		第２引数はそのまま渡してください )。<r/>
		　当たり判定の結果、当たっていればマウスメッセージは不透過になり、そのレイヤで処理されます。<r/>
		　当たっていなければ透過となり、マウスメッセージはより奥にあるレイヤで処理されます。<r/>
		　このイベントは、<ref>Layer.hitThreshold</ref> や <ref>Layer.hitType</ref> で行われる
		当たり判定で「当たっている」という判定がされた後に呼び出されます。したがって
		Layer.hitThreshold や Layer.hitType で「当たってない」と判定されている場合は
		このイベントは呼び出されません。<r/>
	</desc>
</member>

<member>
	<name>onBlur</name>
	<type>event</type>
	<shortdesc>フォーカスを失った</shortdesc>
	<arg>
		<argitem>
			<name>focused</name>
			<default></default>
			<desc>
				　あらたにフォーカスを得たレイヤオブジェクトです。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　レイヤがフォーカスを失った際に呼ばれます。<r/>
	</desc>
</member>

<member>
	<name>onFocus</name>
	<type>event</type>
	<shortdesc>フォーカスを得た</shortdesc>
	<arg>
		<argitem>
			<name>focused</name>
			<default></default>
			<desc>
				　フォーカスを失ったレイヤオブジェクトです。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>direction</name>
			<default></default>
			<desc>
				　フォーカスの後方検索によってフォーカスが変更されるときは真、
				フォーカスの前方検索によって行われる場合は偽になります。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　レイヤがフォーカスを得た際に呼ばれます。<r/>
	</desc>
</member>

<member>
	<name>onNodeDisabled</name>
	<type>event</type>
	<shortdesc>ノードが操作不能になった</shortdesc>
	<arg>
	</arg>
	<result></result>
	<desc>
		　そのレイヤや、そのレイヤの ( 親子関係的に ) 上位のレイヤの <ref>Layer.enabled</ref> プロパティ
		が変更されたために、そのレイヤが操作不能になったときに呼ばれます。<r/>
	</desc>
</member>

<member>
	<name>onNodeEnabled</name>
	<type>event</type>
	<shortdesc>ノードが操作可能になった</shortdesc>
	<arg>
	</arg>
	<result></result>
	<desc>
		　そのレイヤや、そのレイヤの ( 親子関係的に ) 上位のレイヤの <ref>Layer.enabled</ref> プロパティ
		が変更されたために、そのレイヤが操作可能になったときに呼ばれます。<r/>
	</desc>
</member>

<member>
	<name>onSearchPrevFocusable</name>
	<type>event</type>
	<shortdesc>フォーカス可能なレイヤの前方検索</shortdesc>
	<arg>
		<argitem>
			<name>layer</name>
			<default></default>
			<desc>
				　フォーカスを受け取るレイヤオブジェクトです。<r/>
				　親クラスの同名のメソッドを呼ぶときに引数として指定します。<r/>
				　null を渡すと、フォーカス可能なレイヤは無いとして処理されます。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　フォーカス可能なレイヤの前方検索を行うときに発生するイベントです。<r/>
		　フォーカスを受け取るレイヤを指定するときは、スーパークラスの同名のイベント
		の引数にそのレイヤを指定してください。<r/>
	</desc>
</member>

<member>
	<name>onSearchNextFocusable</name>
	<type>event</type>
	<shortdesc>フォーカス可能なレイヤの後方検索</shortdesc>
	<arg>
		<argitem>
			<name>layer</name>
			<default></default>
			<desc>
				　フォーカスを受け取るレイヤオブジェクトです。<r/>
				　親クラスの同名のメソッドを呼ぶときに引数として指定します。<r/>
				　null を渡すと、フォーカス可能なレイヤは無いとして処理されます。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　フォーカス可能なレイヤの後方検索を行うときに発生するイベントです。<r/>
		　フォーカスを受け取るレイヤを指定するときは、スーパークラスの同名のイベント
		の引数にそのレイヤを指定してください。<r/>
	</desc>
</member>

<member>
	<name>onBeforeFocus</name>
	<type>event</type>
	<shortdesc>フォーカスを受け取る直前</shortdesc>
	<arg>
		<argitem>
			<name>layer</name>
			<default></default>
			<desc>
				　フォーカスを受け取るレイヤオブジェクトです。<r/>
				　通常は this が渡されますが、スーパークラスの同名のイベントを呼ぶときに
				異なるレイヤオブジェクトを指定すれば、そのレイヤにフォーカスを
				渡すようにすることができます。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>blurred</name>
			<default></default>
			<desc>
				　フォーカスを失うレイヤオブジェクトです。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>direction</name>
			<default></default>
			<desc>
				　フォーカスの後方検索によってフォーカスが変更されるときは真、
				フォーカスの前方検索によって行われる場合は偽になります。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　フォーカスを受け取る直前に発生するイベントです。<r/>
		　フォーカスを受け取るレイヤを指定するときは、スーパークラスの同名のイベント
		の第１引数にそのレイヤを指定する事ができます。<r/>
	</desc>
</member>

<member>
	<name>onPaint</name>
	<type>event</type>
	<shortdesc>描画されるとき</shortdesc>
	<arg>
	</arg>
	<result></result>
	<desc>
		　レイヤが実際にウィンドウに描画される直前に呼ばれます。<r/>
		　このイベントは <ref>Layer.callOnPaint</ref> プロパティが真の時のみに呼ばれ、
		Layer.callOnPaint はこのイベントが実行し終わった後自動的に偽に設定されます。<r/>
	</desc>
	<ref>Layer.update</ref>
</member>

<member>
	<name>onTransitionCompleted</name>
	<type>event</type>
	<shortdesc>トランジションが終了した</shortdesc>
	<arg>
		<argitem>
			<name>dest</name>
			<default></default>
			<desc>
				　トランジション先のレイヤオブジェクト ( 通常は this ) が渡されます。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>src</name>
			<default></default>
			<desc>
				　トランジション元のレイヤオブジェクトが渡されます。<r/>
				　トランジションの種類によっては null になり得ます。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　トランジションが終了した時に呼ばれます。<r/>
	</desc>
</member>


<member>
	<name>moveBefore</name>
	<type>method</type>
	<shortdesc>指定レイヤの手前に移動</shortdesc>
	<arg>
		<argitem>
			<name>layer</name>
			<default></default>
			<desc>
				　ここで指定したレイヤの手前に移動します。<r/>
				　兄弟レイヤ ( 同じ親を持つレイヤ ) のみを指定できます。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　重ね合わせ順において、指定されたレイヤの手前に移動します。<r/>
		　このメソッドは <ref>Layer.absoluteOrderMode</ref> プロパティを false に設定します。<r/>
	</desc>
</member>

<member>
	<name>moveBehind</name>
	<type>method</type>
	<shortdesc>指定レイヤの奥に移動</shortdesc>
	<arg>
		<argitem>
			<name>layer</name>
			<default></default>
			<desc>
				　ここで指定したレイヤの奥に移動します。<r/>
				　兄弟レイヤ ( 同じ親を持つレイヤ ) のみを指定できます。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　重ね合わせ順において、指定されたレイヤの奥に移動します。<r/>
		　このメソッドは <ref>Layer.absoluteOrderMode</ref> プロパティを false に設定します。<r/>
	</desc>
</member>

<member>
	<name>bringToBack</name>
	<type>method</type>
	<shortdesc>一番奥に移動</shortdesc>
	<arg>
	</arg>
	<result></result>
	<desc>
		　重ね合わせ順において、兄弟レイヤ ( 同じ親を持つレイヤ ) の中でもっとも奥に移動します。<r/>
		　このメソッドを実行すると親レイヤの <ref>Layer.absoluteOrderMode</ref> プロパティが偽に設定されます。<r/>
	</desc>
	<ref>Layer.order</ref>
	<ref>Layer.absolute</ref>
	<ref>Layer.absoluteOrderMode</ref>
	<ref>Layer.bringToFront</ref>
</member>

<member>
	<name>bringToFront</name>
	<type>method</type>
	<shortdesc>一番手前に移動</shortdesc>
	<arg>
	</arg>
	<result></result>
	<desc>
		　重ね合わせ順において、兄弟レイヤ ( 同じ親を持つレイヤ ) の中でもっとも手前に移動します。<r/>
		　このメソッドを実行すると親レイヤの <ref>Layer.absoluteOrderMode</ref> プロパティが偽に設定されます。<r/>
	</desc>
	<ref>Layer.order</ref>
	<ref>Layer.absolute</ref>
	<ref>Layer.absoluteOrderMode</ref>
	<ref>Layer.bringToBack</ref>
</member>

<member>
	<name>loadImages</name>
	<type>method</type>
	<shortdesc>画像の読み込み</shortdesc>
	<arg>
		<argitem>
			<name>image</name>
			<default></default>
			<desc>
				　読み込む画像ストレージを指定します。<r/>
				　ここで指定したストレージ名(拡張子を除く) に _m を付加した画像ストレージが
				存在すれば、マスク(不透明度)画像として読み込まれます。<r/>
				　ここで指定したストレージ名(拡張子を除く) に _p を付加した画像ストレージが
				存在すれば、領域画像として読み込まれます。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>colorkey</name>
			<default>clNone</default>
			<desc>
				　読み込む画像のカラーキー ( 透明色 ) を指定します。<r/>
				　0xRRGGBB 形式で色を指定すると、その色をカラーキーとします。<r/>
				　<tt><kw>clPalIdx</kw></tt> に 任意のパレットインデックスを加算した数値を指定すると、
				そのパレットインデックスが透明色になります ( 256 色以下の画像の場合 )。<r/>
				　<tt><kw>clAdapt</kw></tt> を指定すると、画像の一番上のラインにおいて
				もっとも多く使われている色が自動的に透明色になります。<r/>
				　<tt><kw>clAlphaMat</kw></tt> に 0xRRGGBB
				形式の色を表す数値を加算したものを指定すると、画像がその色の上に
				αブレンド(ltAlphaの方式)を用いて重ね合わせられます。
				たとえば、(clAlphaMat + 0xffffff) を指定すると、
				読み込まれた画像が白い色の上に重ね合わせられます。
				画像は全て不透明な画像となります
				( 画像は全て不透明となりますが、
				このモードではタグ情報はいっさい変更されないので
				注意してください )。<r/>
			</desc>
		</argitem>
	</arg>
	<result>タグ情報の辞書配列</result>
	<desc>
		　レイヤに画像を読み込みます。<r/>
		　このメソッドはレイヤの画像サイズは変更しますが、画像サイズがレイヤの表示サイズより小さかった場合を
		除いて、レイヤの表示サイズは変更しません。<r/>
		　戻り値としてタグ情報(その画像のレイヤタイプや表示位置など、画像そのものに対する情報)の辞書配列が返ります。KAG の「タグ」の意味と混同しないように注意してください。<r/>
		　画像がタグ情報を持たない場合は null が返ります。<r/>
		　現バージョンでは、タグ情報は PNG, TLG5/6 形式のみが持つことができます。取得可能な情報については、<link href="TPC"/> を参照してください。<r/>
	</desc>
</member>

<member>
	<name>loadProvinceImage</name>
	<type>method</type>
	<shortdesc>領域画像の読み込み</shortdesc>
	<arg>
		<argitem>
			<name>image</name>
			<default></default>
			<desc>
				　領域画像として読み込む画像ストレージを指定します。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　レイヤの領域画像を読み込みます。それ以外の画像はそのままとなります。<r/>
		　読み込もうとした画像がレイヤの画像サイズと異なる場合は例外が発生します。<r/>
	</desc>
</member>

<member>
	<name>getMainPixel</name>
	<type>method</type>
	<shortdesc>メイン画像の色の取得</shortdesc>
	<arg>
		<argitem>
			<name>x</name>
			<default></default>
			<desc>
				　色を取得する ( レイヤの画像座標での ) x 座標を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>y</name>
			<default></default>
			<desc>
				　色を取得する ( レイヤの画像座標での ) y 座標を指定します。<r/>
			</desc>
		</argitem>
	</arg>
	<result>0xRRGGBB 形式の色番号</result>
	<desc>
		　レイヤメイン画像 ( 色を保持している画像 ) の任意の位置の色を取得します。<r/>
		　画像座標として無効な ( 範囲外の ) 位置を指定すると例外が発生します。<r/>
	</desc>
</member>

<member>
	<name>setMainPixel</name>
	<type>method</type>
	<shortdesc>メイン画像の色の設定</shortdesc>
	<arg>
		<argitem>
			<name>x</name>
			<default></default>
			<desc>
				　色を設定する ( レイヤの画像座標での ) x 座標を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>y</name>
			<default></default>
			<desc>
				　色を設定する ( レイヤの画像座標での ) y 座標を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>color</name>
			<default></default>
			<desc>
				　設定する色を 0xRRGGBB 形式で指定します。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　レイヤメイン画像 ( 色を保持している画像 ) の任意の位置の色を設定します。<r/>
		　画像座標として無効な ( 範囲外の ) 位置を指定すると例外が発生します。<r/>
	</desc>
</member>

<member>
	<name>getMaskPixel</name>
	<type>method</type>
	<shortdesc>マスク画像の値の取得</shortdesc>
	<arg>
		<argitem>
			<name>x</name>
			<default></default>
			<desc>
				　値を取得する ( レイヤの画像座標での ) x 座標を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>y</name>
			<default></default>
			<desc>
				　値を取得する ( レイヤの画像座標での ) y 座標を指定します。<r/>
			</desc>
		</argitem>
	</arg>
	<result>マスク画像の値 ( 0 〜 255 )</result>
	<desc>
		　レイヤマスク画像 ( 不透明度を保持している画像 ) の任意の位置の値 ( 0 〜 255 ) を取得します。<r/>
		　画像座標として無効な ( 範囲外の ) 位置を指定すると例外が発生します。<r/>
	</desc>
</member>

<member>
	<name>setMaskPixel</name>
	<type>method</type>
	<shortdesc>マスク画像の値の設定</shortdesc>
	<arg>
		<argitem>
			<name>x</name>
			<default></default>
			<desc>
				　値を設定する ( レイヤの画像座標での ) x 座標を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>y</name>
			<default></default>
			<desc>
				　値を設定する ( レイヤの画像座標での ) y 座標を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>value</name>
			<default></default>
			<desc>
				　設定する値 ( 0 〜 255 ) を指定します。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　レイヤマスク画像 ( 不透明度を保持している画像 ) の任意の位置の値 ( 0 〜 255 ) を設定します。<r/>
		　画像座標として無効な ( 範囲外の ) 位置を指定すると例外が発生します。<r/>
	</desc>
</member>

<member>
	<name>getProvincePixel</name>
	<type>method</type>
	<shortdesc>領域画像の値の取得</shortdesc>
	<arg>
		<argitem>
			<name>x</name>
			<default></default>
			<desc>
				　値を取得する ( レイヤの画像座標での ) x 座標を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>y</name>
			<default></default>
			<desc>
				　値を取得する ( レイヤの画像座標での ) y 座標を指定します。<r/>
			</desc>
		</argitem>
	</arg>
	<result>領域画像の値 ( 0 〜 255 )</result>
	<desc>
		　レイヤ領域画像の任意の位置の値 ( 0 〜 255 ) を取得します。<r/>
		　画像座標として無効な ( 範囲外の ) 位置を指定すると例外が発生します。<r/>
	</desc>
</member>

<member>
	<name>setProvincePixel</name>
	<type>method</type>
	<shortdesc>領域画像の値の設定</shortdesc>
	<arg>
		<argitem>
			<name>x</name>
			<default></default>
			<desc>
				　値を設定する ( レイヤの画像座標での ) x 座標を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>y</name>
			<default></default>
			<desc>
				　値を設定する ( レイヤの画像座標での ) y 座標を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>value</name>
			<default></default>
			<desc>
				　設定する値 ( 0 〜 255 ) を指定します。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　レイヤ領域画像の任意の位置の値 ( 0 〜 255 ) を設定します。<r/>
		　画像座標として無効な ( 範囲外の ) 位置を指定すると例外が発生します。<r/>
	</desc>
</member>

<member>
	<name>getLayerAt</name>
	<type>method</type>
	<shortdesc>指定位置のレイヤを取得</shortdesc>
	<arg>
		<argitem>
			<name>x</name>
			<default></default>
			<desc>
				　取得したいレイヤの位置の x 座標を表示座標上でピクセル単位で指定します。<r/>
				　このメソッドを実行するレイヤの表示座標が用いられます ( プライマリレイヤ上の
				表示座標ではありません )<r/>
			</desc>
		</argitem>
		<argitem>
			<name>y</name>
			<default></default>
			<desc>
				　取得したいレイヤの位置の y 座標を表示座標上でピクセル単位で指定します。<r/>
				　このメソッドを実行するレイヤの表示座標が用いられます ( プライマリレイヤ上の
				表示座標ではありません )<r/>
			</desc>
		</argitem>
		<argitem>
			<name>exclude_self</name>
			<default>false</default>
			<desc>
				　レイヤの検索から自分自身を除外するかどうかを指定します。<r/>
				　偽を指定すると、自分自身のレイヤも検索に含まれます。<r/>
				　真を指定すると、自分自身のレイヤは検索から除外され、あたかも存在しないかのように扱われます。<r/>
				　この引数を省略すると偽が指定されたと見なされます。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>get_disabled</name>
			<default>false</default>
			<desc>
				　無効になっているレイヤのオブジェクトを得るかどうかを指定します。<r/>
				　偽を指定すると、無効 (<ref>Layer.enabled</ref> プロパティが偽など) になっているレイヤが指定位置にあった場合、null が返ります。<r/>
				　真を指定すると、無効になっているレイヤが指定位置にあった場合は、そのレイヤオブジェクトを返します。<r/>
				　この引数を省略すると偽が指定されたと見なされます。<r/>
			</desc>
		</argitem>
	</arg>
	<result>指定位置にあったレイヤオブジェクト。指定位置にレイヤが無かった場合などは null が戻ります。</result>
	<desc>
		　x,y で示された位置にあるレイヤオブジェクトを返します。<r/>
		　当たり判定は通常のマウスイベントの当たり判定と同じ機構が用いられます。つまり、指定位置を、レイヤの重ね順において一番手前から見ていき、最初に当たり判定に該当したレイヤが返されます。<r/>
		　exclude_self 引数で真を指定すると、このメソッドを実行するレイヤを検索の対象から除外することができます。<r/>
	</desc>
	<ref>Layer.hitType</ref>
	<ref>Layer.hitThreshold</ref>
	<ref>Layer.onHitTest</ref>
</member>

<member>
	<name>releaseCapture</name>
	<type>method</type>
	<shortdesc>マウスイベントキャプチャの解除</shortdesc>
	<arg>
	</arg>
	<result></result>
	<desc>
		　マウスイベントキャプチャを解除します。<r/>
		　マウスイベントキャプチャとは、最初にマウスボタンを押下した位置にあったレイヤのみに、マウスボタンを放すまでずっとマウスイベントが占有的に送られる機能です。<r/>
		　このメソッドは、この機能を解除し、通常のマウスイベントの処理状態に戻します。<r/>
		　このメソッドを実行すると、同じウィンドウに属しているレイヤのマウスキャプチャは、たとえメソッドを実行するレイヤとキャプチャの対象となっているレイヤが異なっていても解除されます。<r/>
		　このメソッドはキャプチャ状態でない場合は何もしません。<r/>
	</desc>
</member>

<member>
	<name>setPos</name>
	<type>method</type>
	<shortdesc>レイヤ表示位置の設定</shortdesc>
	<arg>
		<argitem>
			<name>left</name>
			<default></default>
			<desc>
				　レイヤの ( 親レイヤの表示座標での ) 左端位置をピクセル単位で指定します。<r/>
				　この値は <ref>Layer.left</ref> プロパティでも取得や設定ができます。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>top</name>
			<default></default>
			<desc>
				　レイヤの ( 親レイヤの表示座標での ) 上端位置をピクセル単位で指定します。<r/>
				　この値は <ref>Layer.top</ref> プロパティでも取得や設定ができます。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>width</name>
			<default>void</default>
			<desc>
				　レイヤの横幅をピクセル単位で指定します。<r/>
				　この値は <ref>Layer.width</ref> プロパティでも取得や設定ができます。<r/>
				　この引数と height 引数が省略された場合は left 引数と top 引数による位置の変更のみとなります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>height</name>
			<default>void</default>
			<desc>
				　レイヤの縦幅をピクセル単位で指定します。<r/>
				　この値は <ref>Layer.height</ref> プロパティでも取得や設定ができます。<r/>
				　この引数と width 引数が省略された場合は left 引数と top 引数による位置の変更のみと
				なります。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　レイヤの表示位置を設定します。<r/>
	</desc>
</member>

<member>
	<name>setClip</name>
	<type>method</type>
	<shortdesc>描画クリップ矩形の設定</shortdesc>
	<arg>
		<argitem>
			<name>left</name>
			<default></default>
			<desc>
				　描画クリップ矩形の ( レイヤの画像座標での ) 左端位置をピクセル単位で指定します。<r/>
				　この値は <ref>Layer.clipLeft</ref> プロパティでも取得や設定ができます。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>top</name>
			<default></default>
			<desc>
				　描画クリップ矩形の ( レイヤの画像座標での ) 上端位置をピクセル単位で指定します。<r/>
				　この値は <ref>Layer.clipTop</ref> プロパティでも取得や設定ができます。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>width</name>
			<default>void</default>
			<desc>
				　描画クリップ矩形の横幅をピクセル単位で指定します。<r/>
				　この値は <ref>Layer.clipWidth</ref> プロパティでも取得や設定ができます。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>height</name>
			<default>void</default>
			<desc>
				　描画クリップ矩形の縦幅をピクセル単位で指定します。<r/>
				　この値は <ref>Layer.clipHeight</ref> プロパティでも取得や設定ができます。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　レイヤの<kw>描画クリップ矩形</kw>を設定します。<r/>
		　レイヤに対する描画は、この描画クリップ矩形内に制限されます ( 矩形外にはみ出た部分は
		描画されません )。ただし、<ref>Layer.flipLR</ref> や <ref>Layer.flipUD</ref> のように
		描画クリップ矩形の影響を受けないメソッドもあります。<r/>
		　初期値は、クリップ矩形はレイヤ画像領域全体に設定されています ( レイヤ全面
		に描画する事ができます )。<r/>
		　描画クリップ矩形は、画像読み込みや画像サイズが変更されたり、レイヤの表示タイプが
		変更されると初期値に戻ります。<r/>
		　また、このメソッドを引数なしで呼び出すと、描画クリップ矩形を初期値に戻すことができます。<r/>
	</desc>
</member>

<member>
	<name>setSize</name>
	<type>method</type>
	<shortdesc>レイヤ表示サイズの設定</shortdesc>
	<arg>
		<argitem>
			<name>width</name>
			<default></default>
			<desc>
				　レイヤの表示の横幅をピクセル単位で指定します。<r/>
				　この値は <ref>Layer.width</ref> プロパティでも取得や設定ができます。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>height</name>
			<default></default>
			<desc>
				　レイヤの表示の縦幅をピクセル単位で指定します。<r/>
				　この値は <ref>Layer.height</ref> プロパティでも取得や設定ができます。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　レイヤの表示サイズを設定します。<r/>
	</desc>
</member>

<member>
	<name>setSizeToImageSize</name>
	<type>method</type>
	<shortdesc>レイヤ表示サイズを画像サイズに合わせる</shortdesc>
	<arg>
	</arg>
	<result></result>
	<desc>
		　レイヤの表示サイズを画像サイズと同じにします。<r/>
		　画像サイズを変更する多くの操作では表示サイズまでは変更しませんが、
		このメソッドを使うと表示サイズを画像サイズと同じにすることができます。<r/>
	</desc>
</member>

<member>
	<name>setImagePos</name>
	<type>method</type>
	<shortdesc>レイヤ画像オフセットの設定</shortdesc>
	<arg>
		<argitem>
			<name>left</name>
			<default></default>
			<desc>
				　レイヤに表示する画像の左端位置 ( x オフセット ) をピクセル単位で指定します。<r/>
				　この値は <ref>Layer.imageLeft</ref> プロパティでも取得や設定ができます。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>top</name>
			<default></default>
			<desc>
				　レイヤに表示する画像の上端位置 ( y オフセット ) をピクセル単位で指定します。<r/>
				　この値は <ref>Layer.imageTop</ref> プロパティでも取得や設定ができます。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　レイヤ画像オフセットを指定します。<r/>
		　レイヤ画像サイズはレイヤ表示サイズより大きくすることができますが、すべてを表示する
		ことはできませんので、このメソッドや <ref>Layer.imageLeft</ref> や <ref>Layer.imageTop</ref>
		プロパティで表示オフセットを指定することになります。<r/>
		　オフセットは、 0 か、負の数値になります。<r/>
	</desc>
</member>

<member>
	<name>setImageSize</name>
	<type>method</type>
	<shortdesc>レイヤ画像サイズの設定</shortdesc>
	<arg>
		<argitem>
			<name>width</name>
			<default></default>
			<desc>
				　レイヤ画像の横幅をピクセル単位で指定します。<r/>
				　この値は <ref>Layer.imageWidth</ref> プロパティでも取得や設定ができます。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>height</name>
			<default></default>
			<desc>
				　レイヤ画像の縦幅をピクセル単位で指定します。<r/>
				　この値は <ref>Layer.imageHeight</ref> プロパティでも取得や設定ができます。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　レイヤ画像サイズを指定します。<r/>
		　サイズが拡張される場合は、レイヤの表示サイズは変更されませんが、サイズが縮小
		される場合はレイヤの表示サイズも縮小されます。<r/>
	</desc>
</member>

<member>
	<name>independMainImage</name>
	<type>method</type>
	<shortdesc>メイン画像の共有の解除</shortdesc>
	<arg>
		<argitem>
			<name>copy</name>
			<default>true</default>
			<desc>
				　共有状態を解除する際、元の画像をコピーするかどうかを指定します。<r/>
				　真を指定すると元の画像をコピーします。偽を指定すると元の画像はコピーされず、画像の
				内容は不定となります。
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　レイヤ画像の共有状態を強制的に解除します。<r/>
		　吉里吉里は、assignImages などで画像をまるごと他のレイヤにコピーした場合、実際には
		画像バッファのコピーを行わず、同一の画像を共有するようになります。<r/>
		　通常、画像に変更を加えようとする直前でこの共有状態は自動的に解除されますが、
		このメソッドで強制的に解除することができます。<r/>
		　copy 引数に false を指定した場合は、画像の共有は解除されますが、元の画像を
		引き継ぐことは保証されません ( 画像の内容は不定になります ) が、共有の解除を
		より高速に行うことができます。レイヤの画像全部を書き換える場合は元の画像を
		引き継ぐ必要はありませんので、描画を行う前にあらかじめこのメソッドに false を
		指定して呼び出すと効率が良くなる場合があります。<r/>
		　このメソッドは、画像が共有されていない場合は何もしません。<r/>
	</desc>
</member>

<member>
	<name>independProvinceImage</name>
	<type>method</type>
	<shortdesc>領域画像の共有の解除</shortdesc>
	<arg>
		<argitem>
			<name>copy</name>
			<default>true</default>
			<desc>
				　共有状態を解除する際、元の画像をコピーするかどうかを指定します。<r/>
				　真を指定すると元の画像をコピーします。偽を指定すると元の画像はコピーされず、画像の
				内容は不定となります。
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　領域画像の共有状態を強制的に解除します。<r/>
		　吉里吉里は、assignImages などで画像をまるごと他のレイヤにコピーした場合、実際には
		画像バッファのコピーを行わず、同一の画像を共有するようになります。<r/>
		　通常、画像に変更を加えようとする直前でこの共有状態は自動的に解除されますが、
		このメソッドで強制的に解除することができます。<r/>
		　copy 引数に false を指定した場合は、画像の共有は解除されますが、元の画像を
		引き継ぐことは保証されません ( 画像の内容は不定になります ) が、共有の解除を
		より高速に行うことができます。レイヤの画像全部を書き換える場合は元の画像を
		引き継ぐ必要はありませんので、描画を行う前にあらかじめこのメソッドに false を
		指定して呼び出すと効率が良くなる場合があります。<r/>
		　このメソッドは、画像が共有されていない場合は何もしません。<r/>
	</desc>
</member>

<member>
	<name>fillRect</name>
	<type>method</type>
	<shortdesc>矩形塗りつぶし</shortdesc>
	<arg>
		<argitem>
			<name>left</name>
			<default></default>
			<desc>
				　塗りつぶす矩形の左端位置を ( 画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>top</name>
			<default></default>
			<desc>
				　塗りつぶす矩形の上端位置を ( 画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>width</name>
			<default></default>
			<desc>
				　塗りつぶす矩形の横幅を ( 画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>height</name>
			<default></default>
			<desc>
				　塗りつぶす矩形の縦幅を ( 画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>value</name>
			<default></default>
			<desc>
				　塗りつぶす色や値を指定します。<r/>
				　この値は、<ref>Layer.face</ref> プロパティの値によって意味が変わります。<r/>
				<tt><kw>dfAlpha</kw> (または<kw>dfBoth</kw>)  </tt> : 0xAARRGGBB 形式で不透明度と色を指定してください。メインとマスクの両方が塗りつぶされます。<r/>
				<tt><kw>dfAddAlpha</kw>              </tt> : 0xAARRGGBB 形式で不透明度と色を指定してください。メインとマスクの両方が塗りつぶされます。<r/>
				<tt><kw>dfOpaque</kw> (または<kw>dfMain</kw>) </tt> : 0xRRGGBB 形式で色を指定してください。<ref>Layer.holdAlpha</ref> プロパティが真の時は、メインのみが塗りつぶされ、マスクはそのままになります。偽の時は dfAlpha や dfAddAlpha の時と同じく、0xAARRGGBB 形式での不透明度と色の指定を受け付け、メインとマスクの両方が塗りつぶされます。<r/>
				<tt><kw>dfMask</kw>                  </tt> : マスク(不透明度)の値 ( 0 〜 255 ) を指定してください。マスクのみが塗りつぶされ、メインはそのままになります。<r/>
				<tt><kw>dfProvince</kw>              </tt> : 領域の値 ( 0 〜 255 ) を指定してください。領域のみが塗りつぶされます。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　指定されたレイヤ画像の矩形を指定された方法で塗りつぶします。<r/>
	</desc>
</member>

<member>
	<name>colorRect</name>
	<type>method</type>
	<shortdesc>矩形半透明塗りつぶし</shortdesc>
	<arg>
		<argitem>
			<name>left</name>
			<default></default>
			<desc>
				　塗りつぶす矩形の左端位置を ( 画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>top</name>
			<default></default>
			<desc>
				　塗りつぶす矩形の上端位置を ( 画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>width</name>
			<default></default>
			<desc>
				　塗りつぶす矩形の横幅を ( 画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>height</name>
			<default></default>
			<desc>
				　塗りつぶす矩形の縦幅を ( 画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>value</name>
			<default></default>
			<desc>
				　塗りつぶす色や値を指定します。<r/>
				　この値は、<ref>Layer.face</ref> プロパティの値によって意味が変わります。<r/>
				<tt><kw>dfAlpha</kw> (または<kw>dfBoth</kw>)   </tt> : 0xRRGGBB 形式で色を指定してください<r/>
				<tt><kw>dfAddAlpha</kw>                   </tt> : 0xRRGGBB 形式で色を指定してください<r/>
				<tt><kw>dfOpaque</kw> (または<kw>dfMain</kw>)  </tt> : 0xRRGGBB 形式で色を指定してください<r/>
				<tt><kw>dfMask</kw>                       </tt> : マスク(不透明度)の値 ( 0 〜 255 ) を指定してください<r/>
				<tt><kw>dfProvince</kw>                   </tt> : 領域の値 ( 0 〜 255 ) を指定してください<r/>
				　dfOpaque を指定した場合は、マスク情報は無視されます(マスク情報が保持されるか破壊されるかは <ref>Layer.holdAlpha</ref> プロパティによります)。また、dfMask を指定した場合は、色の情報はそのままになります。<r/>
				　dfAlpha の場合でかつ opa が負の場合はこの引数は無視されます。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>opa</name>
			<default>255</default>
			<desc>
				　塗りつぶす不透明度 ( -255 〜 0 〜 255 ) を指定します。<r/>
				　この引数は、<ref>Layer.face</ref> プロパティの値が dfMask や
				dfProvince の場合は無視されます ( 常に完全不透明 )。<r/>
				　負の数の指定は <ref>Layer.face</ref> が dfAlpha の場合のみに有効で、
				この場合は value 引数は無視され、画像から不透明度が取り除かれます (
				-255 を指定すると矩形は完全に透明になります )。
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　指定されたレイヤ画像の矩形を指定された方法で塗りつぶします。<r/>
		　<ref>Layer.fillRect</ref> と異なり、透明度を指定して半透明で塗りつぶすことができます。<r/>
	</desc>
</member>

<member>
	<name>drawText</name>
	<type>method</type>
	<shortdesc>文字描画</shortdesc>
	<arg>
		<argitem>
			<name>x</name>
			<default></default>
			<desc>
				　文字描画を開始する原点の ( 画像位置における ) x 座標をピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>y</name>
			<default></default>
			<desc>
				　文字描画を開始する原点の ( 画像位置における ) y 座標をピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>text</name>
			<default></default>
			<desc>
				　描画する文字を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>color</name>
			<default></default>
			<desc>
				　描画する文字の色を 0xRRGGBB 形式で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>opa</name>
			<default>255</default>
			<desc>
				　描画する文字の不透明度 ( -255 〜 0 〜 255 ) を指定します。<r/>
				　負の数の指定は <ref>Layer.face</ref> が dfAlpha の場合のみに有効で、
				この場合は文字の形に不透明度が取り除かれる事になります ( 値が小さいほど
				効果が大きくなります )。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>aa</name>
			<default>true</default>
			<desc>
				　アンチエイリアスを行うかどうかを指定します。<r/>
				　真を指定するとアンチエイリアスが行われます。偽を指定すると行われません。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>shadowlevel</name>
			<default>0</default>
			<desc>
				　影の不透明度を指定します。shadowwidth 引数の値によって適切な値は変動します。<r/>
				0 を指定すると影は描画されません。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>shadowcolor</name>
			<default>0x000000</default>
			<desc>
				　影の色を 0xRRGGBB 形式で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>shadowwidth</name>
			<default>0</default>
			<desc>
				　影の幅 ( ぼけ ) を指定します。 0 がもっともシャープ ( ぼけない ) で、値を大きく
				すると影をぼかすことができます。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>shadowofsx</name>
			<default>0</default>
			<desc>
				　影の位置の x 座標の値をピクセル単位で指定します。 0 を指定すると影は真下に描画されます。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>shadowofsy</name>
			<default>0</default>
			<desc>
				　影の位置の y 座標の値をピクセル単位で指定します。 0 を指定すると影は真下に描画されます。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　レイヤに文字を描画します。<ref>Layer.face</ref> が dfAlpha (または dfBoth) か dfAddAlpha か dfOpaque (または dfMain)
		の場合のみ描画することができます。<r/>
		　dfOpaque (またはdfMain) を指定した場合、描画先のマスクが破壊されるか保護されるかは <ref>Layer.holdAlpha</ref> プロパティによります。<r/>
		　フォントは <ref>Layer.font</ref> で指定したものが用いられます。<r/>
	</desc>
</member>

<member>
	<name>copyRect</name>
	<type>method</type>
	<shortdesc>矩形コピー</shortdesc>
	<arg>
		<argitem>
			<name>dleft</name>
			<default></default>
			<desc>
				　コピー先の矩形の左端位置を ( コピー先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>dtop</name>
			<default></default>
			<desc>
				　コピー先の矩形の上端位置を ( コピー先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>src</name>
			<default></default>
			<desc>
				　コピー元のレイヤオブジェクトを指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sleft</name>
			<default></default>
			<desc>
				　コピーする矩形の左端位置を ( コピー元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>stop</name>
			<default></default>
			<desc>
				　コピーする矩形の上端位置を ( コピー元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>swidth</name>
			<default></default>
			<desc>
				　コピーする矩形の横幅を ( コピー元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sheight</name>
			<default></default>
			<desc>
				　コピーする矩形の縦幅を ( コピー元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　指定されたコピー元レイヤの矩形部分を自分のレイヤの指定位置にコピーします。<r/>
		　コピーされる画像は、コピー先レイヤ ( メソッドを実行するレイヤ  ) の
		<ref>Layer.face</ref> プロパティの値によって変わります。<r/>
		<tt><kw>dfAlpha</kw> (または dfBoth)    </tt> : メイン画像とマスク画像がコピーされます<r/>
		<tt><kw>dfAddAlpha</kw>             </tt> : メイン画像とマスク画像がコピーされます<r/>
		<tt><kw>dfOpaque</kw> (または dfMain)   </tt> : <ref>Layer.holdAlpha</ref> プロパティが真の場合は、メイン画像のみがコピーされます ( マスク画像はコピーされません )。偽の場合はメイン画像とマスク画像がコピーされます<r/>
		<tt><kw>dfMask</kw>                 </tt> : マスク画像のみがコピーされます ( メイン画像はコピーされません )<r/>
		<tt><kw>dfProvince</kw>             </tt> : 領域画像のみがコピーされます ( マスク画像やメイン画像はコピーされません )<r/>
		　コピー元のレイヤの Layer.face プロパティは無視されます。<r/>
		　このメソッドは、<ref>Layer.holdAlpha</ref> の影響は受けません (dfAlpha や dfAddAlpha の場合は holdAlpha に関わらずマスク画像もコピーされます)<r/>
	</desc>
</member>

<member>
	<name>piledCopy</name>
	<type>method</type>
	<shortdesc>レイヤを重ね合わせた画像をコピー</shortdesc>
	<arg>
		<argitem>
			<name>dleft</name>
			<default></default>
			<desc>
				　コピー先の矩形の左端位置を ( コピー先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>dtop</name>
			<default></default>
			<desc>
				　コピー先の矩形の上端位置を ( コピー先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>src</name>
			<default></default>
			<desc>
				　コピー元のレイヤオブジェクトを指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sleft</name>
			<default></default>
			<desc>
				　コピーする矩形の左端位置を ( コピー元レイヤの表示位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>stop</name>
			<default></default>
			<desc>
				　コピーする矩形の上端位置を ( コピー元レイヤの表示位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>swidth</name>
			<default></default>
			<desc>
				　コピーする矩形の横幅を ( コピー元レイヤの表示位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sheight</name>
			<default></default>
			<desc>
				　コピーする矩形の縦幅を ( コピー元レイヤの表示位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　指定されたコピー元レイヤの指定された矩形部分を、子レイヤも含めて重ね合わせ、その
		結果の画像を、自分のレイヤの指定位置にコピーします。<r/>
		　このメソッドは、コピー元レイヤやコピー先レイヤの <ref>Layer.face</ref> プロパティには
		影響されません。
	</desc>
</member>

<member>
	<name>pileRect</name>
	<type>method</type>
	<shortdesc>矩形ピクセルアルファブレンド重ね合わせ</shortdesc>
	<arg>
		<argitem>
			<name>dleft</name>
			<default></default>
			<desc>
				　重ね合わせ先の矩形の左端位置を ( 重ね合わせ先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>dtop</name>
			<default></default>
			<desc>
				　重ね合わせ先の矩形の上端位置を ( 重ね合わせ先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>src</name>
			<default></default>
			<desc>
				　重ね合わせ元のレイヤオブジェクトを指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sleft</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の左端位置を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>stop</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の上端位置を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>swidth</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の横幅を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sheight</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の縦幅を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>opa</name>
			<default>255</default>
			<desc>
				　重ね合わせの不透明度 ( 0 〜 255 ) を指定します。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　指定された重ね合わせ元レイヤの矩形部分を自分のレイヤの指定位置に重ね合わせます。<r/>
		　ピクセルごとの不透明度 ( ピクセルアルファ ) を用いた重ね合わせを行うことができます。<r/>
		　重ね合わされる画像は、重ね合わせ先の ( メソッドを実行する ) レイヤの <ref>Layer.face</ref>
		プロパティの値によって変わります。<r/>
		<tt><kw>dfAlpha</kw> (または<kw>dfBoth</kw>)    </tt> : 重ね合わせ先の不透明度を考慮した重ね合わせが行われます<r/>
		<tt><kw>dfOpaque</kw> (または<kw>dfMain</kw>)   </tt> : 重ね合わせ先の不透明度を無視した重ね合わせが行われます(重ね合わせ先は全面完全不透明として扱われます)<r/>
		<tt><kw>それ以外</kw>  </tt>                 : できません ( 例外が発生します )<r/>
		　重ね合わせ元のレイヤの Layer.face プロパティは無視されます ( 常にメイン画像とマスク画像を
		用いてアルファブレンドが行われます )。<r/>
		<r/>
		　このメソッドは旧式になりました。代わりに <ref>Layer.operateRect</ref> を使用してください。演算のモードに omAlpha か omAddAlpha を指定すると同じ効果になります(omAlphaを指定するのかomAddAlphaを指定するのかはsrcのアルファタイプによって異なります。omAutoを指定すればsrcのレイヤタイプに従って自動的に決定されます)。<r/>
	</desc>
</member>

<member>
	<name>blendRect</name>
	<type>method</type>
	<shortdesc>矩形重ね合わせ</shortdesc>
	<arg>
		<argitem>
			<name>dleft</name>
			<default></default>
			<desc>
				　重ね合わせ先の矩形の左端位置を ( 重ね合わせ先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>dtop</name>
			<default></default>
			<desc>
				　重ね合わせ先の矩形の上端位置を ( 重ね合わせ先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>src</name>
			<default></default>
			<desc>
				　重ね合わせ元のレイヤオブジェクトを指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sleft</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の左端位置を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>stop</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の上端位置を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>swidth</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の横幅を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sheight</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の縦幅を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>opa</name>
			<default>255</default>
			<desc>
				　重ね合わせの不透明度 ( 0 〜 255 ) を指定します。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　指定された重ね合わせ元レイヤの矩形部分を自分のレイヤの指定位置に重ね合わせます。<r/>
		　重ね合わせ元のレイヤの Layer.face プロパティは無視されますが、<ref>Layer.pileRect</ref> と異な
		り、重ね合わせ元のレイヤの不透明度は無視されます ( 常に完全に不透明であると見なされます )。<r/>
		　重ね合わされる画像は、重ね合わせ先の ( メソッドを実行する ) レイヤの <ref>Layer.face</ref>
		　プロパティの値によって変わります。<r/>
		<tt><kw>dfAlpha</kw> (または<kw>dfBoth</kw>)    </tt> : 重ね合わせ先の不透明度を考慮した重ね合わせが行われます<r/>
		<tt><kw>dfOpaque</kw> (または<kw>dfMain</kw>)   </tt> : 重ね合わせ先の不透明度を無視した重ね合わせが行われます(重ね合わせ先は全面完全不透明として扱われます)<r/>
		<tt><kw>それ以外</kw>  </tt>                 : できません ( 例外が発生します )<r/>
		<r/>
		　このメソッドは旧式になりました。代わりに <ref>Layer.operateRect</ref> を使用してください。演算のモードに omOpaque を指定すると同じ効果になります。<r/>
	</desc>
</member>


<member>
	<name>operateRect</name>
	<type>method</type>
	<shortdesc>矩形演算合成</shortdesc>
	<arg>
		<argitem>
			<name>dleft</name>
			<default></default>
			<desc>
				　演算先の矩形の左端位置を ( 演算先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>dtop</name>
			<default></default>
			<desc>
				　演算先の矩形の上端位置を ( 演算先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>src</name>
			<default></default>
			<desc>
				　演算元のレイヤオブジェクトを指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sleft</name>
			<default></default>
			<desc>
				　演算する矩形の左端位置を ( 演算元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>stop</name>
			<default></default>
			<desc>
				　演算する矩形の上端位置を ( 演算元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>swidth</name>
			<default></default>
			<desc>
				　演算する矩形の横幅を ( 演算元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sheight</name>
			<default></default>
			<desc>
				　演算する矩形の縦幅を ( 演算元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>mode</name>
			<default>omAuto</default>
			<desc>
				　演算のモードを指定します。<r/>
				<tt><kw>omAuto</kw></tt> が指定された場合は演算元レイヤの<ref>Layer.type</ref>プロパティに従って演算の種類が自動的に決定されます。<r/>
				<tt><kw>omPsNormal</kw></tt> が指定された場合はPhotoshop互換のアルファ合成が行われます。<r/>
				<tt><kw>omPsAdditive</kw></tt> が指定された場合はPhotoshop互換の覆い焼き(リニア)合成が行われます。<r/>
				<tt><kw>omPsSubtractive</kw></tt> が指定された場合はPhotoshop互換の焼き込み(リニア)合成が行われます。<r/>
				<tt><kw>omPsMultiplicative</kw></tt> が指定された場合はPhotoshop互換の乗算合成が行われます。<r/>
				<tt><kw>omPsScreen</kw></tt> が指定された場合はPhotoshop互換のスクリーン合成が行われます。<r/>
				<tt><kw>omPsOverlay</kw></tt> が指定された場合はPhotoshop互換のオーバーレイ合成が行われます。<r/>
				<tt><kw>omPsHardLight</kw></tt> が指定された場合はPhotoshop互換のハードライト合成が行われます。<r/>
				<tt><kw>omPsSoftLight</kw></tt> が指定された場合はPhotoshop互換のソフトライト合成が行われます。<r/>
				<tt><kw>omPsColorDodge</kw></tt> が指定された場合はPhotoshop互換の覆い焼きカラー合成が行われます。<r/>
				<tt><kw>omPsColorDodge5</kw></tt> が指定された場合はPhotoshopのバージョン5.x 以下と互換の覆い焼きカラー合成が行われます。<r/>
				<tt><kw>omPsColorBurn</kw></tt> が指定された場合はPhotoshop互換の焼き込みカラー合成が行われます。<r/>
				<tt><kw>omPsLighten</kw></tt> が指定された場合はPhotoshop互換の比較(明)合成が行われます。<r/>
				<tt><kw>omPsDarken</kw></tt> が指定された場合はPhotoshop互換の比較(暗)合成が行われます。<r/>
				<tt><kw>omPsDifference</kw></tt> が指定された場合はPhotoshop互換の差の絶対値合成が行われます。<r/>
				<tt><kw>omPsDifference5</kw></tt> が指定された場合はPhotoshopのバージョン 5.x 以下と互換の差の絶対値合成が行われます。<r/>
				<tt><kw>omPsExclusion</kw></tt> が指定された場合はPhotoshop互換の除外合成が行われます。<r/>
				<tt><kw>omAdditive</kw></tt> が指定された場合は加算合成が行われます。<r/>
				<tt><kw>omSubtractive</kw></tt> が指定された場合は減算合成が行われます。<r/>
				<tt><kw>omMultiplicative</kw></tt> が指定された場合は乗算合成が行われます。<r/>
				<tt><kw>omDodge</kw></tt> が指定された場合は覆い焼き合成が行われます。<r/>
				<tt><kw>omDarken</kw></tt> が指定された場合は比較(暗)合成が行われます。<r/>
				<tt><kw>omLighten</kw></tt> が指定された場合は比較(明)合成が行われます。<r/>
				<tt><kw>omScreen</kw></tt> が指定された場合はスクリーン乗算合成が行われます。<r/>
				<tt><kw>omAlpha</kw></tt> が指定された場合はアルファ合成が行われます。<r/>
				<tt><kw>omAddAlpha</kw></tt> が指定された場合は加算アルファ合成が行われます。<r/>
				<tt><kw>omOpaque</kw></tt> が指定された場合は src のアルファ情報は無視され、src は常に完全不透明であると見なされます。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>opa</name>
			<default>255</default>
			<desc>
				　演算の強度 ( 0 〜 255 ) を指定します。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　指定された演算元レイヤの矩形部分を自分のレイヤの指定位置に指定のモードで演算合成します。<r/>
		　演算先の ( メソッドを実行する ) レイヤや演算元のレイヤの <ref>Layer.face</ref> プロパティの値
		は無視されます。<r/>
		　mode に omAuto を指定した場合は、演算元レイヤの<ref>Layer.type</ref>プロパティに従って演算の種類が自動的に決定されます。<r/>
	</desc>
</member>


<member>
	<name>stretchCopy</name>
	<type>method</type>
	<shortdesc>拡大縮小コピー</shortdesc>
	<arg>
		<argitem>
			<name>dleft</name>
			<default></default>
			<desc>
				　コピー先の矩形の左端位置を ( コピー先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>dtop</name>
			<default></default>
			<desc>
				　コピー先の矩形の上端位置を ( コピー先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>dwidth</name>
			<default></default>
			<desc>
				　コピー先の矩形の横幅を ( コピー先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>dheight</name>
			<default></default>
			<desc>
				　コピー先の矩形の縦幅を ( コピー先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>src</name>
			<default></default>
			<desc>
				　コピー元のレイヤオブジェクトを指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sleft</name>
			<default></default>
			<desc>
				　コピーする矩形の左端位置を ( コピー元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>stop</name>
			<default></default>
			<desc>
				　コピーする矩形の上端位置を ( コピー元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>swidth</name>
			<default></default>
			<desc>
				　コピーする矩形の横幅を ( コピー元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sheight</name>
			<default></default>
			<desc>
				　コピーする矩形の縦幅を ( コピー元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>type</name>
			<default>stNearest</default>
			<desc>
				　拡大縮小のタイプを指定します。<r/>
				<tt><kw>stNearest</kw>    </tt> : 最近傍点法が用いられます<r/>
				<tt><kw>stFastLinear</kw> </tt> : 低精度の線形補間が用いられます(一部実装)<r/>
				<tt><kw>stLinear</kw>     </tt> : 線形補間が用いられます(一部実装)<r/>
				<tt><kw>stCubic</kw>      </tt> : ３次元補間が用いられます(一部実装)<r/>
				　速度は stNearest > stFastLinear > stLinear > stCubic の順に高速ですが、画質は速度が
				速ければ速いタイプほど低画質になります。<r/>
				　stFastLinear や stLinear, stCubic に対しては、stRefNoClip をビット論理和で追加指定
				することができ、この場合は、コピーするビットマップの領域外を参照して色を合成することを
				許可します。これを指定しない場合は、転送元ビットマップの周囲に余裕があったとしても、
				転送元ビットマップの範囲外を参照することはありません(範囲外の色はもっとも近い位置にある
				範囲内のピクセルの色と見なされます)。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　指定されたコピー元レイヤの矩形を、コピー先 ( メソッドを実行するレイヤ ) の矩形に
		コピーします。コピー元矩形とコピー先矩形のサイズが異なる場合は拡大または縮小が
		行われます。<r/>
		　現バージョンでは stFastLinear の指定で線形補間が効くのは、重ね合わせ先の ( メソッドを実行する ) レイヤの <ref>Layer.face</ref> プロパティが dfAlpha (または dfBoth) または dfAddAlpha の場合です。また、Layer.face プロパティが dfOpaque で、<ref>Layer.holdAlpha</ref> プロパティが偽の時も線形補間が可能です。<r/>
		　また、現バージョンでは stLinear あるいは stCubic の指定が有効なのは、左右／上下反転を
		伴わず、コピー先矩形がレイヤをはみ出さない場合のみです。<r/>
		　重ね合わせ先の ( メソッドを実行する ) レイヤの <ref>Layer.face</ref> プロパティが
		dfAlpha (または dfBoth) または dfAddAlpha の場合は、メイン画像とマスク画像の両方がコピーされます。<r/>
		　dfOpaque (または dfMain) の場合は、<ref>Layer.holdAlpha</ref> プロパティが真の時はメイン画像のみがコピーされ、偽の時はメイン画像とマスク画像の両方がコピーされます。<r/>
	</desc>
</member>

<member>
	<name>stretchPile</name>
	<type>method</type>
	<shortdesc>拡大縮小ピクセルアルファブレンド重ね合わせ</shortdesc>
	<arg>
		<argitem>
			<name>dleft</name>
			<default></default>
			<desc>
				　重ね合わせ先の矩形の左端位置を ( 重ね合わせ先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>dtop</name>
			<default></default>
			<desc>
				　重ね合わせ先の矩形の上端位置を ( 重ね合わせ先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>dwidth</name>
			<default></default>
			<desc>
				　重ね合わせ先の矩形の横幅を ( 重ね合わせ先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>dheight</name>
			<default></default>
			<desc>
				　重ね合わせ先の矩形の縦幅を ( 重ね合わせ先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>src</name>
			<default></default>
			<desc>
				　重ね合わせ元のレイヤオブジェクトを指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sleft</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の左端位置を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>stop</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の上端位置を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>swidth</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の横幅を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sheight</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の縦幅を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>opa</name>
			<default>255</default>
			<desc>
				　重ね合わせの不透明度 ( 0 〜 255 ) を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>type</name>
			<default>stNearest</default>
			<desc>
				　拡大縮小のタイプを指定します。<r/>
				<tt><kw>stNearest</kw>    </tt> : 最近傍点法が用いられます<r/>
				<tt><kw>stFastLinear</kw> </tt> : 低精度の線形補間が用いられます(未実装)<r/>
				<tt><kw>stLinear</kw>     </tt> : 線形補間が用いられます(未実装)<r/>
				<tt><kw>stCubic</kw>      </tt> : ３次元補間が用いられます(未実装)<r/>
				　速度は stNearest > stFastLinear > stLinear > stCubic の順に高速ですが、画質は速度が
				速ければ速いタイプほど低画質になります。<r/>
				　stFastLinear や stLinear, stCubic に対しては、stRefNoClip をビット論理和で追加指定
				することができ、この場合は、コピーするビットマップの領域外を参照して色を合成することを
				許可します。これを指定しない場合は、転送元ビットマップの周囲に余裕があったとしても、
				転送元ビットマップの範囲外を参照することはありません(範囲外の色はもっとも近い位置にある
				範囲内のピクセルの色と見なされます)。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　指定された重ね合わせ元レイヤの矩形を、重ね合わせ先 ( メソッドを実行するレイヤ ) の矩形に
		重ね合わせます。重ね合わせ元矩形と重ね合わせ先矩形のサイズが異なる場合は拡大または縮小が
		行われます。<r/>
		　ピクセルごとの不透明度 ( ピクセルアルファ ) を用いた重ね合わせを行うことができます。<r/>
		　現バージョンでは mode には stNearest のみ指定できます。<r/>
		　重ね合わされる画像は、重ね合わせ先の ( メソッドを実行する ) レイ
		ヤの <ref>Layer.face</ref> プロパティの値によって変わります。<r/>
		<tt><kw>dfAlpha</kw> (または<kw>dfBoth</kw>)    </tt> : 重ね合わせ先の不透明度を考慮した重ね合わせが行われます<r/>
		<tt><kw>dfOpaque</kw> (または<kw>dfMain</kw>)   </tt> : 重ね合わせ先の不透明度を無視した重ね合わせが行われます(重ね合わせ先は全面完全不透明として扱われます)<r/>
		<tt><kw>それ以外</kw>  </tt>                 : できません ( 例外が発生します )<r/>
		<r/>
		　このメソッドは旧式になりました。代わりに <ref>Layer.operateStretch</ref> を使用してください。演算のモードに omAlpha か omAddAlpha を指定すると同じ効果になります(omAlphaを指定するのかomAddAlphaを指定するのかはsrcのアルファタイプによって異なります。omAutoを指定すればsrcのレイヤタイプに従って自動的に決定されます)。<r/>
	</desc>
</member>

<member>
	<name>stretchBlend</name>
	<type>method</type>
	<shortdesc>拡大縮小重ね合わせ</shortdesc>
	<arg>
		<argitem>
			<name>dleft</name>
			<default></default>
			<desc>
				　重ね合わせ先の矩形の左端位置を ( 重ね合わせ先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>dtop</name>
			<default></default>
			<desc>
				　重ね合わせ先の矩形の上端位置を ( 重ね合わせ先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>dwidth</name>
			<default></default>
			<desc>
				　重ね合わせ先の矩形の横幅を ( 重ね合わせ先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>dheight</name>
			<default></default>
			<desc>
				　重ね合わせ先の矩形の縦幅を ( 重ね合わせ先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>src</name>
			<default></default>
			<desc>
				　重ね合わせ元のレイヤオブジェクトを指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sleft</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の左端位置を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>stop</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の上端位置を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>swidth</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の横幅を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sheight</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の縦幅を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>opa</name>
			<default>255</default>
			<desc>
				　重ね合わせの不透明度 ( 0 〜 255 ) を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>type</name>
			<default>stNearest</default>
			<desc>
				　拡大縮小のタイプを指定します。<r/>
				<tt><kw>stNearest</kw>    </tt> : 最近傍点法が用いられます<r/>
				<tt><kw>stFastLinear</kw> </tt> : 低精度の線形補間が用いられます(一部実装)<r/>
				<tt><kw>stLinear</kw>     </tt> : 線形補間が用いられます(未実装)<r/>
				<tt><kw>stCubic</kw>      </tt> : ３次元補間が用いられます(未実装)<r/>
				　速度は stNearest > stFastLinear > stLinear > stCubic の順に高速ですが、画質は速度が
				速ければ速いタイプほど低画質になります。<r/>
				　stFastLinear や stLinear, stCubic に対しては、stRefNoClip をビット論理和で追加指定
				することができ、この場合は、コピーするビットマップの領域外を参照して色を合成することを
				許可します。これを指定しない場合は、転送元ビットマップの周囲に余裕があったとしても、
				転送元ビットマップの範囲外を参照することはありません(範囲外の色はもっとも近い位置にある
				範囲内のピクセルの色と見なされます)。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　指定された重ね合わせ元レイヤの矩形を、重ね合わせ先 ( メソッドを実行するレイヤ ) の矩形に
		重ね合わせます。重ね合わせ元矩形と重ね合わせ先矩形のサイズが異なる場合は拡大または縮小が
		行われます。<r/>
		　重ね合わせ元のレイヤの Layer.face プロパティは無視されますが、<ref>Layer.stretchPile</ref> と異な
		り、重ね合わせ元のレイヤの不透明度は無視されます ( 常に完全に不透明であると見なされます )。<r/>
		　重ね合わされる画像は、重ね合わせ先の ( メソッドを実行する ) レイヤの <ref>Layer.face</ref> プロパティの値によって変わります。<r/>
		<tt><kw>dfAlpha</kw> (または<kw>dfBoth</kw>)    </tt> : 重ね合わせ先の不透明度を考慮した重ね合わせが行われます<r/>
		<tt><kw>dfOpaque</kw> (または<kw>dfMain</kw>)   </tt> : 重ね合わせ先の不透明度を無視した重ね合わせが行われます(重ね合わせ先は全面完全不透明として扱われます)。この場合は、<ref>Layer.holdAlpha</ref>プロパティが偽のとき、type 引数に stFastLinear を指定することにより、線形補間が可能です。<r/>
		<tt><kw>それ以外</kw>  </tt>                 : できません ( 例外が発生します )<r/>
		<r/>
		　このメソッドは旧式になりました。代わりに <ref>Layer.operateStretch</ref> を使用してください。演算のモードに omOpaque を指定すると同じ効果になります。<r/>
	</desc>
</member>

<member>
	<name>operateStretch</name>
	<type>method</type>
	<shortdesc>拡大縮小演算合成</shortdesc>
	<arg>
		<argitem>
			<name>dleft</name>
			<default></default>
			<desc>
				　重ね合わせ先の矩形の左端位置を ( 重ね合わせ先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>dtop</name>
			<default></default>
			<desc>
				　重ね合わせ先の矩形の上端位置を ( 重ね合わせ先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>dwidth</name>
			<default></default>
			<desc>
				　重ね合わせ先の矩形の横幅を ( 重ね合わせ先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>dheight</name>
			<default></default>
			<desc>
				　重ね合わせ先の矩形の縦幅を ( 重ね合わせ先レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>src</name>
			<default></default>
			<desc>
				　重ね合わせ元のレイヤオブジェクトを指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sleft</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の左端位置を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>stop</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の上端位置を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>swidth</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の横幅を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sheight</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の縦幅を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>mode</name>
			<default>omAuto</default>
			<desc>
				　演算のモードを指定します。<r/>
				<tt><kw>omAuto</kw></tt> が指定された場合は演算元レイヤの<ref>Layer.type</ref>プロパティに従って演算の種類が自動的に決定されます。<r/>
				<tt><kw>omPsNormal</kw></tt> が指定された場合はPhotoshop互換のアルファ合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsAdditive</kw></tt> が指定された場合はPhotoshop互換の覆い焼き(リニア)合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsSubtractive</kw></tt> が指定された場合はPhotoshop互換の焼き込み(リニア)合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsMultiplicative</kw></tt> が指定された場合はPhotoshop互換の乗算合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsScreen</kw></tt> が指定された場合はPhotoshop互換のスクリーン合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsOverlay</kw></tt> が指定された場合はPhotoshop互換のオーバーレイ合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsHardLight</kw></tt> が指定された場合はPhotoshop互換のハードライト合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsSoftLight</kw></tt> が指定された場合はPhotoshop互換のソフトライト合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsColorDodge</kw></tt> が指定された場合はPhotoshop互換の覆い焼きカラー合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsColorDodge5</kw></tt> が指定された場合はPhotoshopのバージョン5.x 以下と互換の覆い焼きカラー合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsColorBurn</kw></tt> が指定された場合はPhotoshop互換の焼き込みカラー合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsLighten</kw></tt> が指定された場合はPhotoshop互換の比較(明)合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsDarken</kw></tt> が指定された場合はPhotoshop互換の比較(暗)合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsDifference</kw></tt> が指定された場合はPhotoshop互換の差の絶対値合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsDifference5</kw></tt> が指定された場合はPhotoshopのバージョン 5.x 以下と互換の差の絶対値合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsExclusion</kw></tt> が指定された場合はPhotoshop互換の除外合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omAdditive</kw></tt> が指定された場合は加算合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omSubtractive</kw></tt> が指定された場合は減算合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omMultiplicative</kw></tt> が指定された場合は乗算合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omDodge</kw></tt> が指定された場合は覆い焼き合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omDarken</kw></tt> が指定された場合は比較(暗)合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omLighten</kw></tt> が指定された場合は比較(明)合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omScreen</kw></tt> が指定された場合はスクリーン乗算合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omAlpha</kw></tt> が指定された場合はアルファ合成が行われます。<r/>
				<tt><kw>omAddAlpha</kw></tt> が指定された場合は加算アルファ合成が行われます。この場合は、転送先の <ref>Layer.face</ref> プロパティが dfOpaque かつ <ref>Layer.holdAlpha</ref> プロパティが偽のとき、type 引数に stFastLinear を指定することにより線形補間が可能です。<r/>
				<tt><kw>omOpaque</kw></tt> が指定された場合は src のアルファ情報は無視され、src は常に完全不透明であると見なされます。この場合は、転送先の <ref>Layer.face</ref> プロパティが dfOpaque かつ <ref>Layer.holdAlpha</ref> プロパティが偽のとき、type 引数に stFastLinear を指定することにより線形補間が可能です。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>opa</name>
			<default>255</default>
			<desc>
				　演算の強度 ( 0 〜 255 ) を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>type</name>
			<default>stNearest</default>
			<desc>
				　拡大縮小のタイプを指定します。<r/>
				<tt><kw>stNearest</kw>    </tt> : 最近傍点法が用いられます<r/>
				<tt><kw>stFastLinear</kw> </tt> : 低精度の線形補間が用いられます(一部実装)<r/>
				<tt><kw>stLinear</kw>     </tt> : 線形補間が用いられます(未実装)<r/>
				<tt><kw>stCubic</kw>      </tt> : ３次元補間が用いられます(未実装)<r/>
				　速度は stNearest > stFastLinear > stLinear > stCubic の順に高速ですが、画質は速度が
				速ければ速いタイプほど低画質になります。<r/>
				　stFastLinear や stLinear, stCubic に対しては、stRefNoClip をビット論理和で追加指定
				することができ、この場合は、コピーするビットマップの領域外を参照して色を合成することを
				許可します。これを指定しない場合は、転送元ビットマップの周囲に余裕があったとしても、
				転送元ビットマップの範囲外を参照することはありません(範囲外の色はもっとも近い位置にある
				範囲内のピクセルの色と見なされます)。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　指定された重ね合わせ元レイヤの矩形を、重ね合わせ先 ( メソッドを実行するレイヤ ) の矩形に
		演算合成します。重ね合わせ元矩形と重ね合わせ先矩形のサイズが異なる場合は拡大または縮小が行われます。<r/>
		　mode に omAuto を指定した場合は、演算元レイヤの<ref>Layer.type</ref>プロパティに従って演算の種類が自動的に決定されます。<r/>
	</desc>
</member>




<member>
	<name>affineCopy</name>
	<type>method</type>
	<shortdesc>アフィン変換コピー</shortdesc>
	<arg>
		<argitem>
			<name>src</name>
			<default></default>
			<desc>
				　コピー元のレイヤオブジェクトを指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sleft</name>
			<default></default>
			<desc>
				　コピーする矩形の左端位置を ( コピー元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>stop</name>
			<default></default>
			<desc>
				　コピーする矩形の上端位置を ( コピー元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>swidth</name>
			<default></default>
			<desc>
				　コピーする矩形の横幅を ( コピー元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sheight</name>
			<default></default>
			<desc>
				　コピーする矩形の縦幅を ( コピー元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>affine</name>
			<default></default>
			<desc>
				　続く６つの引数 (A 〜 F パラメータ)をどのように扱うかを指定します。<r/>
				　真を指定すると、６つのパラメータはそれぞれ以下のように解釈されます。<r/>
				<tt>A   : 2Dアフィン変換行列の a</tt><r/>
				<tt>B   : 2Dアフィン変換行列の b</tt><r/>
				<tt>C   : 2Dアフィン変換行列の c</tt><r/>
				<tt>D   : 2Dアフィン変換行列の d</tt><r/>
				<tt>E   : 2Dアフィン変換行列の tx</tt><r/>
				<tt>F   : 2Dアフィン変換行列の ty</tt><r/>
				<r/>
				　アフィン変換により、コピー元の画像位置 (x, y) ( ただし、コピー元矩形の左上隅を (0, 0) とする ) は以下の式により、コピー先の画像位置 (x', y')に変換されます。<r/>
				x' =  a*x + c*y + tx<r/>
				y' =  b*x + d*y + ty<r/>
				<r/>
				　偽を指定すると、６つのパラメータはそれぞれ以下のように解釈されます。これらのパラメータは実数での指定も受け付けます。<r/>
				<tt>A   : コピー元矩形の左上隅の点の、コピー先での画像位置における X 座標位置(x0)</tt><r/>
				<tt>B   : コピー元矩形の左上隅の点の、コピー先での画像位置における Y 座標位置(y0)</tt><r/>
				<tt>C   : コピー元矩形の右上隅の点の、コピー先での画像位置における X 座標位置(x1)</tt><r/>
				<tt>D   : コピー元矩形の右上隅の点の、コピー先での画像位置における Y 座標位置(y1)</tt><r/>
				<tt>E   : コピー元矩形の左下隅の点の、コピー先での画像位置における X 座標位置(x2)</tt><r/>
				<tt>F   : コピー元矩形の左下隅の点の、コピー先での画像位置における Y 座標位置(y2)</tt><r/>
				<r/>
				　偽を指定した場合、コピー元の右下隅に対応する、コピー先位置(x3, y3)は自動的に以下の式によって計算されます。<r/>
				x3 = x1 - x0 + x2<r/>
				y3 = y1 - y0 + y2<r/>
			</desc>
		</argitem>
		<argitem>
			<name>A</name>
			<default></default>
			<desc>
				　A パラメータです。affine 引数によって解釈が変わります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>B</name>
			<default></default>
			<desc>
				　B パラメータです。affine 引数によって解釈が変わります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>C</name>
			<default></default>
			<desc>
				　C パラメータです。affine 引数によって解釈が変わります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>D</name>
			<default></default>
			<desc>
				　D パラメータです。affine 引数によって解釈が変わります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>E</name>
			<default></default>
			<desc>
				　E パラメータです。affine 引数によって解釈が変わります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>F</name>
			<default></default>
			<desc>
				　F パラメータです。affine 引数によって解釈が変わります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>type</name>
			<default>stNearest</default>
			<desc>
				　アフィン変換のタイプを指定します。<r/>
				<tt><kw>stNearest</kw>    </tt> : 最近傍点法が用いられます<r/>
				<tt><kw>stFastLinear</kw> </tt> : 低精度の線形補間が用いられます(一部実装)<r/>
				<tt><kw>stLinear</kw>     </tt> : 線形補間が用いられます(未実装)<r/>
				<tt><kw>stCubic</kw>      </tt> : ３次元補間が用いられます(未実装)<r/>
				　stFastLinear や stLinear, stCubic に対しては、stRefNoClip をビット論理和で追加指定
				することができ、この場合は、コピーするビットマップの領域外を参照して色を合成することを
				許可します。これを指定しない場合は、転送元ビットマップの周囲に余裕があったとしても、
				転送元ビットマップの範囲外を参照することはありません(範囲外の色はもっとも近い位置にある
				範囲内のピクセルの色と見なされます)。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>clear</name>
			<default>false</default>
			<desc>
				　転送先レイヤの、アフィン変換された画像の周囲を<ref>Layer.neutralColor</ref> プロパティで示された色・透明度でクリアするかどうかを指定します。真を指定するとクリアされ、この引数を省略するか偽を渡すとクリアされません。<r/>
				　クリアされる領域は <ref>Layer.setClip</ref> メソッドで制限することもできます。<r/>
				　このクリアの機能を使うと、いったん転送先レイヤをクリアしてからアフィン変換で画像を上書き転送する際の、上書きされる領域(クリアされた場所にアフィン変換で上書きされる部分)のクリアの無駄を省くことができます。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　指定されたコピー元レイヤの矩形を、コピー先 ( メソッドを実行するレイヤ ) に
		アフィン変換を行いながらコピーします。<r/>
		　affine 引数によって、変形パラメータとして二次元アフィン変換行列を指定するか、
		あるいは変換後の点を直接指定するかを選ぶことができます。<r/>
		　現バージョンでは stFastLinear の指定で線形補間が効くのは、重ね合わせ先の ( メソッドを実行する ) レイヤの <ref>Layer.face</ref> プロパティが dfAlpha (または dfBoth) または dfAddAlpha の場合です。また、Layer.face プロパティが dfOpaque で、<ref>Layer.holdAlpha</ref> プロパティが偽の時も線形補間が可能です。<r/>
		　重ね合わせ先の ( メソッドを実行する ) レイヤの <ref>Layer.face</ref> プロパティが
		dfAlpha (または dfBoth) または dfAddAlpha の場合は、メイン画像とマスク画像の両方がコピーされます。<r/>
		　重ね合わせ先の ( メソッドを実行する ) レイヤの Layer.face プロパティが
		dfOpaque (または dfMain) の場合は、<ref>Layer.holdAlpha</ref> プロパティが真の時はメイン画像のみがコピーされ、偽の時はメイン画像とマスク画像の両方がコピーされます。<r/>
		<r/>
		　二次元アフィン変換行列による変換は、コピー元矩形の左上を原点 (0, 0) とし、
		以下のように定義されます。<r/>
		<img src="2DAffineMatrix.png"/><r/>
		　二次元アフィン変換を行うことにより、拡大縮小、回転、せん断(傾け)、平行移動、反転、あるいはこれらの組み合わせすべての変形を行うことができます。<r/>
		　二次元アフィン変換を行うメソッドでは、二次元アフィン行列ではなく、変換後の各頂点を直接指定することでも変形を指定できますが、この場合でも二次元アフィン変換で定義できないような変形は行うことはできません。<r/>
		<r/>
		　アフィン変換においては、ピクセルは 1.0 × 1.0 のサイズを持っていると見なされます。つまり、(0, 0) の位置にあるピクセルは (-0.5, -0.5) - (0.5, 0.5) の範囲にあると見なされます。<r/>
	</desc>
</member>

<member>
	<name>affinePile</name>
	<type>method</type>
	<shortdesc>アフィン変換ピクセルアルファブレンド重ね合わせ</shortdesc>
	<arg>
		<argitem>
			<name>src</name>
			<default></default>
			<desc>
				　重ね合わせ元のレイヤオブジェクトを指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sleft</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の左端位置を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>stop</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の上端位置を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>swidth</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の横幅を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sheight</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の縦幅を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>affine</name>
			<default></default>
			<desc>
				　続く６つの引数 (A 〜 F パラメータ)をどのように扱うかを指定します。<r/>
				　真を指定すると、６つのパラメータはそれぞれ以下のように解釈されます。<r/>
				<tt>A   : 2Dアフィン変換行列の a</tt><r/>
				<tt>B   : 2Dアフィン変換行列の b</tt><r/>
				<tt>C   : 2Dアフィン変換行列の c</tt><r/>
				<tt>D   : 2Dアフィン変換行列の d</tt><r/>
				<tt>E   : 2Dアフィン変換行列の tx</tt><r/>
				<tt>F   : 2Dアフィン変換行列の ty</tt><r/>
				<r/>
				　アフィン変換により、重ね合わせ元の画像位置 (x, y) ( ただし、重ね合わせ元矩形の左上隅を (0, 0) とする ) は以下の式により、重ね合わせ先の画像位置 (x', y')に変換されます。<r/>
				x' =  a*x + c*y + tx<r/>
				y' =  b*x + d*y + ty<r/>
				<r/>
				　偽を指定すると、６つのパラメータはそれぞれ以下のように解釈されます。<r/>
				<tt>A   : コピー元矩形の左上隅の点の、コピー先での画像位置における X 座標位置(x0)</tt><r/>
				<tt>B   : コピー元矩形の左上隅の点の、コピー先での画像位置における Y 座標位置(y0)</tt><r/>
				<tt>C   : コピー元矩形の右上隅の点の、コピー先での画像位置における X 座標位置(x1)</tt><r/>
				<tt>D   : コピー元矩形の右上隅の点の、コピー先での画像位置における Y 座標位置(y1)</tt><r/>
				<tt>E   : コピー元矩形の左下隅の点の、コピー先での画像位置における X 座標位置(x2)</tt><r/>
				<tt>F   : コピー元矩形の左下隅の点の、コピー先での画像位置における Y 座標位置(y2)</tt><r/>
				<r/>
				　偽を指定した場合、重ね合わせ元の右下隅に対応する、重ね合わせ先位置(x3, y3)は自動的に以下の式によって計算されます。<r/>
				x3 = x1 - x0 + x2<r/>
				y3 = y1 - y0 + y2<r/>
			</desc>
		</argitem>
		<argitem>
			<name>A</name>
			<default></default>
			<desc>
				　A パラメータです。affine 引数によって解釈が変わります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>B</name>
			<default></default>
			<desc>
				　B パラメータです。affine 引数によって解釈が変わります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>C</name>
			<default></default>
			<desc>
				　C パラメータです。affine 引数によって解釈が変わります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>D</name>
			<default></default>
			<desc>
				　D パラメータです。affine 引数によって解釈が変わります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>E</name>
			<default></default>
			<desc>
				　E パラメータです。affine 引数によって解釈が変わります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>F</name>
			<default></default>
			<desc>
				　F パラメータです。affine 引数によって解釈が変わります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>opa</name>
			<default>255</default>
			<desc>
				　重ね合わせの不透明度 ( 0 〜 255 ) を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>type</name>
			<default>stNearest</default>
			<desc>
				　アフィン変換のタイプを指定します。<r/>
				<tt><kw>stNearest</kw>    </tt> : 最近傍点法が用いられます<r/>
				<tt><kw>stFastLinear</kw> </tt> : 低精度の線形補間が用いられます(未実装)<r/>
				<tt><kw>stLinear</kw>     </tt> : 線形補間が用いられます(未実装)<r/>
				<tt><kw>stCubic</kw>      </tt> : ３次元補間が用いられます(未実装)<r/>
				　stFastLinear や stLinear, stCubic に対しては、stRefNoClip をビット論理和で追加指定
				することができ、この場合は、コピーするビットマップの領域外を参照して色を合成することを
				許可します。これを指定しない場合は、転送元ビットマップの周囲に余裕があったとしても、
				転送元ビットマップの範囲外を参照することはありません(範囲外の色はもっとも近い位置にある
				範囲内のピクセルの色と見なされます)。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　指定された重ね合わせ元レイヤの矩形を、重ね合わせ先 ( メソッドを実行するレイヤ ) に
		アフィン変換を行いながら重ね合わせます。<r/>
		　アフィン変換については <ref>Layer.affineCopy</ref> も参照してください。<r/>
		　ピクセルごとの不透明度 ( ピクセルアルファ ) を用いた重ね合わせを行うことができます。<r/>
		　現バージョンでは mode には stNearest のみ指定できます。<r/>
		　重ね合わされる画像は、重ね合わせ先の ( メソッドを実行する ) レイ
		ヤの <ref>Layer.face</ref> プロパティの値によって変わります。<r/>
		<tt><kw>dfAlpha</kw> (または<kw>dfBoth</kw>)    </tt> : 重ね合わせ先の不透明度を考慮した重ね合わせが行われます<r/>
		<tt><kw>dfOpaque</kw> (または<kw>dfMain</kw>)   </tt> : 重ね合わせ先の不透明度を無視した重ね合わせが行われます(重ね合わせ先は全面完全不透明として扱われます)<r/>
		<tt><kw>それ以外</kw>  </tt>                 : できません ( 例外が発生します )<r/>
		<r/>
		　このメソッドは旧式になりました。代わりに <ref>Layer.operateAffine</ref> を使用してください。演算のモードに omAlpha か omAddAlpha を指定すると同じ効果になります(omAlphaを指定するのかomAddAlphaを指定するのかはsrcのアルファタイプによって異なります。omAutoを指定すればsrcのレイヤタイプに従って自動的に決定されます)。<r/>
	</desc>
</member>

<member>
	<name>affineBlend</name>
	<type>method</type>
	<shortdesc>アフィン変換重ね合わせ</shortdesc>
	<arg>
		<argitem>
			<name>src</name>
			<default></default>
			<desc>
				　重ね合わせ元のレイヤオブジェクトを指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sleft</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の左端位置を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>stop</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の上端位置を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>swidth</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の横幅を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sheight</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の縦幅を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>affine</name>
			<default></default>
			<desc>
				　続く６つの引数 (A 〜 F パラメータ)をどのように扱うかを指定します。<r/>
				　真を指定すると、６つのパラメータはそれぞれ以下のように解釈されます。<r/>
				<tt>A   : 2Dアフィン変換行列の a</tt><r/>
				<tt>B   : 2Dアフィン変換行列の b</tt><r/>
				<tt>C   : 2Dアフィン変換行列の c</tt><r/>
				<tt>D   : 2Dアフィン変換行列の d</tt><r/>
				<tt>E   : 2Dアフィン変換行列の tx</tt><r/>
				<tt>F   : 2Dアフィン変換行列の ty</tt><r/>
				<r/>
				　アフィン変換により、重ね合わせ元の画像位置 (x, y) ( ただし、重ね合わせ元矩形の左上隅を (0, 0) とする ) は以下の式により、重ね合わせ先の画像位置 (x', y')に変換されます。<r/>
				x' =  a*x + c*y + tx<r/>
				y' =  b*x + d*y + ty<r/>
				<r/>
				　偽を指定すると、６つのパラメータはそれぞれ以下のように解釈されます。<r/>
				<tt>A   : コピー元矩形の左上隅の点の、コピー先での画像位置における X 座標位置(x0)</tt><r/>
				<tt>B   : コピー元矩形の左上隅の点の、コピー先での画像位置における Y 座標位置(y0)</tt><r/>
				<tt>C   : コピー元矩形の右上隅の点の、コピー先での画像位置における X 座標位置(x1)</tt><r/>
				<tt>D   : コピー元矩形の右上隅の点の、コピー先での画像位置における Y 座標位置(y1)</tt><r/>
				<tt>E   : コピー元矩形の左下隅の点の、コピー先での画像位置における X 座標位置(x2)</tt><r/>
				<tt>F   : コピー元矩形の左下隅の点の、コピー先での画像位置における Y 座標位置(y2)</tt><r/>
				<r/>
				　偽を指定した場合、重ね合わせ元の右下隅に対応する、重ね合わせ先位置(x3, y3)は自動的に以下の式によって計算されます。<r/>
				x3 = x1 - x0 + x2<r/>
				y3 = y1 - y0 + y2<r/>
			</desc>
		</argitem>
		<argitem>
			<name>A</name>
			<default></default>
			<desc>
				　A パラメータです。affine 引数によって解釈が変わります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>B</name>
			<default></default>
			<desc>
				　B パラメータです。affine 引数によって解釈が変わります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>C</name>
			<default></default>
			<desc>
				　C パラメータです。affine 引数によって解釈が変わります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>D</name>
			<default></default>
			<desc>
				　D パラメータです。affine 引数によって解釈が変わります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>E</name>
			<default></default>
			<desc>
				　E パラメータです。affine 引数によって解釈が変わります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>F</name>
			<default></default>
			<desc>
				　F パラメータです。affine 引数によって解釈が変わります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>opa</name>
			<default>255</default>
			<desc>
				　重ね合わせの不透明度 ( 0 〜 255 ) を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>type</name>
			<default>stNearest</default>
			<desc>
				　アフィン変換のタイプを指定します。<r/>
				<tt><kw>stNearest</kw>    </tt> : 最近傍点法が用いられます<r/>
				<tt><kw>stFastLinear</kw> </tt> : 低精度の線形補間が用いられます(一部実装)<r/>
				<tt><kw>stLinear</kw>     </tt> : 線形補間が用いられます(未実装)<r/>
				<tt><kw>stCubic</kw>      </tt> : ３次元補間が用いられます(未実装)<r/>
				　速度は stNearest > stFastLinear > stLinear > stCubic の順に高速ですが、画質は速度が
				速ければ速いモードほど低画質になります。<r/>
				　stFastLinear や stLinear, stCubic に対しては、stRefNoClip をビット論理和で追加指定
				することができ、この場合は、コピーするビットマップの領域外を参照して色を合成することを
				許可します。これを指定しない場合は、転送元ビットマップの周囲に余裕があったとしても、
				転送元ビットマップの範囲外を参照することはありません(範囲外の色はもっとも近い位置にある
				範囲内のピクセルの色と見なされます)。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　指定された重ね合わせ元レイヤの矩形を、重ね合わせ先 ( メソッドを実行するレイヤ ) に
		アフィン変換を行いながら重ね合わせます。<r/>
		　アフィン変換については <ref>Layer.affineCopy</ref> も参照してください。<r/>
		　重ね合わせ元のレイヤの Layer.face プロパティは無視されますが、<ref>Layer.affinePile</ref> と異な
		り、重ね合わせ元のレイヤの不透明度は無視されます ( 常に完全に不透明であると見なされます )。<r/>
		　重ね合わされる画像は、重ね合わせ先の ( メソッドを実行する ) レイ
		ヤの <ref>Layer.face</ref> プロパティの値によって変わります。<r/>
		<tt><kw>dfAlpha</kw> (または<kw>dfBoth</kw>)    </tt> : 重ね合わせ先の不透明度を考慮した重ね合わせが行われます<r/>
		<tt><kw>dfOpaque</kw> (または<kw>dfMain</kw>)   </tt> : 重ね合わせ先の不透明度を無視した重ね合わせが行われます(重ね合わせ先は全面完全不透明として扱われます)。この場合は、<ref>Layer.holdAlpha</ref>プロパティが偽のとき、type 引数に stFastLinear を指定することにより、線形補間が可能です。<r/>
		<tt><kw>それ以外</kw>  </tt>                 : できません ( 例外が発生します )<r/>
		<r/>
		　このメソッドは旧式になりました。代わりに <ref>Layer.operateAffine</ref> を使用してください。演算のモードに omOpaque を指定すると同じ効果になります。<r/>
	</desc>
</member>


<member>
	<name>operateAffine</name>
	<type>method</type>
	<shortdesc>アフィン変換演算合成</shortdesc>
	<arg>
		<argitem>
			<name>src</name>
			<default></default>
			<desc>
				　重ね合わせ元のレイヤオブジェクトを指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sleft</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の左端位置を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>stop</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の上端位置を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>swidth</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の横幅を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>sheight</name>
			<default></default>
			<desc>
				　重ね合わせる矩形の縦幅を ( 重ね合わせ元レイヤの画像位置における ) ピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>affine</name>
			<default></default>
			<desc>
				　続く６つの引数 (A 〜 F パラメータ)をどのように扱うかを指定します。<r/>
				　真を指定すると、６つのパラメータはそれぞれ以下のように解釈されます。<r/>
				<tt>A   : 2Dアフィン変換行列の a</tt><r/>
				<tt>B   : 2Dアフィン変換行列の b</tt><r/>
				<tt>C   : 2Dアフィン変換行列の c</tt><r/>
				<tt>D   : 2Dアフィン変換行列の d</tt><r/>
				<tt>E   : 2Dアフィン変換行列の tx</tt><r/>
				<tt>F   : 2Dアフィン変換行列の ty</tt><r/>
				<r/>
				　アフィン変換により、重ね合わせ元の画像位置 (x, y) ( ただし、重ね合わせ元矩形の左上隅を (0, 0) とする ) は以下の式により、重ね合わせ先の画像位置 (x', y')に変換されます。<r/>
				x' =  a*x + c*y + tx<r/>
				y' =  b*x + d*y + ty<r/>
				<r/>
				　偽を指定すると、６つのパラメータはそれぞれ以下のように解釈されます。<r/>
				<tt>A   : コピー元矩形の左上隅の点の、コピー先での画像位置における X 座標位置(x0)</tt><r/>
				<tt>B   : コピー元矩形の左上隅の点の、コピー先での画像位置における Y 座標位置(y0)</tt><r/>
				<tt>C   : コピー元矩形の右上隅の点の、コピー先での画像位置における X 座標位置(x1)</tt><r/>
				<tt>D   : コピー元矩形の右上隅の点の、コピー先での画像位置における Y 座標位置(y1)</tt><r/>
				<tt>E   : コピー元矩形の左下隅の点の、コピー先での画像位置における X 座標位置(x2)</tt><r/>
				<tt>F   : コピー元矩形の左下隅の点の、コピー先での画像位置における Y 座標位置(y2)</tt><r/>
				<r/>
				　偽を指定した場合、重ね合わせ元の右下隅に対応する、重ね合わせ先位置(x3, y3)は自動的に以下の式によって計算されます。<r/>
				x3 = x1 - x0 + x2<r/>
				y3 = y1 - y0 + y2<r/>
			</desc>
		</argitem>
		<argitem>
			<name>A</name>
			<default></default>
			<desc>
				　A パラメータです。affine 引数によって解釈が変わります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>B</name>
			<default></default>
			<desc>
				　B パラメータです。affine 引数によって解釈が変わります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>C</name>
			<default></default>
			<desc>
				　C パラメータです。affine 引数によって解釈が変わります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>D</name>
			<default></default>
			<desc>
				　D パラメータです。affine 引数によって解釈が変わります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>E</name>
			<default></default>
			<desc>
				　E パラメータです。affine 引数によって解釈が変わります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>F</name>
			<default></default>
			<desc>
				　F パラメータです。affine 引数によって解釈が変わります。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>mode</name>
			<default>omAuto</default>
			<desc>
				　演算のモードを指定します。<r/>
				<tt><kw>omAuto</kw></tt> が指定された場合は演算元レイヤの<ref>Layer.type</ref>プロパティに従って演算の種類が自動的に決定されます。<r/>
				<tt><kw>omPsNormal</kw></tt> が指定された場合はPhotoshop互換のアルファ合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsAdditive</kw></tt> が指定された場合はPhotoshop互換の覆い焼き(リニア)合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsSubtractive</kw></tt> が指定された場合はPhotoshop互換の焼き込み(リニア)合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsMultiplicative</kw></tt> が指定された場合はPhotoshop互換の乗算合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsScreen</kw></tt> が指定された場合はPhotoshop互換のスクリーン合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsOverlay</kw></tt> が指定された場合はPhotoshop互換のオーバーレイ合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsHardLight</kw></tt> が指定された場合はPhotoshop互換のハードライト合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsSoftLight</kw></tt> が指定された場合はPhotoshop互換のソフトライト合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsColorDodge</kw></tt> が指定された場合はPhotoshop互換の覆い焼きカラー合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsColorDodge5</kw></tt> が指定された場合はPhotoshopのバージョン5.x 以下と互換の覆い焼きカラー合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsColorBurn</kw></tt> が指定された場合はPhotoshop互換の焼き込みカラー合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsLighten</kw></tt> が指定された場合はPhotoshop互換の比較(明)合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsDarken</kw></tt> が指定された場合はPhotoshop互換の比較(暗)合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsDifference</kw></tt> が指定された場合はPhotoshop互換の差の絶対値合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsDifference5</kw></tt> が指定された場合はPhotoshopのバージョン 5.x 以下と互換の差の絶対値合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omPsExclusion</kw></tt> が指定された場合はPhotoshop互換の除外合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omAdditive</kw></tt> が指定された場合は加算合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omSubtractive</kw></tt> が指定された場合は減算合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omMultiplicative</kw></tt> が指定された場合は乗算合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omDodge</kw></tt> が指定された場合は覆い焼き合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omDarken</kw></tt> が指定された場合は比較(暗)合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omLighten</kw></tt> が指定された場合は比較(明)合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omScreen</kw></tt> が指定された場合はスクリーン乗算合成が行われます(現バージョンでは未実装です)。<r/>
				<tt><kw>omAlpha</kw></tt> が指定された場合はアルファ合成が行われます。<r/>
				<tt><kw>omAddAlpha</kw></tt> が指定された場合は加算アルファ合成が行われます。この場合は、転送先の <ref>Layer.face</ref> プロパティが dfOpaque かつ <ref>Layer.holdAlpha</ref> プロパティが偽のとき、type 引数に stFastLinear を指定することにより線形補間が可能です。<r/>
				<tt><kw>omOpaque</kw></tt> が指定された場合は src のアルファ情報は無視され、src は常に完全不透明であると見なされます。この場合は、転送先の <ref>Layer.face</ref> プロパティが dfOpaque かつ <ref>Layer.holdAlpha</ref> プロパティが偽のとき、type 引数に stFastLinear を指定することにより線形補間が可能です。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>opa</name>
			<default>255</default>
			<desc>
				　重ね合わせの不透明度 ( 0 〜 255 ) を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>type</name>
			<default>stNearest</default>
			<desc>
				　アフィン変換のタイプを指定します。<r/>
				<tt><kw>stNearest</kw>    </tt> : 最近傍点法が用いられます<r/>
				<tt><kw>stFastLinear</kw> </tt> : 低精度の線形補間が用いられます(一部実装)<r/>
				<tt><kw>stLinear</kw>     </tt> : 線形補間が用いられます(未実装)<r/>
				<tt><kw>stCubic</kw>      </tt> : ３次元補間が用いられます(未実装)<r/>
				　速度は stNearest > stFastLinear > stLinear > stCubic の順に高速ですが、画質は速度が
				速ければ速いモードほど低画質になります。<r/>
				　stFastLinear や stLinear, stCubic に対しては、stRefNoClip をビット論理和で追加指定
				することができ、この場合は、コピーするビットマップの領域外を参照して色を合成することを
				許可します。これを指定しない場合は、転送元ビットマップの周囲に余裕があったとしても、
				転送元ビットマップの範囲外を参照することはありません(範囲外の色はもっとも近い位置にある
				範囲内のピクセルの色と見なされます)。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　指定された重ね合わせ元レイヤの矩形を、重ね合わせ先 ( メソッドを実行するレイヤ ) に
		アフィン変換を行いながら演算合成します。<r/>
		　アフィン変換については <ref>Layer.affineCopy</ref> も参照してください。<r/>
		　mode に omAuto を指定した場合は、演算元レイヤの<ref>Layer.type</ref>プロパティに従って演算の種類が自動的に決定されます。<r/>
	</desc>
</member>


<member>
	<name>doBoxBlur</name>
	<type>method</type>
	<shortdesc>矩形ブラーをかける</shortdesc>
	<arg>
		<argitem>
			<name>xblur</name>
			<default>1</default>
			<desc>
				横方向のブラーの範囲を指定します。
			</desc>
		</argitem>
		<argitem>
			<name>yblur</name>
			<default>1</default>
			<desc>
				縦方向のブラーの範囲を指定します。
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　ブラー(ぼかし)をかけます。アルゴリズムは「矩形ブラー」(box blur)です。<r/>
		　矩形ブラーは、xblurとyblurの２つのパラメータによって表現される「範囲」中のピクセルの輝度の平均値をとる物です。たとえば xblur=10 yblur=2 の場合は、対象のピクセルを中心に、横方向は -10〜10、縦方向は -2〜2 の矩形範囲のピクセルの輝度の平均をとり、それが最終的なそのピクセルの輝度となります。<r/>
		　範囲の面積は (xblur×2+1) × (yblur×2+1) で計算することができます。現バージョンではこの面積が 256 未満 の場合は、面積が256以上の場合よりも高速なアルゴリズムが採用されます。<r/>
		　<ref>Layer.face</ref> プロパティが dfAlpha の場合は、アルファ合成用の特別なアルゴリズムを使用しますので、少々遅くなります。dfAddAlpha や他の描画方式の場合は、より高速なアルゴリズムとなります。<r/>
	</desc>
</member>



<member>
	<name>adjustGamma</name>
	<type>method</type>
	<shortdesc>ガンマ補正</shortdesc>
	<arg>
		<argitem>
			<name>rgamma</name>
			<default>1.0</default>
			<desc>
				　赤成分のガンマ値 ( 0.0 〜 1.0 〜 9.0 ) を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>rfloor</name>
			<default>0</default>
			<desc>
				　赤成分の出力最低値 ( 0 〜 255 ) を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>rceil</name>
			<default>255</default>
			<desc>
				　赤成分の出力最大値 ( 0 〜 255 ) を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>ggamma</name>
			<default>1.0</default>
			<desc>
				　緑成分のガンマ値 ( 0.0 〜 1.0 〜 9.0 ) を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>gfloor</name>
			<default>0</default>
			<desc>
				　緑成分の出力最低値 ( 0 〜 255 ) を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>gceil</name>
			<default>255</default>
			<desc>
				　緑成分の出力最大値 ( 0 〜 255 ) を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>bgamma</name>
			<default>1.0</default>
			<desc>
				　青成分のガンマ値 ( 0.0 〜 1.0 〜 9.0 ) を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>bfloor</name>
			<default>0</default>
			<desc>
				　青成分の出力最低値 ( 0 〜 255 ) を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>bceil</name>
			<default>255</default>
			<desc>
				　青成分の出力最大値 ( 0 〜 255 ) を指定します。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　画像に対してガンマ補正を実行します。<r/>
		　ガンマ値には 1.0 を指定するとガンマ曲線が直線になります。<r/>
		　出力最低値と出力最高値は各成分の輝度の最低値と最高値を指定するものです。<r/>
		　最高値に最低値よりも低い値を設定すると画像を反転させることができます。<r/>
		　このメソッドは<ref>Layer.face</ref>プロパティを参照します。これが dfAddAlpha の場合、このメソッドは
		加算アルファ合成用の特別なガンマ補正ルーチンを用います。このルーチンは加算アルファ合成のうち、アルファ合成に相当する成分に対してはガンマ補正を行いますが、加算合成に相当する成分に対してはガンマ補正を行いません。<r/>
	</desc>
</member>

<member>
	<name>doGrayScale</name>
	<type>method</type>
	<shortdesc>グレースケール変換</shortdesc>
	<arg>
	</arg>
	<result></result>
	<desc>
		　画像をグレースケールに変換します。<r/>
	</desc>
</member>

<member>
	<name>flipLR</name>
	<type>method</type>
	<shortdesc>左右反転</shortdesc>
	<arg>
	</arg>
	<result></result>
	<desc>
		　画像の左右反転を行います。<r/>
		　このメソッドは、<ref>Layer.setClip</ref> メソッドなどによる描画クリップ矩形の影響を受けません ( 常にレイヤ画像全体が反転します )。<r/>
		　また、<ref>Layer.face</ref> プロパティや<ref>Layer.holdAlpha</ref> プロパティの影響も受けません。<r/>
	</desc>
</member>

<member>
	<name>flipUD</name>
	<type>method</type>
	<shortdesc>上下反転</shortdesc>
	<arg>
	</arg>
	<result></result>
	<desc>
		　画像の上下反転を行います。<r/>
		　このメソッドは、<ref>Layer.setClip</ref> メソッドなどによる描画クリップ矩形の影響を受けません ( 常にレイヤ画像全体が反転します )。<r/>
		　また、<ref>Layer.face</ref> プロパティや<ref>Layer.holdAlpha</ref> プロパティの影響も受けません。<r/>
	</desc>
</member>

<member>
	<name>convertType</name>
	<type>method</type>
	<shortdesc>レイヤ画像表現形式の変換</shortdesc>
	<arg>
		<argitem>
			<name>from</name>
			<default></default>
			<desc>
				変換元となる描画方式タイプを指定します。
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　レイヤ画像の形式を変換します。<r/>
		　このメソッドは、ltAlpha (dfAlpha) と ltAddAlpha (dfAddAlpha) のように、「レイヤの画像表現形式が異なるが同様の表現が可能なタイプ」間での画像表現形式の変換を行います。<r/>
		　たとえば、ltAlpha で表示しているレイヤのタイプをそのまま ltAddAlpha に変更しただけでは、アルファチャンネルと色情報の扱いが異なるので正常に表示されません。そのため、このメソッドを用い、dfAlpha から dfAddAlpha に変換を行う必要があります。<r/>
		　このメソッドでは、変換先の画像表現形式は <ref>Layer.face</ref> プロパティで指定した描画方式に対応した形式になります (<ref>Layer.type</ref>で指定するレイヤタイプではなくて、描画方式であることに注意してください )。<r/>
		　from 引数には、変換元の画像表現形式に対応する描画方式(dfで始まる定数; <ref>Layer.face</ref>参照)を指定します。from 引数には <tt>dfAuto</tt> は指定できません。<r/>
		　現在サポートされている変換は、dfAlpha→dfAddAlpha と dfAddAlpha→dfAlpha の変換です。dfAddAlpha→dfAlphaでは、変換により色情報が失われる場合があります。<r/>
		　このメソッドは、描画クリップ矩形の影響を受けません ( 常にレイヤ画像全体が影響を受けます )。<r/>
	</desc>
</member>

<member>
	<name>update</name>
	<type>method</type>
	<shortdesc>画像の更新</shortdesc>
	<arg>
		<argitem>
			<name>left</name>
			<default></default>
			<desc>
				　更新する矩形の左端位置を表示座標におけるピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>top</name>
			<default></default>
			<desc>
				　更新する矩形の上端位置を表示座標におけるピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>width</name>
			<default></default>
			<desc>
				　更新する矩形の横幅を表示座標におけるピクセル単位で指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>height</name>
			<default></default>
			<desc>
				　更新する矩形の縦幅を表示座標におけるピクセル単位で指定します。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　このメソッドはレイヤを強制的に画面に描画させます。<r/>
		　描画系のメソッドなどを実行すると自動的に画面更新が発生しますが、
		このメソッドで画面への描画を強制的に起こさせることができます。<r/>
		　引数をすべて省略するとレイヤ全体が再描画されます。<r/>
		　このメソッドは、<ref>Layer.callOnPaint</ref> プロパティを真に設定します。<r/>
		　実際に画面に描画されるまでは、何度このメソッドを実行しても画面描画が
		発生するのは１回のみです ( キャッシュされます )。<r/>
	</desc>
</member>

<member>
	<name>setCursorPos</name>
	<type>method</type>
	<shortdesc>マウスカーソル位置の指定</shortdesc>
	<arg>
		<argitem>
			<name>x</name>
			<default></default>
			<desc>
				　マウスカーソルの ( このレイヤの表示座標における ) x 座標値をピクセル単位で指定します。<r/>
				　この値は <ref>Layer.cursorX</ref> プロパティでも設定／取得する事ができます。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>y</name>
			<default></default>
			<desc>
				　マウスカーソルの ( このレイヤの表示座標における ) y 座標値をピクセル単位で指定します。<r/>
				　この値は <ref>Layer.cursorX</ref> プロパティでも設定／取得する事ができます。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　マウスカーソルの位置を指定します。<r/>
	</desc>
</member>

<member>
	<name>focus</name>
	<type>method</type>
	<shortdesc>フォーカスの設定</shortdesc>
	<arg>
		<argitem>
			<name>direction</name>
			<default>true</default>
			<desc>
				　<ref>Layer.onBeforeFocus</ref> や <ref>Layer.onFocus</ref> イベントの
				direction 引数に渡される値です。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　レイヤに<kw>フォーカス</kw>を指定します。レイヤがフォーカスを受け取ると
		キーボード入力が可能になります。<r/>
	</desc>
</member>

<member>
	<name>focusPrev</name>
	<type>method</type>
	<shortdesc>前方のレイヤにフォーカスを設定</shortdesc>
	<arg>
	</arg>
	<result>新たにフォーカスを得たレイヤオブジェクト</result>
	<desc>
		　フォーカス可能なレイヤを前方検索し、レイヤが見つかればそのレイヤにフォーカスを設定します。<r/>
	</desc>
</member>

<member>
	<name>focusNext</name>
	<type>method</type>
	<shortdesc>後方のレイヤにフォーカスを設定</shortdesc>
	<arg>
	</arg>
	<result>新たにフォーカスを得たレイヤオブジェクト</result>
	<desc>
		　フォーカス可能なレイヤを後方検索し、レイヤが見つかればそのレイヤにフォーカスを設定します。<r/>
	</desc>
</member>

<member>
	<name>setMode</name>
	<type>method</type>
	<shortdesc>モーダル状態にする</shortdesc>
	<arg>
	</arg>
	<result></result>
	<desc>
		　レイヤに<kw>モード</kw>を設定します。モードを設定すると ( <kw>モーダル</kw>になると )、そのレイヤの子レイヤ
		のみがフォーカスやマウスメッセージを受け取ることができるようになります。
	</desc>
</member>

<member>
	<name>removeMode</name>
	<type>method</type>
	<shortdesc>モーダル状態を解除する</shortdesc>
	<arg>
	</arg>
	<result></result>
	<desc>
		<ref>Layer.setMode</ref> で設定したモーダル状態を解除します。<r/>
	</desc>
</member>

<member>
	<name>setAttentionPos</name>
	<type>method</type>
	<shortdesc>注視位置の指定</shortdesc>
	<arg>
		<argitem>
			<name>left</name>
			<default></default>
			<desc>
				　注視する ( このレイヤの表示座標における ) x 座標値をピクセル単位で指定します。<r/>
				　この値は <ref>Layer.attentionLeft</ref> プロパティでも設定／取得する事ができます。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>top</name>
			<default></default>
			<desc>
				　注視する ( このレイヤの表示座標における ) x 座標値をピクセル単位で指定します。<r/>
				　この値は <ref>Layer.attentionTop</ref> プロパティでも設定／取得する事ができます。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　<kw>注視位置</kw>を指定します。注視位置とは通常カレット ( キーボードからの文字入力位置を
		示すためにテキストエディタなどで点滅する棒 ) の位置に設定します。IME の未確定文字はこの注視位置に
		表示されます。<r/>
	</desc>
	<ref>Layer.useAttention</ref>
</member>


<member>
	<name>beginTransition</name>
	<type>method</type>
	<shortdesc>トランジションの開始</shortdesc>
	<arg>
		<argitem>
			<name>name</name>
			<default></default>
			<desc>
				　トランジション名を指定します。<r/>
				　デフォルトでは 'crossfade' ( クロスフェード )、'universal' ( ユニバーサルトラン
				ジション )、'scroll' ( スクロールトランジション ) が定義されています。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>withchildren</name>
			<default>true</default>
			<desc>
				　子レイヤも一緒にトランジションを行うかどうかです。真を指定すると
				子レイヤごとトランジションします。偽を指定するとメソッドを実行するレイヤのみ
				がトランジションします。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>transsrc</name>
			<default>null</default>
			<desc>
				　切り替わり先となるレイヤを指定します。トランジションによっては指定が必要ない
				もの ( 単独でトランジションするものなど ) もあるかもしれません。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>options</name>
			<default>%[ ]</default>
			<desc>
				　トランジションのオプションを辞書配列で指定します。<r/>
				　必要なオプションはトランジションの種類によって異なります。<r/>
				　トランジションの種類に関係なく、共通して指定できるオプションとして 'selfupdate' メンバと 'callback' メンバがあります。<r/>
				<r/>
				　'selfupdate' メンバが 真 の場合は、吉里吉里は自動での画面更新を行わなくなります。
				この場合は、適宜プログラム側で <ref>Layer.update</ref> メソッドなどで画面を更新しなければなりません。この機能は、トランジションによる描画とプログラムによる描画を完全に同期させたい場合に便利です。<r/>
				<r/>
				　'callback' メンバにTJS2のメソッドを指定すると、
				描画が実際に行われる度にそのメソッドが呼ばれます。
				このメソッド(コールバックされるメソッド)では 'tick' 値を0以上の値で返してください。
				多くのトランジションは、ミリ秒単位での実際の時間である'tick'
				値を元にトランジションを行っていますが、
				このコールバックされるメソッドで任意のtickを返すように実装することにより、
				トランジションの効果を任意の時点で巻き戻したり、途中で早送りをしたりが可能になり、
				実際の時間に関係なくトランジションを制御できるようになります。
				多くのトランジションは、オプションの'time'
				メンバで指定した値がトランジションの終端であると見なしています。
				そのため、たとえばオプションの 'time' には 1000 等の適当な値を指定しておき、
				このコールバックされるメソッドで 1000 未満の値を返すことにより、
				任意の段階でのトランジションの表示などを行わせることができるようになります。
				また、多くのトランジションの場合、オプションの 'time' で指定された値に 'tick'
				値が達すると、トランジションが停止しますので、
				トランジションを停止させたくない場合は、 'time' で指定した値未満の値を常に
				指定するようにしてください。
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　トランジションを開始します。<r/>
		　children=真 の場合のトランジションは、終了するときに、transsrc で指定した
		トランジション元とそっくり親子関係のツリー構造が入れ替わります。<r/>
		　children=偽 の場合は、トランジション元のレイヤとメソッドを実行したレイヤ ( 
		トランジション先のレイヤ ) のみが入れ替わります。<r/>
		　どちらの場合も、ツリー構造上での入れ替えが行われるため注意してください。<r/>
		　このメソッドはトランジションを開始させるだけですぐに戻ります。<r/>
	</desc>
</member>

<member>
	<name>stopTransition</name>
	<type>method</type>
	<shortdesc>トランジションを停止する</shortdesc>
	<arg>
	</arg>
	<result></result>
	<desc>
		進行中のトランジションを停止します。<r/>
	</desc>
</member>

<member>
	<name>assignImages</name>
	<type>method</type>
	<shortdesc>画像のコピー</shortdesc>
	<arg>
		<argitem>
			<name>src</name>
			<default></default>
			<desc>
				　コピー元のレイヤを指定します。<r/>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　src で指定したレイヤの、メイン画像、マスク画像、領域画像をすべてコピーします。<r/>
		　画像サイズはコピー元のレイヤの画像サイズと同一になります。それ以外の情報はコピーしません。<r/>
		　コピーといっても、実際は「同じ画像を二つ以上のレイヤで共有している」という状態になるだけなので
		このメソッドはほとんど実行時間がかかりません。<r/>
	</desc>
</member>


<member>
	<name>saveLayerImage</name>
	<type>method</type>
	<shortdesc>画像の保存</shortdesc>
	<arg>
		<argitem>
			<name>name</name>
			<default></default>
			<desc>
				　保存するストレージ名を指定します。<r/>
			</desc>
		</argitem>
		<argitem>
			<name>type</name>
			<default>"bmp"</default>
			<desc>
				　保存する画像形式を文字列で指定します。現バージョンでは以下の形式を指定可能です。<r/>
				<r/>
				<dl>
				<dt>"<kw>bmp</kw>" または "<kw>bmp32</kw>"</dt>
				<dd>
					　32bpp の BMP です。アルファチャンネル(マスク)も保存します。<r/>
				</dd>
				<r/>
				<dt>"<kw>bmp24</kw>"</dt>
				<dd>
					　24bpp の BMP です。アルファチャンネル(マスク)は保存されません。<r/>
				</dd>
				<r/>
				<dt>"<kw>bmp8</kw>"</dt>
				<dd>
					　8bpp の BMP です。アルファチャンネル(マスク)は保存されません。画像は
					252色の固定パレットによる4×4組織化ディザリングを用いて減色されます。<r/>
				</dd>
				</dl>
			</desc>
		</argitem>
	</arg>
	<result></result>
	<desc>
		　name で指定したストレージ (ファイル) に、type で指定した画像形式でファイルを保存します。<r/>
		　保存されるのはレイヤの画像で、領域画像は保存することはできません。<r/>
	</desc>
</member>


<member>
	<name>parent</name>
	<type>property</type>
	<shortdesc>親レイヤ</shortdesc>
	<access>r/w</access>
	<desc>
		　親レイヤオブジェクトを表します。<r/>
		　値を設定することもできます。値を設定するとそのレイヤの子になります。<r/>
		　異なるウィンドウや異なるプライマリレイヤに所属するレイヤの子になったり、自分自身や自分の子孫の
		子になることはできません。<r/>
	</desc>
</member>

<member>
	<name>children</name>
	<type>property</type>
	<shortdesc>子レイヤ配列</shortdesc>
	<access>r</access>
	<desc>
		　子レイヤの格納された配列オブジェクトを表します。<r/>
		　ここで得られた配列に値を書き込んだり、項目の削除や追加などをしても実際のレイヤの状態には反映されません。読み取りのみが行えると考えてください。<r/>
	</desc>
</member>

<member>
	<name>order</name>
	<type>property</type>
	<shortdesc>相対位置</shortdesc>
	<access>r/w</access>
	<desc>
		　同じ親を持つ兄弟レイヤ間での順位を表します。値が小さいほど奥に表示されます。<r/>
		　値を設定すると兄弟レイヤ間での順位を変えることができます。値を設定すると
		親レイヤの <ref>Layer.absoluteOrderMode</ref> プロパティが偽に設定されます。<r/>
	</desc>
	<ref>Layer.absolute</ref>
	<ref>Layer.absoluteOrderMode</ref>
	<ref>Layer.bringToBack</ref>
	<ref>Layer.bringToFront</ref>
</member>

<member>
	<name>absolute</name>
	<type>property</type>
	<shortdesc>絶対位置</shortdesc>
	<access>r/w</access>
	<desc>
		　同じ親を持つ兄弟レイヤ間での重ね合わせ順序を表します。値が小さいほど奥に表示されます。<r/>
		<ref>Layer.order</ref> プロパティと違い、同じ兄弟間で値は連続している必要はありません。<r/>
		　値を設定すると兄弟レイヤ間での順位を変えることができます。値を設定すると
		親レイヤの <ref>Layer.absoluteOrderMode</ref> プロパティが真に設定されます。<r/>
	</desc>
	<ref>Layer.order</ref>
	<ref>Layer.absoluteOrderMode</ref>
	<ref>Layer.bringToBack</ref>
	<ref>Layer.bringToFront</ref>
</member>

<member>
	<name>absoluteOrderMode</name>
	<type>property</type>
	<shortdesc>絶対位置モードかどうか</shortdesc>
	<access>r/w</access>
	<desc>
		　直属の子レイヤの重ね合わせ順モードを表します。値を設定することもできます。<r/>
		　偽を指定すると相対位置指定となり、<ref>Layer.order</ref> プロパティが
		その順位を表すようになります。<r/>
		　真を指定すると絶対位置指定となり、<ref>Layer.absolute</ref> プロパティが
		その順位を表すようになります。<r/>
	</desc>
	<ref>Layer.order</ref>
	<ref>Layer.absolute</ref>
	<ref>Layer.bringToBack</ref>
	<ref>Layer.bringToFront</ref>
</member>

<member>
	<name>visible</name>
	<type>property</type>
	<shortdesc>可視かどうか</shortdesc>
	<access>r/w</access>
	<desc>
		　可視かどうかを表します。値を設定することもできます。<r/>
		　偽を指定すると不可視になります。真を指定すると可視になります。<r/>
	</desc>
</member>

<member>
	<name>cached</name>
	<type>property</type>
	<shortdesc>キャッシュを行うか</shortdesc>
	<access>r/w</access>
	<desc>
		　キャッシュを行うかどうかを表します。値を設定することもできます。<r/>
		　キャッシュを行う設定の場合、自分自身と子レイヤをすべて重ね合わせた状態の画像をあらかじめ持っておくことになり、以後、自分や子レイヤに変更が加わらない限り、自分自身と子レイヤの重ね合わせに関する画像演算を行いません(変更があった場合は自動的にキャッシュを再構成します)。<r/>
		　キャッシュを行わない設定の場合は、画面更新の際に毎回重ね合わせの演算が行われます。<r/>
		　デフォルトではキャッシュは行いませんが、トランジション中は自動的にキャッシュが有効になります (ただしこのプロパティはトランジション中などで自動的に有効になるようなキャッシュの有無の状態までは表しません )。<r/>
		　あるレイヤの画像とその子レイヤの画像や状態に変化がないことが分かっていて、かつ画面が頻繁に書き換わるような場合では、そのレイヤではキャッシュを行った方が全体のパフォーマンスがあがります。<r/>
	</desc>
</member>

<member>
	<name>nodeVisible</name>
	<type>property</type>
	<shortdesc>ノードが可視かどうか</shortdesc>
	<access>r</access>
	<desc>
		　ノードが可視かどうかを表します。<r/>
		　親レイヤの中で一つでも不可視のレイヤがあると偽になります。<r/>
		　親レイヤがすべて可視ならば真になります。<r/>
	</desc>
</member>

<member>
	<name>neutralColor</name>
	<type>property</type>
	<shortdesc>中性色</shortdesc>
	<access>r/w</access>
	<desc>
		　レイヤの中性色を 0xAARRGGBB 形式で表します。値を設定することもできます。<r/>
		　レイヤの中性色は、<ref>Layer.type</ref> プロパティを変更したときに、そのタイプの中性色に設定されます。<r/>
		　中性色は、レイヤ画像のサイズが拡張されたときに、拡張された部分を塗りつぶす初期値になります。<r/>
		　値を設定することにより、レイヤ画像のサイズ拡張時の初期色を指定することができます。<r/>
	</desc>
</member>

<member>
	<name>hasImage</name>
	<type>property</type>
	<shortdesc>レイヤが画像を持っているかどうか</shortdesc>
	<access>r/w</access>
	<desc>
		　レイヤが画像を持っているかどうかを表します。値を設定することもできます。<r/>
		　真を指定するとレイヤは画像を持ちます。これがデフォルトです。<r/>
		　偽を指定するとレイヤの画像は開放され、レイヤは画像を持たなくなります。<r/>
		　<ref>Layer.type</ref>プロパティを設定するとhasImageは真にリセットされます。<r/>
		　レイヤが画像を持たない場合、<ref>Layer.type</ref>が<kw>ltOpaque</kw>ならばレイヤは全面
		<ref>Layer.neutralColor</ref>で塗りつぶされているとして表示されます。<r/>
		　それ以外のタイプの場合は完全に透明として扱われます。<r/>
		　このプロパティが偽のレイヤは<ref>Layer.hitType</ref>がhtMaskの場合は全面が不透明度0 (完全に透明)であると見なされます。また、描画やフォントを操作することはできません。<r/>
		　このプロパティが偽のレイヤは、通常、複数の子レイヤをまとめ、自分自身は透明なだけのレイヤとして使います。
	</desc>
</member>

<member>
	<name>opacity</name>
	<type>property</type>
	<shortdesc>不透明度</shortdesc>
	<access>r/w</access>
	<desc>
		　レイヤの不透明度を表します。値を設定することができます。<r/>
		　値は 0 〜 255 の整数で、値が大きいほど不透明な表示になります。<r/>
	</desc>
</member>

<member>
	<name>window</name>
	<type>property</type>
	<shortdesc>ウィンドウオブジェクト</shortdesc>
	<access>r</access>
	<desc>
		　このレイヤを保持しているウィンドウオブジェクトを表します。<r/>
	</desc>
</member>

<member>
	<name>isPrimary</name>
	<type>property</type>
	<shortdesc>プライマリレイヤかどうか</shortdesc>
	<access>r</access>
	<desc>
		　プライマリレイヤかどうかを表します。<r/>
		　プライマリレイヤは親を持たないレイヤで、一番奥に表示されるレイヤです。<r/>
	</desc>
</member>

<member>
	<name>left</name>
	<type>property</type>
	<shortdesc>左端位置</shortdesc>
	<access>r/w</access>
	<desc>
		　レイヤ左端位置を、親レイヤの表示座標におけるピクセル単位で指定します。<r/>
		　値を設定することもできます。<r/>
	</desc>
	<ref>Layer.setPos</ref>
</member>

<member>
	<name>top</name>
	<type>property</type>
	<shortdesc>上端位置</shortdesc>
	<access>r/w</access>
	<desc>
		　レイヤ上端位置を、親レイヤの表示座標におけるピクセル単位で指定します。<r/>
		　値を設定することもできます。<r/>
	</desc>
	<ref>Layer.setPos</ref>
</member>

<member>
	<name>width</name>
	<type>property</type>
	<shortdesc>横幅</shortdesc>
	<access>r/w</access>
	<desc>
		　レイヤの表示横幅をピクセル単位で指定します。<r/>
		　値を設定することもできます。<r/>
	</desc>
	<ref>Layer.setSize</ref>
</member>

<member>
	<name>height</name>
	<type>property</type>
	<shortdesc>縦幅</shortdesc>
	<access>r/w</access>
	<desc>
		　レイヤの表示縦幅をピクセル単位で指定します。<r/>
		　値を設定することもできます。<r/>
	</desc>
	<ref>Layer.setSize</ref>
</member>

<member>
	<name>imageLeft</name>
	<type>property</type>
	<shortdesc>レイヤ画像左端オフセット</shortdesc>
	<access>r/w</access>
	<desc>
		　レイヤの表示オフセットの左端をピクセル単位で指定します。<r/>
		　値を設定することもできます。<r/>
	</desc>
	<ref>Layer.setImagePos</ref>
</member>

<member>
	<name>imageTop</name>
	<type>property</type>
	<shortdesc>レイヤ画像上端オフセット</shortdesc>
	<access>r/w</access>
	<desc>
		　レイヤの表示オフセットの上端をピクセル単位で指定します。<r/>
		　値を設定することもできます。<r/>
	</desc>
	<ref>Layer.setImagePos</ref>
</member>


<member>
	<name>imageWidth</name>
	<type>property</type>
	<shortdesc>画像横幅</shortdesc>
	<access>r/w</access>
	<desc>
		　レイヤの画像の横幅をピクセル単位で指定します。<r/>
		　値を設定することもできます。<r/>
	</desc>
	<ref>Layer.setImageSize</ref>
</member>

<member>
	<name>imageHeight</name>
	<type>property</type>
	<shortdesc>画像縦幅</shortdesc>
	<access>r/w</access>
	<desc>
		　レイヤの画像の縦幅をピクセル単位で指定します。<r/>
		　値を設定することもできます。<r/>
	</desc>
	<ref>Layer.setSize</ref>
</member>

<member>
	<name>clipLeft</name>
	<type>property</type>
	<shortdesc>描画クリップ矩形左端位置</shortdesc>
	<access>r/w</access>
	<desc>
		　描画クリップ矩形の左端をピクセル単位で指定します。<r/>
		　値を設定することもできます。<r/>
	</desc>
	<ref>Layer.setClip</ref>
</member>

<member>
	<name>clipTop</name>
	<type>property</type>
	<shortdesc>描画クリップ矩形上端位置</shortdesc>
	<access>r/w</access>
	<desc>
		　描画クリップ矩形の上端をピクセル単位で指定します。<r/>
		　値を設定することもできます。<r/>
	</desc>
	<ref>Layer.setClip</ref>
</member>


<member>
	<name>clipWidth</name>
	<type>property</type>
	<shortdesc>描画クリップ矩形横幅</shortdesc>
	<access>r/w</access>
	<desc>
		　描画クリップ矩形の横幅をピクセル単位で指定します。<r/>
		　値を設定することもできます。<r/>
	</desc>
	<ref>Layer.setClip</ref>
</member>

<member>
	<name>clipHeight</name>
	<type>property</type>
	<shortdesc>描画クリップ矩形縦幅</shortdesc>
	<access>r/w</access>
	<desc>
		　描画クリップ矩形の縦幅をピクセル単位で指定します。<r/>
		　値を設定することもできます。<r/>
	</desc>
	<ref>Layer.setClip</ref>
</member>


<member>
	<name>type</name>
	<type>property</type>
	<shortdesc>レイヤ表示タイプ</shortdesc>
	<access>r/w</access>
	<desc>
		　レイヤの表示タイプを表します。値を設定することもできます。<r/>
		<ul>
		<li><tt><kw>ltOpaque</kw></tt> または <tt><kw>ltCoverRect</kw></tt> を指定すると、ピクセルごとのアルファブレンドが無効になります。<tt>ltCoverRect</tt>も<tt>ltOpaque</tt>も同じ意味です。
		<ref>Layer.opacity</ref> プロパティが 255 の場合は、完全に不透明の矩形として表示される
		事になります。マスク画像は無視されます。このタイプに適した描画方式(<ref>Layer.face</ref>で指定)は<tt><kw>dfOpaque</kw></tt>です。</li>
		<li><tt><kw>ltAlpha</kw></tt> または <tt><kw>ltTransparent</kw></tt> を指定すると、ピクセルごとのアルファブレンドが有効になります。<tt>ltTransparent</tt>も<tt>ltAlpha</tt>も同じ意味です。
		マスク画像が透過に用いられます。このタイプに適した描画方式は<tt><kw>dfAlpha</kw></tt>です。</li>
		<li><tt><kw>ltAddAlpha</kw></tt> を指定すると、ピクセルごとの加算アルファブレンドが有効になります。このタイプに適した描画方式は <tt><kw>dfAddAlpha</kw></tt> です。</li>
		<li><tt><kw>ltAdditive</kw></tt> を指定すると、加算合成が行われます。マスク画像は無視されます。このタイプに適した描画方式は <tt><kw>dfOpaque</kw></tt> です。</li>
		<li><tt><kw>ltSubtractive</kw></tt> を指定すると、減算合成が行われます。マスク画像は無視されます。このタイプに適した描画方式は <tt><kw>dfOpaque</kw></tt> です。</li>
		<li><tt><kw>ltMultiplicative</kw></tt> を指定すると、乗算合成が行われます。マスク画像は無視されます。このタイプに適した描画方式は <tt><kw>dfOpaque</kw></tt> です。</li>
		<li><tt><kw>ltDodge</kw></tt> を指定すると、覆い焼き合成が行われます。マスク画像は無視されます。このタイプに適した描画方式は <tt><kw>dfOpaque</kw></tt> です。</li>
		<li><tt><kw>ltDarken</kw></tt> を指定すると、比較(暗)合成が行われます。マスク画像は無視されます。このタイプに適した描画方式は <tt><kw>dfOpaque</kw></tt> です。</li>
		<li><tt><kw>ltLighten</kw></tt> を指定すると、比較(明)合成が行われます。マスク画像は無視されます。このタイプに適した描画方式は <tt><kw>dfOpaque</kw></tt> です。</li>
		<li><tt><kw>ltScreen</kw></tt> を指定すると、スクリーン乗算合成が行われます。マスク画像は無視されます。このタイプに適した描画方式は <tt><kw>dfOpaque</kw></tt> です。</li>
		</ul>
		　この他のレイヤ表示タイプについては<link href="GraphicSystem" />を参照してください。<r/>
	</desc>
	<ref>Layer.face</ref>
</member>

<member>
	<name>face</name>
	<type>property</type>
	<shortdesc>描画方式</shortdesc>
	<access>r/w</access>
	<desc>
		　レイヤへの描画方式を表します。値を設定することもできます。<r/>
		　吉里吉里 2.23 beta 1 以前では「描画面」と呼ばれていました。<r/>
		<ul>
		<li><tt><kw>dfAlpha</kw></tt> または <tt><kw>dfBoth</kw></tt> を指定すると、画像はアルファチャンネルつき画像と見なされ、描画されます。<tt>dfBoth</tt> でも <tt>dfAlpha</tt> でも同じになります。この描画方法に対応するレイヤタイプは <tt>ltTransparent</tt> または <tt>ltAlpha</tt> です。</li>
		<li><tt><kw>dfAddAlpha</kw></tt> を指定すると、画像は加算アルファチャンネルつき画像として見なされ、描画されます。この描画方法に対応するレイヤタイプは <tt>ltAddAlpha</tt> です。</li>
		<li> <tt><kw>dfOpaque</kw></tt> または <tt><kw>dfMain</kw></tt> を指定すると、レイヤの画像はすべて完全不透明であると見なされ、描画されます。この描画方法に対応するレイヤタイプは <tt>ltOpaque</tt> または <tt>ltCoverRect</tt>、または <tt>ltAdditive</tt> のような算術/論理演算を行うレイヤタイプです。</li>
		<li><tt><kw>dfMask</kw></tt> を指定すると、マスク画像(アルファチャンネル)を描画の対象にします。</li>
		<li><tt><kw>dfProvince</kw></tt> を指定すると、領域画像を描画の対象にします。</li>
		<li><tt><kw>dfAuto</kw></tt> を指定すると、現在の <ref>Layer.type</ref> プロパティに従って描画方式が自動的に決定されます。作成された直後のレイヤの描画方式は dfAuto です。</li>
		</ul>
		　このプロパティの値によっては操作できないメソッドがあります。<r/>
	</desc>
	<ref>Layer.type</ref>
</member>

<member>
	<name>holdAlpha</name>
	<type>property</type>
	<shortdesc>アルファチャンネルを保護するか</shortdesc>
	<access>r/w</access>
	<desc>
		　描画においてアルファチャンネルを保護するかどうかを指定します。値を設定することもできます。<r/>
		　デフォルトでは偽です。<r/>
		　吉里吉里 2.23 beta 1 以前では、各描画メソッドに hda というパラメータがあり、それがこのプロパティと同じ動作をしていましたが、2.23 beta 2 よりプロパティとして分離されました。<r/>
		　いくつかの描画演算では、<ref>Layer.face</ref> プロパティが <kw>dfOpaque</kw> のとき、画像のアルファチャンネル(マスク画像)を保持するかどうかをこのプロパティで指定できます。多くのメソッドでは、このプロパティを偽にした方が高速な描画が可能です。<ref>Layer.type</ref> が <kw>ltAlpha</kw> でも <kw>ltAddAlpha</kw> でも無い場合は、画像のアルファチャンネルは使用されないので、このプロパティを偽に設定しても問題有りません。ただし、このプロパティが偽だとアルファチャンネルは破壊されます。<r/>
		<r/>
		　以下のメソッドはこのプロパティの影響を受けません。<r/>
		<ref>Layer.loadImages</ref><r/>
		<ref>Layer.loadProvinceImage</ref><r/>
		<ref>Layer.setMainPixel</ref><r/>
		<ref>Layer.setMaskPixel</ref><r/>
		<ref>Layer.setProvincePixel</ref><r/>
		<ref>Layer.piledCopy</ref><r/>
		<ref>Layer.adjustGamma</ref>(常にアルファチャンネルは保護されます)<r/>
		<ref>Layer.doGrayScale</ref>(常にアルファチャンネルは保護されます)<r/>
		<ref>Layer.flipLR</ref><r/>
		<ref>Layer.flipUD</ref><r/>
		<ref>Layer.assignImages</ref><r/>
		<r/>
		　以下のメソッドはこのプロパティの影響を受けます。<r/>
		<ref>Layer.copyRect</ref><r/>
		<ref>Layer.stretchCopy</ref><r/>
		<ref>Layer.affineCopy</ref><r/>
		<ref>Layer.fillRect</ref><r/>
		<ref>Layer.colorRect</ref><r/>
		<ref>Layer.drawText</ref><r/>
		<ref>Layer.pileRect</ref><r/>
		<ref>Layer.blendRect</ref><r/>
		<ref>Layer.operateRect</ref><r/>
		<ref>Layer.stretchPile</ref><r/>
		<ref>Layer.stretchBlend</ref><r/>
		<ref>Layer.operateStretch</ref><r/>
		<ref>Layer.affinePile</ref><r/>
		<ref>Layer.affineBlend</ref><r/>
		<ref>Layer.operateAffine</ref><r/>
	</desc>
</member>

<member>
	<name>imageModified</name>
	<type>property</type>
	<shortdesc>画像が変更されたか</shortdesc>
	<access>r/w</access>
	<desc>
		　レイヤの画像が変更されたかどうかを表します。値を設定することもできます。<r/>
		　レイヤの画像に描画を行ったり、レイヤの画像のサイズを変更したりすると自動的に真に設定されます。<r/>
		　このプロパティを偽に設定しておけば、レイヤの画像が変更されると真になるので、
		レイヤの画像が変更されたかどうかを知ることができます。<r/>
		　このプロパティ自体は、レイヤの動作に影響を与えません。<r/>
	</desc>
</member>

<member>
	<name>hitType</name>
	<type>property</type>
	<shortdesc>当たり判定のタイプ</shortdesc>
	<access>r/w</access>
	<desc>
		　マウスイベントの当たり判定のタイプを表します。値を設定することもできます。<r/>
		　<tt><kw>htProvince</kw></tt> を指定すると、領域画像において 0 以外の領域のみマウスイベントを受け取る
		ようになります。<r/>
		　<tt><kw>htMask</kw></tt> を指定すると、マスク(不透明度)画像の値が、<ref>Layer.hitThreshold</ref> プロパティで指
		定した値以上の場合のみマウスイベントを受け取るようになります。<r/>
		　受け取られなかったマウスイベントは、より奥のレイヤで処理されます。<r/>
		　初期状態では <tt>htMask</tt> となっています。<r/>
	</desc>
</member>

<member>
	<name>hitThreshold</name>
	<type>property</type>
	<shortdesc>当たり判定の敷居値</shortdesc>
	<access>r/w</access>
	<desc>
		　マウスイベントの当たり判定の式位置を表します。値を設定することもできます。<r/>
		　このプロパティは <ref>Layer.hitType</ref> プロパティが htMask の時のみ有効で、
		マスク(不透明度)画像の値がこのプロパティで指定した値以上の場合にマウスメッセージが受け取られます。<r/>
		0 を指定するとすべてのマウスメッセージが受け取られます。256 を指定するとすべてのマウスメッセージは
		受け取られません。<r/>
		　初期状態では 16 となっています。<r/>
	</desc>
</member>

<member>
	<name>cursor</name>
	<type>property</type>
	<shortdesc>マウスカーソル</shortdesc>
	<access>r/w</access>
	<desc>
		　レイヤのマウスカーソルを表します。値を設定することもできます。<r/>
		　マウスカーソルには、cr で始まる<kw>マウスカーソル定数</kw> か、.cur の拡張子を持つ
		マウスカーソルや .ani の拡張子を持つアニメーションマウスカーソルのストレージ名を
		指定することができます。<r/>
	</desc>
</member>

<member>
	<name>cursorX</name>
	<type>property</type>
	<shortdesc>マウスカーソル x 位置</shortdesc>
	<access>r/w</access>
	<desc>
		　レイヤのマウスカーソルの x 座標値を、表示座標におけるピクセル単位で表します。値を設定することもできます。<r/>
		　値を設定するときは、cursorX プロパティを設定しただけではマウスカーソルは移動しません。
		続いて cursorY プロパティを設定したときにマウスカーソルが移動します。<r/>
	</desc>
	<ref>Layer.setCursorPos</ref>
</member>

<member>
	<name>cursorY</name>
	<type>property</type>
	<shortdesc>マウスカーソル y 位置</shortdesc>
	<access>r/w</access>
	<desc>
		　レイヤのマウスカーソルの y 座標値を、表示座標におけるピクセル単位で表します。値を設定することもできます。<r/>
		　値を設定するときは、cursorX プロパティを設定しただけではマウスカーソルは移動しません。
		続いて cursorY プロパティを設定したときにマウスカーソルが移動します。<r/>
	</desc>
	<ref>Layer.setCursorPos</ref>
</member>


<member>
	<name>hint</name>
	<type>property</type>
	<shortdesc>ヒント</shortdesc>
	<access>r/w</access>
	<desc>
		　レイヤのヒント文字列を表します。値を設定することもできます。<r/>
		　ヒント文字列はレイヤ上にマウスカーソルを少し静止させたときに、マウスカーソルの近くに
		表示される文字列です。<r/>
		　ヒントを表示させたくない場合は空文字列を指定します。<r/>
	</desc>
	<ref>Layer.showParentHint</ref>
</member>

<member>
	<name>showParentHint</name>
	<type>property</type>
	<shortdesc>親レイヤのヒントを引き継ぐか</shortdesc>
	<access>r/w</access>
	<desc>
		　親レイヤのヒントを引き継ぐかどうかを表します。値を設定することもできます。<r/>
		　真の場合は、<ref>Layer.hint</ref> プロパティが空文字列の場合は、親レイヤをさか
		のぼり、ヒントが設定されているレイヤのヒントをそのまま引き継いで
		表示します。Layer.hint プロパティが空文字列でなかった場合はそれを表示します。<r/> 
		　偽の場合は、Layer.hint プロパティが空文字列でなければそれを表示し、空文字列であれば
		ヒントは表示しません。<r/>
	</desc>
</member>

<member>
	<name>focusable</name>
	<type>property</type>
	<shortdesc>フォーカスを受け取れるかどうか</shortdesc>
	<access>r/w</access>
	<desc>
		　フォーカスを受け取れるかどうかを表します。値を設定することもできます。<r/>
		　真の場合はレイヤはフォーカスを受け取れます。<r/>
		　偽の場合はレイヤはフォーカスを受け取れません。<r/>
	</desc>
</member>

<member>
	<name>prevFocusable</name>
	<type>property</type>
	<shortdesc>前方のフォーカスを受け取れるレイヤ</shortdesc>
	<access>r</access>
	<desc>
		　フォーカスを受け取れるレイヤを前方検索します。<r/>
		　該当するレイヤがなければ null になります。<r/>
	</desc>
</member>

<member>
	<name>nextFocusable</name>
	<type>property</type>
	<shortdesc>後方のフォーカスを受け取れるレイヤ</shortdesc>
	<access>r</access>
	<desc>
		　フォーカスを受け取れるレイヤを後方検索します。<r/>
		　該当するレイヤがなければ null になります。<r/>
	</desc>
</member>

<member>
	<name>joinFocusChain</name>
	<type>property</type>
	<shortdesc>フォーカスチェーンに参加するか</shortdesc>
	<access>r/w</access>
	<desc>
		　フォーカスチェーンに参加するかどうかを表します。<r/>
		　真を指定するとフォーカスチェーンに参加し、<ref>Layer.prevFocusable</ref> などに
		現れるようになったり、TAB キーなどでそのレイヤにフォーカスを移動したりできるように
		なります。<r/>
		　偽を指定するとフォーカスチェーンには参加しませんが、フォーカスを <ref>Layer.focus</ref>
		メソッドなどで受け取ることはできます。<r/>
	</desc>
</member>

<member>
	<name>focused</name>
	<type>property</type>
	<shortdesc>フォーカスされているかどうか</shortdesc>
	<access>r</access>
	<desc>
		　フォーカスされているかどうかを表します。<r/>
		　真の場合はフォーカスされています。偽の場合はされていません。<r/>
	</desc>
</member>

<member>
	<name>enabled</name>
	<type>property</type>
	<shortdesc>操作可能かどうか</shortdesc>
	<access>r/w</access>
	<desc>
		　レイヤが操作可能かどうかを表します。値を設定することもできます。<r/>
		　真の場合は操作可能で、フォーカスなどを受け取ることができます。<r/>
		　偽の場合は操作不能で、フォーカスなどを受け取ることはできません。<r/>
	</desc>
</member>

<member>
	<name>nodeEnabled</name>
	<type>property</type>
	<shortdesc>レイヤノードが操作可能かどうか</shortdesc>
	<access>r</access>
	<desc>
		　レイヤノードが操作可能かどうかを表します。<r/>
		　自分自身が操作不能だったり、親のレイヤの中に操作不能なレイヤがある場合は偽になります。<r/>
		　それ以外の場合は真になります。<r/>
	</desc>
</member>

<member>
	<name>attentionLeft</name>
	<type>property</type>
	<shortdesc>注視左端位置</shortdesc>
	<access>r/w</access>
	<desc>
		　注視左端位置を、表示座標におけるピクセル単位で表します。値を設定することもできます。<r/>
	</desc>
	<ref>Layer.setAttentionPos</ref>
	<ref>Layer.useAttention</ref>
</member>

<member>
	<name>attentionTop</name>
	<type>property</type>
	<shortdesc>注視上端位置</shortdesc>
	<access>r/w</access>
	<desc>
		　注視上端位置を、表示座標におけるピクセル単位で表します。値を設定することもできます。<r/>
	</desc>
	<ref>Layer.setAttentionPos</ref>
	<ref>Layer.useAttention</ref>
</member>


<member>
	<name>useAttention</name>
	<type>property</type>
	<shortdesc>注視情報を使用するかどうか</shortdesc>
	<access>r/w</access>
	<desc>
		　注視情報を使用するかどうかを表します。値を設定することもできます。<r/>
		　真が指定された場合は、そのレイヤの注視情報が使用されます。<r/>
		　偽が指定された場合は、そのレイヤの親の注視情報が ( もしあれば ) 使用されます。<r/>
	</desc>
	<ref>Layer.setAttentionPos</ref>
	<ref>Layer.attentionLeft</ref>
	<ref>Layer.attentionTop</ref>
</member>

<member>
	<name>imeMode</name>
	<type>property</type>
	<shortdesc>IMEモード</shortdesc>
	<access>r/w</access>
	<desc>
		　IMEのモードを表します。値を設定することもできます。<r/>
		　レイヤにフォーカスが設定されると、IMEはここで指定したモードに切り替わります。<r/>
		　設定可能な値は以下の通りです。<r/>
		<ul>
		<li><tt><kw>imDisable</kw></tt> を指定すると、IMEは無効になります。IMEを使用した入力はできませんし、ユーザの操作でもIMEを有効にすることはできません。<r/></li>
		<li><tt><kw>imClose</kw></tt> を指定すると、IMEは無効になります。imDisableと異なり、ユーザの操作でIMEを有効にすることができます。<r/></li>
		<li><tt><kw>imOpen</kw></tt> を指定すると、IMEは有効になります。<r/></li>
		<li><tt><kw>imDontCare</kw></tt> を指定すると、IMEの有効/無効の状態は、前の状態を引き継ぎます。ユーザの操作によってIMEを有効にしたり無効にしたりすることができます。日本語入力においては、半角/全角文字をユーザに自由に入力させる場合の一般的なモードです。<r/></li>
		<li><tt><kw>imSAlpha</kw></tt> を指定すると、IMEは有効になり、半角アルファベット入力モードになります。<r/></li>
		<li><tt><kw>imAlpha</kw></tt> を指定すると、IMEは有効になり、全角アルファベット入力モードになります。<r/></li>
		<li><tt><kw>imHira</kw></tt> を指定すると、IMEは有効になり、ひらがな入力モードになります。<r/></li>
		<li><tt><kw>imSKata</kw></tt> を指定すると、IMEは有効になり、半角カタカナ入力モードになります。<r/></li>
		<li><tt><kw>imKata</kw></tt> を指定すると、IMEは有効になり、全角カタカナ入力モードになります。<r/></li>
		<li><tt><kw>imChinese</kw></tt> を指定すると、IMEは有効になり、2バイト中国語入力を受け付けるモードになります。日本語環境では使用できません。<r/></li>
		<li><tt><kw>imSHanguel</kw></tt> を指定すると、IMEは有効になり、1バイト韓国語入力を受け付けるモードになります。日本語環境では使用できません。<r/></li>
		<li><tt><kw>imHanguel</kw></tt> を指定すると、IMEは有効になり、2バイト韓国語入力を受け付けるモードになります。日本語環境では使用できません。<r/></li>
		</ul>
		未指定時は imDisable になります。<r/>
	</desc>
	<ref>Window.imeMode</ref>
</member>

<member>
	<name>callOnPaint</name>
	<type>property</type>
	<shortdesc>onPaint イベントを呼ぶかどうか</shortdesc>
	<access>r/w</access>
	<desc>
		　<ref>Layer.onPaint</ref> イベントを呼ぶかどうかを表します。値を設定することもできます。<r/>
		　真を指定すると、次回の画面への描画の直前に onPaint イベントを呼ぶようになります。onPaint イベント
		が処理し終わるとこのプロパティは自動的に偽に戻されます。<r/>
		　偽が指定されている状態では onPaint イベントは発生しません。<r/>
		　<ref>Layer.update</ref> メソッドはこのプロパティを真に設定します。<r/>
	</desc>
</member>

<member>
	<name>font</name>
	<type>property</type>
	<shortdesc>フォント</shortdesc>
	<access>r</access>
	<desc>
		　<ref>Layer.drawText</ref> メソッドで描画に使用するフォントを表す <ref>Font</ref> クラスの
		オブジェクトです。<r/>
	</desc>
</member>

<member>
	<name>name</name>
	<type>property</type>
	<shortdesc>レイヤ名</shortdesc>
	<access>r/w</access>
	<desc>
		　レイヤ名を表します。値を設定することもできます。<r/>
		　このプロパティで設定した内容は、Layerクラスの動作には影響しません。<r/>
	</desc>
</member>

<member>
	<name>mainImageBuffer</name>
	<type>property</type>
	<shortdesc>メイン画像バッファポインタ</shortdesc>
	<access>r</access>
	<desc>
		　メイン画像 ( 色とマスク(不透明度)の情報を含む 32bpp のビットマップ ) の画像バッファ左上隅へのポインタ
		を表します。<r/>
		　このプロパティは、プラグインなどのために画像バッファへの直接のアクセスの手段を提供する
		ためにあります。<r/>
		　整数型で返されますが、プラグインなどでは適切な型 ( const unsigned long * 等 ) にキャストして使って
		ください。<r/>
		　このプロパティで得られたポインタには値を書き込まないでください。
		<ref>Layer.mainImageBufferForWrite</ref> で得られたポインタならば書き込むことができます。<r/>
		　レイヤに画像が割り当てられていない場合は NULL (0) が返ります。<r/>
		　画像のサイズは <ref>Layer.imageWidth</ref> と <ref>Layer.imageHeight</ref> プロパティが
		表しています。<r/>
		　ポインタの計算方法は <ref>Layer.mainImageBufferPitch</ref> を参照してください。<r/>
	</desc>
	<ref>Layer.mainImageBufferForWrite</ref>
	<ref>Layer.mainImageBufferPitch</ref>
</member>

<member>
	<name>mainImageBufferForWrite</name>
	<type>property</type>
	<shortdesc>メイン画像バッファポインタ(書き込み用)</shortdesc>
	<access>r</access>
	<desc>
		　メイン画像 ( 色とマスク(不透明度)の情報を含む 32bpp のビットマップ ) の画像バッファ左上隅へのポインタ
		を表します。<r/>
		　このプロパティは、プラグインなどのために画像バッファへの直接のアクセスの手段を提供する
		ためにあります。<r/>
		　整数型で返されますが、プラグインなどでは適切な型 ( unsigned long * 等 ) にキャストして使って
		ください。<r/>
		　このプロパティで得られたポインタには <ref>Layer.mainImageBuffer</ref> と異なり、
		値を書き込むことができます。吉里吉里内部では全く同じ画像は複数のレイヤ間等で共有しますが、
		このプロパティを参照するとその共有状態を解除します。<r/>
		　レイヤに画像が割り当てられていない場合は NULL (0) が返ります。<r/>
		　画像のサイズは <ref>Layer.imageWidth</ref> と <ref>Layer.imageHeight</ref> プロパティが
		表しています。<r/>
		　ポインタの計算方法は <ref>Layer.mainImageBufferPitch</ref> を参照してください。<r/>
	</desc>
	<ref>Layer.mainImageBuffer</ref>
	<ref>Layer.mainImageBufferPitch</ref>
</member>

<member>
	<name>mainImageBufferPitch</name>
	<type>property</type>
	<shortdesc>メイン画像バッファピッチ</shortdesc>
	<access>r</access>
	<desc>
		　メイン画像 ( 色とマスク(不透明度)の情報を含む 32bpp のビットマップ ) の画像バッファのピッチ
		( 一つ下のスキャンラインまでのバイト数 ) を表します。<r/>
		　このプロパティは、プラグインなどのために画像バッファへの直接のアクセスの手段を提供する
		ためにあります。<r/>
		　tjs_uint32 が 32bit の整数型、tjs_uint8 が 8bit (1byte) の整数型として、画像位置 (x, y) への
		ポインタは C 言語で書くと以下のように計算することができます。<r/>
		<tt>( (tjs_uint32*)( (tjs_uint8*)mainImageBuffer + y*mainImageBufferPitch )) + x</tt><r/>
		　このプロパティは、次のスキャンラインまでのピクセル数ではなく、バイト数を返すことに
		注意してください。この数値は画像横幅ぴったりに必要なバイト数よりも若干大きい場合があります。<r/>
		　このプロパティは値が負になり得ますので注意してください。<r/>
	</desc>
	<ref>Layer.mainImageBuffer</ref>
	<ref>Layer.mainImageBufferForWrite</ref>
</member>

<member>
	<name>provinceImageBuffer</name>
	<type>property</type>
	<shortdesc>領域画像バッファポインタ</shortdesc>
	<access>r</access>
	<desc>
		　領域画像 ( 領域の情報を含む 8bpp のビットマップ ) の画像バッファ左上隅へのポインタ
		を表します。<r/>
		　このプロパティは、プラグインなどのために画像バッファへの直接のアクセスの手段を提供する
		ためにあります。<r/>
		　整数型で返されますが、プラグインなどでは適切な型 ( const unsigned char * 等 ) にキャストして使って
		ください。<r/>
		　このプロパティで得られたポインタには値を書き込まないでください。
		<ref>Layer.provinceImageBufferForWrite</ref> で得られたポインタならば書き込むことができます。<r/>
		　画像が割り当てられていない場合は NULL (0) が返ります。画像が割り当てられていない場合は
		全域が領域番号 0 であると見なす必要があります。<r/>
		　画像のサイズは <ref>Layer.imageWidth</ref> と <ref>Layer.imageHeight</ref> プロパティが
		表しています。<r/>
		　ポインタの計算方法は <ref>Layer.provinceImageBufferPitch</ref> を参照してください。<r/>
	</desc>
	<ref>Layer.provinceImageBufferForWrite</ref>
	<ref>Layer.provinceImageBufferPitch</ref>
</member>

<member>
	<name>provinceImageBufferForWrite</name>
	<type>property</type>
	<shortdesc>領域画像バッファポインタ(書き込み用)</shortdesc>
	<access>r</access>
	<desc>
		　領域画像 ( 領域の情報を含む 8bpp のビットマップ ) の画像バッファ左上隅へのポインタ
		を表します。<r/>
		　このプロパティは、プラグインなどのために画像バッファへの直接のアクセスの手段を提供する
		ためにあります。<r/>
		　整数型で返されますが、プラグインなどでは適切な型 ( unsigned char * 等 ) にキャストして使って
		ください。<r/>
		　このプロパティで得られたポインタには <ref>Layer.provinceImageBuffer</ref> と異なり、
		値を書き込むことができます。吉里吉里内部では全く同じ画像は複数のレイヤ間等で共有しますが、
		このプロパティを参照するとその共有状態を解除します。<r/>
		　レイヤに画像が割り当てられていない場合は自動的にこのプロパティを参照した時点で
		割り当てられ、全域が領域番号 0 で初期化されます。<r/>
		　画像のサイズは <ref>Layer.imageWidth</ref> と <ref>Layer.imageHeight</ref> プロパティが
		表しています。<r/>
		　ポインタの計算方法は <ref>Layer.provinceImageBufferPitch</ref> を参照してください。<r/>
	</desc>
	<ref>Layer.provinceImageBuffer</ref>
	<ref>Layer.provinceImageBufferPitch</ref>
</member>

<member>
	<name>provinceImageBufferPitch</name>
	<type>property</type>
	<shortdesc>領域画像バッファピッチ</shortdesc>
	<access>r</access>
	<desc>
		　領域画像 ( 領域の情報を含む 8bpp のビットマップ ) の画像バッファのピッチ
		( 一つ下のスキャンラインまでのバイト数 ) を表します。<r/>
		　このプロパティは、プラグインなどのために画像バッファへの直接のアクセスの手段を提供する
		ためにあります。<r/>
		　tjs_uint8 が 8bit (1byte) の整数型として、画像位置 (x, y) への
		ポインタは C 言語で書くと以下のように計算することができます。<r/>
		<tt>(tjs_uint8*)provinceImageBuffer + y*provinceImageBufferPitch + x</tt><r/>
		　このプロパティの数値は画像横幅ぴったりに必要なバイト数よりも若干大きい場合があります。<r/>
		　このプロパティは値が負になり得ますので注意してください。<r/>
	</desc>
	<ref>Layer.provinceImageBuffer</ref>
	<ref>Layer.provinceImageBufferForWrite</ref>
</member>




</doc>
